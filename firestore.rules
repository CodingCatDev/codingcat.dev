rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;

          function isAllowed(){
    	 return request.resource.data.keys().hasAny(['is_pro']) == false ||
              ( request.resource.data.keys().hasAny(['is_pro']) && request.resource.data.is_pro == resource.data.is_pro );
    }
    function isNotAddingAdmin(){
    	return request.resource.data.roles.keys().hasAny(['admin']) == false;
    }
    function isAlreadyAdmin(){
      return ( isNotAddingAdmin() || resource.data.roles.keys().hasAny(['admin']) == true );
    }
    function isSelf(userId){
			return request.auth.uid == userId;
    }

    function isAlex(){
      return request.auth.uid == 'xdtuIhzUlhPKRCCnatKTt2lm7Nl1';
    }

      match /podcasts/{id} {
        allow read: if true;
        allow write: if false;
      }
      match /posts/{id} {
        allow read: if true;
        allow write: if isAlex()
      }
      match /tutorials/{id} {
        allow read: if true;
        allow write: if isAlex()
      }
      match /courses/{id} {
        allow read: if true;
        allow write: if isAlex()
      }
      match /community/{id} {
        allow read: if true;
        allow write: if isAlex()
      }
    }
  }
}