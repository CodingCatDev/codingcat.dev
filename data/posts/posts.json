{
  "ajonp-rebranded": {
    "title": "AJonP &#8211; Rebranded",
    "date": "2018-11-04T23:21:18+00:00",
    "status": "publish",
    "permalink": "/ajonp-rebranded",
    "author": "Alex Patterson",
    "excerpt": "Rebranding AJonP, the beginning of going for it in WebDev!",
    "type": "post",
    "id": 421,
    "thumbnail": "/v1600704496/ccd-cloudinary/69d43ff4c5f4fbfbc8dec13b78cacca4c0c94d55-1429x467-1/69d43ff4c5f4fbfbc8dec13b78cacca4c0c94d55-1429x467-1-150x150.png",
    "category": [
      "CodingCatDev"
    ],
    "tag": [],
    "post_format": [
      "Video"
    ],
    "preview": "<iframe allow=\"accelerometer; autoplay; clipboard-write; …",
    "content": "\n<iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/NlXVWtgLNjY?feature=oembed\" title=\"AJonP - New Youtube Sting\" width=\"640\"></iframe>\n\nAJonP – Purr-fect Solutions\n===========================\n\nSomething was a miss with my old site, I just couldn’t care to ever update it. I was bored by trying to constantly fight with WordPress issues, updates, plugins…At the same time I was hanging around my favorite Slack channel [Angular Firebase](https://angularfirebase.slack.com/) and [Jeff](https://twitter.com/angularfirebase) mentions he is building an awesome CMS with [Hugo](https://gohugo.io/), called [fireship.io](http://fireship.io/).My initial thought was I am an Angular developer, why would I go back to creating static sites, are people ???? ???? crazy!?!That is when it struck me, all the complaints about setting up [SEO](https://support.google.com/webmasters/answer/7451184?hl=en), [Open Graph](http://ogp.me/), [Twitter Cards](https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/abouts-cards.html), [Angular Universl](https://angularfirebase.com/lessons/server-side-rendering-firebase-angular-universal/) and having a good version control with a small footprint for a [PWA](https://developers.google.com/web/progressive-web-apps/) could be solved with using [JAMStack](https://jamstack.org/).\n\nLet the fun begin\n=================\n\nThe Mascot\n----------\n\nSo I jumped in (probably head first and too fast), I decided I wanted something to represent coding. I always meant for AJONP to mean Alex Jon on Programming. But I started sketching things out on my idea notepad, and had a basset hound wearing an Angular logo collar. I showed it to my wife, she said, why don’t you make it a cat, since we have a cat.\n\n<figure class=\"wp-block-image size-large\">![](https://res.cloudinary.com/ajonp/image/upload/v1600704495/codingcat.dev/image_42307ab6.jpeg)</figure><figure class=\"wp-block-image\">![Xena](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/v1571969350/ajonp-ajonp-com/welcome/xena.png)</figure>So I shifted left and started trying to learn some basic Photoshop skills to make the Cat named AJ. I learned very quickly that I should apprectiate designers more because my logo is pretty rough, but it works for now ????.\n\n<figure class=\"wp-block-image size-large\">![](https://res.cloudinary.com/ajonp/image/upload/v1600704494/codingcat.dev/image.png)</figure><figure class=\"wp-block-image\">![AJ](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/welcome/ajonp-ajonp-com-logo-round.png)</figure>The Youtube Logo Sting\n----------------------\n\nI did some digging about creating my own YouTube bumper, which I learned is called a “sting” and purchased one from [Videohive](https://videohive.net/tags/logo%20sting). I edited a few things by adding my logo and some basic title/colors.\n\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">https://youtu.be/OPr697VNWo0</div></figure>Try less, learn more.\n=====================\n\nNow after having done all that, [Jeff](https://twitter.com/angularfirebase) had it all made simple right here and I missed it!\n\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">https://youtu.be/d6V-nGaNbhw</div></figure>",
    "iso8601Date": "2018-11-04T18:21:18-05:00",
    "basename": "ajonp-rebranded"
  },
  "adding-angular-components-to-your-static-site": {
    "title": "Adding Angular Components to your static site",
    "date": "2019-09-12T16:53:25+00:00",
    "status": "publish",
    "permalink": "/adding-angular-components-to-your-static-site",
    "author": "Alex Patterson",
    "excerpt": "Utilizing Web Components within Hugo Static Site Generator (or any static site), to take Stripe/PayPal payments and more!",
    "type": "post",
    "id": 763,
    "thumbnail": "/v1600706381/ccd-cloudinary/a7c61440d3c5bd915a0deb54eeeb364dd72d59c9-1920x1080-1/a7c61440d3c5bd915a0deb54eeeb364dd72d59c9-1920x1080-1-150x150.png",
    "category": [
      "Uncategorized"
    ],
    "tag": [
      "angular"
    ],
    "post_format": [],
    "preview": "Adding dynamic features to a static site. …",
    "content": "\nAdding dynamic features to a static site.\n=========================================\n\nThis is a multi part series covering all the different types of Web Components I am using on the [](https://ajonp.com/)[](https://ajonp.com)[](https://ajonp.com)<https://ajonp.com> site currently. I just wanted to show how you can use each of them at a somewhat high level.\n\nWhy Angular Components[](https://codingcat.dev/blog/adding-angular-components-to-your-static-site#why-angular-components)\n-------------------------------------------------------------------------------------------------------------------------\n\nI needed to add payments to [](https://ajonp.com/)[](https://AJonP.com)[](https://AJonP.com)<https://AJonP.com> so we can start supporting longer course tutorials. So I sent out a poll on Twitter to see what we should build the Webcomponents using.\n\n<figure class=\"wp-block-image\">![Twitter Poll](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/v1568114418/ajonp-ajonp-com/blog/xfjzcgib93wjghj5a5a6.png)</figure>### Demo[](https://codingcat.dev/blog/adding-angular-components-to-your-static-site#demo)\n\n[](https://www.youtube.com/embed/iyvVtOsMThI?autoplay=0&amp;rel=0&amp;showinfo=0&amp;modestbranding=1I)[](https://www.youtube.com/embed/iyvVtOsMThI?autoplay=0&amp;rel=0&amp;showinfo=0&amp;modestbranding=1I)<https://www.youtube.com/embed/iyvVtOsMThI?autoplay=0&amp;rel=0&amp;showinfo=0&amp;modestbranding=1I> plan to share a more in depth course on how to build all of this! For now I thought it would be cool just to see it all in action. Notice how after the site loads Firebase kicks in and checks to see if you are a pro member then dynamically hides items using a webcomponent that understands user state. The great part here is that I have many of the Angular items that access firebase already created and I don’t have to reinvent the wheel!\n\n### Thank You[](https://codingcat.dev/blog/adding-angular-components-to-your-static-site#thank-you)\n\nWho do I have to thank for teaching all of this to me? [Jeff Delaney](https://fireship.io/contributors/jeff-delaney/) at [](https://fireship.io/courses/stripe-payments/)[](https://fireship.io/courses/stripe-payments/)[](https://fireship.io/courses/stripe-payments/)<https://fireship.io/courses/stripe-payments/>\n\nAllowing User[](https://codingcat.dev/blog/adding-angular-components-to-your-static-site#allowing-user)\n-------------------------------------------------------------------------------------------------------\n\nIt is as easy as using `<ajonp-allow-if>` to wrap around any element and then use display none within that component.\n\n### No more ads[](https://codingcat.dev/blog/adding-angular-components-to-your-static-site#no-more-ads)\n\nAn example of this is when a user registers and becomes a `Pro` member of AJonP, they will no longer see ads.For this I can just wrap my Hugo Go Partial:\n\n```\n<pre class=\"wp-block-code\">```\n<ajonp-allow-if level=\"not-user\">\n    <ion-row>\n        <ion-col text-center>\n            <div class=\"ajonp-hide-lg-down\">\n                <!-- /21838128745/ajonp_new -->\n                <div id=\"div-gpt-ad-xxxxxxxxxxxxxx-0\" style=\"width: 970px; height: 90px; margin: auto;\">\n                    <script> googletag.cmd.push(function () { googletag.display('div-gpt-ad-xxxxxxxxxxxxxx-0'); }); </script>\n                </div>\n            </div>\n        </ion-col>\n    </ion-row>\n</ajonp-allow-if>\n```\n```\n\nAngular Parts[](https://codingcat.dev/blog/adding-angular-components-to-your-static-site#angular-parts)\n-------------------------------------------------------------------------------------------------------\n\n### Template[](https://codingcat.dev/blog/adding-angular-components-to-your-static-site#template)\n\nThe template is pretty straight forward, Angular either shows the component or removes it based on the `*ngIf`.\n\n```\n<pre class=\"wp-block-code\">```\n<div *ngIf=\"allowed\">\n    <slot></slot>\n</div>\n<div *ngIf=\"!allowed\">\n    <slot name=\"falsey\"></slot>\n</div>\n```\n```\n\n### Angular Component[](https://codingcat.dev/blog/adding-angular-components-to-your-static-site#angular-component)\n\nSome things to note are the [code&gt;@Input&lt;/code](mailto:code>@Input</code) decorations. This allows for you to pass in all of these different items as attributes on the `ajonp-allow-if` component. In our example above I pass in `level=\"not-user\"` to the `@Input level` decorator.What is wonderful about using Angular is that you get all the nice dependency injection that you would normally get with a standard Angular component!\n\n```\n<pre class=\"wp-block-code\">```\nimport { Component, ViewEncapsulation, ChangeDetectorRef, Input, AfterViewInit, ElementRef } from '@angular/core'; \nimport { AuthService } from '../../core/services/auth.service'; \n\n@Component({ templateUrl: './allow-if.component.html', encapsulation: ViewEncapsulation.ShadowDom }) \n\nexport class AllowIfComponent implements AfterViewInit { \n    @Input() selector; \n    @Input() level: 'pro' | 'user' | 'not-pro' | 'not-user' | 'not-user-not-pro'; \n    @Input() reverse = false; \n    @Input() product; constructor( private cd: ChangeDetectorRef, public auth: AuthService, private el: ElementRef, ) { \n\n    } \n    ngAfterViewInit() { \n        this.el.nativeElement.style.visibility = 'visible'; \n    } \n    allowed() { \n        const u = this.auth.userDoc; \n        const products = u && u.products && Object.keys(u.products); \n\n        // Handle Product \n        if (products && products.includes(this.product)) { \n            return true; \n        } \n        // Handle Level \n        switch (this.level) { \n            case 'user': \n                return u; \n            case 'pro': \n                return u && u.is_pro; \n            case 'not-pro': \n                return u && !u.is_pro; \n            case 'not-user': \n                return !u; \n            case 'not-user-not-pro': return !u || !u.is_pro; \n            default: return false; \n        } \n    } \n} \n```\n```\n\n### AuthService[](https://codingcat.dev/blog/adding-angular-components-to-your-static-site#authservice)\n\nHere you can see I am utilizing the full firebase library for authentication, which is sweet!\n\n```\n<pre class=\"wp-block-code\">```\nimport { Injectable, ApplicationRef } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport { user } from 'rxfire/auth';\nimport { docData } from 'rxfire/firestore';\n\nimport { Observable, of } from 'rxjs';\nimport { switchMap, take, tap, isEmpty } from 'rxjs/operators';\n\nimport { AjonpUser } from '../models/ajonp-user';\nimport { AngularfirebaseService } from './angularfirebase.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  authClient = firebase.auth();\n\n  user$: Observable<any>;\n  userDoc$: Observable<any>;\n\n  user;\n  userDoc;\n\n  constructor(private app: ApplicationRef, private db: AngularfirebaseService) {\n    // Why service subsciptions? Maintain state between route changes with change detection.\n    this.user$ = user(this.authClient)\n      .pipe(tap(u => {\n        this.user = u;\n        this.app.tick();\n      }));\n\n    this.userDoc$ = this.getUserDoc$('users').pipe(tap(u => {\n      this.userDoc = u;\n      this.app.tick();\n    }));\n\n    this.userDoc$.pipe(take(1)).subscribe((u: AjonpUser) => {\n      if (u && Object.keys(u).length) {\n        const ajonpUser: AjonpUser = { uid: u.uid };\n        this.updateUserData(ajonpUser).catch(error => {\n          console.log(error);\n        });\n      } else {\n        if (this.user && Object.keys(this.user).length) {\n          const data: AjonpUser = {\n            uid: this.user.uid,\n            email: this.user.email,\n            emailVerified: this.user.emailVerified,\n            displayName: this.user.displayName || this.user.email || this.user.phoneNumber,\n            phoneNumber: this.user.phoneNumber,\n            photoURL: this.user.photoURL,\n            roles: {\n              subscriber: true\n            }\n          };\n          this.setUserData(data).catch(error => {\n            console.log(error);\n          });\n        }\n      }\n    });\n\n    this.user$.subscribe();\n    this.userDoc$.subscribe();\n  }\n\n  getUserDoc$(col) {\n    return user(this.authClient).pipe(\n      switchMap(u => {\n        return u ? docData(firebase.firestore().doc(`${col}/${(u as any).uid}`)) : of(null);\n      })\n    );\n  }\n\n  ///// Role-based Authorization //////\n\n  canCreate(u: AjonpUser): boolean {\n    const allowed = ['admin', 'editor'];\n    return this.checkAuthorization(u, allowed);\n  }\n\n  canDelete(u: AjonpUser): boolean {\n    const allowed = ['admin'];\n    return this.checkAuthorization(u, allowed);\n  }\n\n  canEdit(u: AjonpUser): boolean {\n    const allowed = ['admin', 'editor'];\n    return this.checkAuthorization(u, allowed);\n  }\n\n  canRead(u: AjonpUser): boolean {\n    const allowed = ['admin', 'editor', 'subscriber'];\n    return this.checkAuthorization(u, allowed);\n  }\n\n  // determines if user has matching role\n  private checkAuthorization(u: AjonpUser, allowedRoles: string[]): boolean {\n    if (!u) {\n      return false;\n    }\n    for (const role of allowedRoles) {\n      if (u.roles[role]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  public setUserData(u: AjonpUser) {\n    return this.db.set(`users/${u.uid}`, u);\n  }\n\n  // Sets user data to firestore after succesful signin\n  private updateUserData(u: AjonpUser) {\n    return this.db.update(`users/${u.uid}`, u);\n  }\n  signOut() {\n    this.authClient.signOut();\n    location.href = '/pro';\n  }\n}\n\n```\n```",
    "iso8601Date": "2019-09-12T12:53:25-04:00",
    "basename": "adding-angular-components-to-your-static-site"
  },
  "adding-web-component-for-ionic-modals": {
    "title": "Adding Web Component for Ionic Modals",
    "date": "2019-09-11T16:51:38+00:00",
    "status": "publish",
    "permalink": "/adding-web-component-for-ionic-modals",
    "author": "Alex Patterson",
    "excerpt": "Utilizing Web Components within Hugo Static Site Generator (or any static site). Adding a Custom Element for an Ionic Modal pop-up.",
    "type": "post",
    "id": 760,
    "thumbnail": "/v1600706381/ccd-cloudinary/a7c61440d3c5bd915a0deb54eeeb364dd72d59c9-1920x1080-1/a7c61440d3c5bd915a0deb54eeeb364dd72d59c9-1920x1080-1-150x150.png",
    "category": [
      "Web"
    ],
    "tag": [
      "ionic"
    ],
    "post_format": [],
    "preview": "Adding dynamic features to a static site. …",
    "content": "\nAdding dynamic features to a static site.\n=========================================\n\nThis is a multi part series covering all the different types of Web Components I am using on the [](https://ajonp.com/)<https://ajonp.com> site currently. I just wanted to show how you can use each of them at a somewhat high level.\n\nAdding Web Component for Ionic Modals[](https://codingcat.dev/blog/adding-web-component-for-ionic-modals#adding-web-component-for-ionic-modals)\n-----------------------------------------------------------------------------------------------------------------------------------------------\n\nSo for this Web Component we are going to code a [Custom Element](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements) from scratch, not using Stencil, Polymer, or Angular.This just builds a simple search modal that allows for Algolia search searchResults:\n\n<figure class=\"wp-block-image\">![modal search](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/v1568151976/ajonp-ajonp-com/blog/Screen_Shot_2019-09-10_at_5.45.42_PM.png)</figure>### Modal Code[](https://codingcat.dev/blog/adding-web-component-for-ionic-modals#modal-code)\n\nI don’t know if I can add much more than what Eric Bidelman wrote for [Custom Elements](https://developers.google.com/web/fundamentals/web-components/customelements). I would just say you can basically put anything in them, just make sure you have the `connectedCallback()` in place if you need to run code each iteration.\n\n> connectedCallback: Called every time the element is inserted into the DOM. Useful for running setup code, such as fetching resources or rendering. Generally, you should try to delay work until this time.\n\n```\n<pre class=\"wp-block-code\">```\ncustomElements.define('modal-search', class extends HTMLElement { \n    constructor() {\n        super(); this.attachShadow({ mode: 'open' }); \n    } \n    connectedCallback() { \n        const ionHeader = document.createElement('ion-header'); \n        const ionToolbar = document.createElement('ion-toolbar'); \n        const ionTitle = document.createElement('ion-title'); \n        ionTitle.innerHTML = `<ion-label color='primary'>Search Purr-fectly</ion-label>` \n        const ionButtons = document.createElement('ion-buttons'); \n        ionButtons.setAttribute('slot', 'primary'); \n        const ionButton = document.createElement('ion-button'); \n        ionButton.addEventListener('click', async () => { \n            const modalController = document.querySelector('ion-modal-controller'); await modalController.dismiss({ 'dismissed': true }); \n        }) \n        const ionIconClose = document.createElement('ion-icon'); ionIconClose.setAttribute('slot', 'icon-only'); \n        ionIconClose.setAttribute('name', 'close'); ionButton.appendChild(ionIconClose); \n        ionButtons.appendChild(ionButton); ionToolbar.appendChild(ionButtons); \n        ionToolbar.appendChild(ionTitle); ionHeader.appendChild(ionToolbar); \n        const ionSearchbar = document.createElement('ion-searchbar'); \n        const searchContent = document.createElement('ion-content'); \n        ionSearchbar.addEventListener('ionChange', async ev => { \n            try { const searchResults = await index.search({ query: ev.detail.value }); \n                const ionList = document.createElement('ion-list'); searchResults.hits.forEach(hit => { \n                const ionItem = document.createElement('ion-item'); ionItem.setAttribute('href', hit.url); \n                const ionLabel = document.createElement('ion-label'); \n                const title = document.createElement('h2'); title.innerHTML = hit._highlightResult.title.value; ionLabel.appendChild(title); \n                const summary = document.createElement('p'); summary.innerHTML = hit._highlightResult.summary.value; ionLabel.appendChild(summary); \n                ionItem.appendChild(ionLabel); ionList.appendChild(ionItem); }); searchContent.innerHTML = ionList.innerHTML \n            } \n            catch (err) { \n                console.log(err); console.log(err.debugData); \n            } \n        }); \n        this.shadowRoot.appendChild(ionHeader); \n        this.shadowRoot.appendChild(ionSearchbar); \n        this.shadowRoot.appendChild(searchContent); \n    }\n});\n```\n```\n\n### Event Listener for ????️[](https://codingcat.dev/blog/adding-web-component-for-ionic-modals#event-listener-for-%EF%B8%8F)\n\nThis is utilizing [Ionic’s Modal](https://ionicframework.com/docs/api/modal). Please also not you *MUST* include the `<ion-modal-controller>` in your site or this will not work (trust me lost hours of my life on that one)!Notice in `modalController.create` we are passing a `component: 'modal-search'` property. This is the name of custom element that we created above.\n\n```\n<pre class=\"wp-block-code\">```\nmainSearch.forEach(b => {\n    b.addEventListener('click', async (event) => {\n        // initialize controller \n        const modalController = document.querySelector('ion-modal-controller'); \n        await modalController.componentOnReady(); \n        // present the modal const modalElement = \n        await modalController.create({ \n            animated: true, \n            component: 'modal-search', \n            componentProps: { \n                search: event.currentTarget.getAttribute('search') \n            } }); \n        await modalElement.present(); \n    });\n});\n```\n```\n\nThe BEST Part[](https://codingcat.dev/blog/adding-web-component-for-ionic-modals#the-best-part)\n-----------------------------------------------------------------------------------------------\n\nNow I could package this up and add it to NPM as a nice package. Better yet we could create it from a Stencil component next.Let me know what you think![](https://twitter.com/intent/tweet?url=https://codingcat.dev/blog/adding-web-component-for-ionic-modals&via=CodingCatDev&hashtags=CodingCatDevShares&text=Adding%20Web%20Component%20for%20Ionic%20Modals%0a)[](https://www.linkedin.com/shareArticle?mini=true&url=https://codingcat.dev/blog/adding-web-component-for-ionic-modals&title=Adding%20Web%20Component%20for%20Ionic%20Modals%0a&summary=%27#CodingCatDevShares'&source='codingcat.dev')[](https://www.facebook.com/sharer.php?u=https://codingcat.dev/blog/adding-web-component-for-ionic-modals)[](https://www.reddit.com/submit?url=https://codingcat.dev/blog/adding-web-component-for-ionic-modals&title=Adding%20Web%20Component%20for%20Ionic%20Modals%0a)[](https://news.ycombinator.com/submitlink?u=https://codingcat.dev/blog/adding-web-component-for-ionic-modals&t=Adding%20Web%20Component%20for%20Ionic%20Modals%0a)",
    "iso8601Date": "2019-09-11T12:51:38-04:00",
    "basename": "adding-web-component-for-ionic-modals"
  },
  "aj-is-loving-sticker-mule": {
    "title": "AJ is Loving Sticker Mule",
    "date": "2019-10-11T16:56:09+00:00",
    "status": "publish",
    "permalink": "/aj-is-loving-sticker-mule",
    "author": "Alex Patterson",
    "excerpt": "I have tried several sticker places and the images always come back terrible and the customer service stinks. Then I found Sticker Mule and everything has been like a dream!",
    "type": "post",
    "id": 769,
    "thumbnail": "/v1600706377/ccd-cloudinary/29c968a7967e193ed8ec6020ab3bf1e63aec2b38-1920x1080-1/29c968a7967e193ed8ec6020ab3bf1e63aec2b38-1920x1080-1-150x150.png",
    "category": [
      "CodingCatDev"
    ],
    "tag": [],
    "post_format": [],
    "preview": "I have tried several sticker places and the images always come back …",
    "content": "\nI have tried several sticker places and the images always come back terrible and the customer service stinks. Then I found Sticker Mule and everything has been like a dream!  \nCheck out all of their [custom stickers](https://www.stickermule.com/custom-stickers)​!\n\n**[Get $10 in Credit from AJ today!](https://www.stickermule.com/unlock?ref_id=3730681701&utm_medium=link&utm_source=invite)**Loading image…\n\nAll the stickers a cat could possible need[](https://codingcat.dev/blog/aj-is-loving-sticker-mule#all-the-stickers-a-cat-could-possible-need)\n---------------------------------------------------------------------------------------------------------------------------------------------\n\nAJ may have gotten his paws on the keyboard while I was ordering our first set of stickers, but honestly they are such a great deal I still placed the order.\n\n<figure class=\"wp-block-image\">![Aj's Sticker Mule stickers](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/v1570798535/ajonp-ajonp-com/blog/aj-is-loving-sticker-mule/IMG_20191011_082045.png)</figure>Studio Wall Logo[](https://codingcat.dev/blog/aj-is-loving-sticker-mule#studio-wall-logo)\n-----------------------------------------------------------------------------------------\n\nI was so impressed by how the stickers turned out that I had to get a logo for the new studio!\n\n<figure class=\"wp-block-image\">![Alex Standing by AJonP Studio Logo](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/v1570798535/ajonp-ajonp-com/blog/aj-is-loving-sticker-mule/IMG_20191011_082720.png)</figure>",
    "iso8601Date": "2019-10-11T12:56:09-04:00",
    "basename": "aj-is-loving-sticker-mule"
  },
  "ajs-week-in-web-december-04-2019": {
    "title": "AJ&#8217;s Week In Web December 04, 2019",
    "date": "2019-12-04T17:54:56+00:00",
    "status": "publish",
    "permalink": "/ajs-week-in-web-december-04-2019",
    "author": "Alex Patterson",
    "excerpt": "????️Web Development News: State of Javascript, freeCodeCamp, GitHub Mobile, Fusion Tables, App Actions, Cloud Code, Unicorn Project, AWS Invent 2019",
    "type": "post",
    "id": 816,
    "thumbnail": "/v1600706369/ccd-cloudinary/eadfeca39b592e4dcc07a7136c70d856cb25294a-1920x1080-1/eadfeca39b592e4dcc07a7136c70d856cb25294a-1920x1080-1-150x150.png",
    "category": [
      "Uncategorized"
    ],
    "tag": [],
    "post_format": [
      "Video"
    ],
    "preview": "<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video …",
    "content": "\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\"><iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/3A5xqupPbTU?feature=oembed\" title=\"????️State of JS, freeCodeCamp, GitHub Mobile, App Actions, Unicorn Project\" width=\"640\"></iframe></div></figure>AJ’s Week In Web Links\n======================\n\nThe State of JavaScript 2019[](https://codingcat.dev/blog/aj-s-week-in-web-december-04-2019#the-state-of-javascript-2019)\n-------------------------------------------------------------------------------------------------------------------------\n\n<https://stateofjs.com/>\n\nfreeCodeCamp 5 years later[](https://codingcat.dev/blog/aj-s-week-in-web-december-04-2019#freecodecamp-5-years-later)\n---------------------------------------------------------------------------------------------------------------------\n\n<https://changelog.com/podcast/369>\n\n<https://www.freecodecamp.org/>\n\nGitHub Mobile[](https://codingcat.dev/blog/aj-s-week-in-web-december-04-2019#github-mobile)\n-------------------------------------------------------------------------------------------\n\n<https://github.com/mobile/beta>\n\n[Google Fusion Tables to be shut down on December 3, 2019](https://gsuiteupdates.googleblog.com/2018/12/google-fusion-tables-to-be-shut-down-on.html)[](https://codingcat.dev/blog/aj-s-week-in-web-december-04-2019#)\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n<https://gsuiteupdates.googleblog.com/2018/12/google-fusion-tables-to-be-shut-down-on.html>\n\nGoogle App Actions[](https://codingcat.dev/blog/aj-s-week-in-web-december-04-2019#google-app-actions)\n-----------------------------------------------------------------------------------------------------\n\n<https://developers.google.com/assistant/app>\n\n<https://developers.google.com/assistant>\n\nGoogle Cloud Code[](https://codingcat.dev/blog/aj-s-week-in-web-december-04-2019#google-cloud-code)\n---------------------------------------------------------------------------------------------------\n\n<https://cloud.google.com/code/>\n\n<https://cloud.google.com/code/docs/vscode/quickstart>\n\nThe Unicorn Project[](https://codingcat.dev/blog/aj-s-week-in-web-december-04-2019#the-unicorn-project)\n-------------------------------------------------------------------------------------------------------\n\n<https://itrevolution.com/the-unicorn-project/>\n\n<figure class=\"wp-block-embed-amazon-kindle wp-block-embed is-type-rich is-provider-amazon\"><div class=\"wp-block-embed__wrapper\"><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"550\" src=\"https://read.amazon.com/kp/card?preview=inline&linkCode=kpd&ref_=k4w_oembed_k6NFv9qGEiexKy&asin=B078Y98RG8&tag=kpembed-20\" style=\"max-width:100%\" title=\"The Phoenix Project: A Novel about IT, DevOps, and Helping Your Business Win\" type=\"text/html\" width=\"640\"></iframe></div></figure><figure class=\"wp-block-embed-amazon-kindle wp-block-embed is-type-rich is-provider-amazon\"><div class=\"wp-block-embed__wrapper\"><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"550\" src=\"https://read.amazon.com/kp/card?preview=inline&linkCode=kpd&ref_=k4w_oembed_HmOPf5xZzHd3sF&asin=B07QT9QR41&tag=kpembed-20\" style=\"max-width:100%\" title=\"The Unicorn Project: A Novel about Developers, Digital Disruption, and Thriving in the Age of Data\" type=\"text/html\" width=\"640\"></iframe></div></figure><https://aws.amazon.com/blogs/aws/aws-deepracer-update-new-features-new-racing-opportunities/>\n\nAWS DeepRacer[](https://codingcat.dev/blog/aj-s-week-in-web-december-04-2019#aws-deepracer)\n-------------------------------------------------------------------------------------------\n\n<https://aws.amazon.com/blogs/aws/aws-deepracer-update-new-features-new-racing-opportunities/>\n\nAWS re:Invent 2019[](https://codingcat.dev/blog/aj-s-week-in-web-december-04-2019#aws-reinvent-2019)\n----------------------------------------------------------------------------------------------------\n\n<https://aws.amazon.com/blogs/aws/aws-launches-previews-at-reinvent-2019-tuesday-december-3rd/>",
    "iso8601Date": "2019-12-04T12:54:56-05:00",
    "basename": "ajs-week-in-web-december-04-2019"
  },
  "ajs-week-in-web-december-11-2019": {
    "title": "AJ&#8217;s Week In Web December 11, 2019",
    "date": "2019-12-11T18:01:52+00:00",
    "status": "publish",
    "permalink": "/ajs-week-in-web-december-11-2019",
    "author": "Alex Patterson",
    "excerpt": "????️Web Development News: Sanity.io Pluggable Assets, Vue Unicons, Vue Cloudinary SDK (Beta), Flutter Interact 2019, Chrome Dev Tool Update",
    "type": "post",
    "id": 826,
    "thumbnail": "/v1600706369/ccd-cloudinary/eadfeca39b592e4dcc07a7136c70d856cb25294a-1920x1080-1/eadfeca39b592e4dcc07a7136c70d856cb25294a-1920x1080-1-150x150.png",
    "category": [
      "News",
      "Week In Web"
    ],
    "tag": [],
    "post_format": [
      "Video"
    ],
    "preview": "<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video …",
    "content": "\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\"><iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/9v9HnLKP5Aw?feature=oembed\" title=\"????️Sanity.io Pluggable Assets, Vue Cloudinary SDK & Unicons, Flutter Interact\" width=\"640\"></iframe></div></figure>AJ’s Week In Web Links\n======================\n\nSanity.io[](https://codingcat.dev/blog/aj-s-week-in-web-december-11-2019#sanityio)\n----------------------------------------------------------------------------------\n\n<https://www.sanity.io/blog/introducing-environmental-variables-support-for-sanity-studio>\n\n<https://www.sanity.io/docs/studio-environment-variables>\n\n<https://www.sanity.io/blog/introducing-pluggable-asset-sources>\n\nVue Unicons[](https://codingcat.dev/blog/aj-s-week-in-web-december-11-2019#vue-unicons)\n---------------------------------------------------------------------------------------\n\n<https://antonreshetov.github.io/vue-unicons/>\n\nVue Cloudinary SDK[](https://codingcat.dev/blog/aj-s-week-in-web-december-11-2019#vue-cloudinary-sdk)\n-----------------------------------------------------------------------------------------------------\n\n[https://cloudinary.com/documentation/vue\\_integration](https://cloudinary.com/documentation/vue_integration)\n\nFlutter Interact 2019[](https://codingcat.dev/blog/aj-s-week-in-web-december-11-2019#flutter-interact-2019)\n-----------------------------------------------------------------------------------------------------------\n\n<https://developers.google.com/events/flutter-interact>\n\n<https://medium.com/flutter/announcing-flutter-1-12-what-a-year-22c256ba525d?>\n\n<https://medium.com/flutter/web-support-for-flutter-goes-beta-35b64a1217c0>\n\nChrome Dev Tools Update[](https://codingcat.dev/blog/aj-s-week-in-web-december-11-2019#chrome-dev-tools-update)\n---------------------------------------------------------------------------------------------------------------\n\n<https://developers.google.com/web/updates/2019/10/devtools>",
    "iso8601Date": "2019-12-11T13:01:52-05:00",
    "basename": "ajs-week-in-web-december-11-2019"
  },
  "ajs-week-in-web-december-18-2019": {
    "title": "AJ&#8217;s Week In Web December 18, 2019",
    "date": "2019-12-18T18:07:08+00:00",
    "status": "publish",
    "permalink": "/ajs-week-in-web-december-18-2019",
    "author": "Alex Patterson",
    "excerpt": "????️Web Development News: Purrfect.dev, StateofJS, Stack Overflow Survey, Cloudinary Shutterfly, Scully.io, Google Assistant Interactive Canvas, AWS Lambda Destinations",
    "type": "post",
    "id": 837,
    "thumbnail": "/v1600706369/ccd-cloudinary/eadfeca39b592e4dcc07a7136c70d856cb25294a-1920x1080-1/eadfeca39b592e4dcc07a7136c70d856cb25294a-1920x1080-1-150x150.png",
    "category": [
      "News",
      "Week In Web"
    ],
    "tag": [],
    "post_format": [
      "Video"
    ],
    "preview": "<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video …",
    "content": "\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\"><iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/TVoHCotfklQ?feature=oembed\" title=\"????️StateofJS, Cloudinary Shutterfly, Scully.io, Interactive Canvas, Lambda Destinations\" width=\"640\"></iframe></div></figure>AJ’s Week In Web Links\n----------------------\n\nPurrfect.dev[](https://codingcat.dev/blog/aj-s-week-in-web-december-18-2019#purrfectdev)\n----------------------------------------------------------------------------------------\n\n<figure class=\"wp-block-embed-wordpress wp-block-embed is-type-wp-embed is-provider-anchor-fm-inc\"><div class=\"wp-block-embed__wrapper\"><iframe class=\"wp-embedded-content\" data-secret=\"nVScFxbMWE\" frameborder=\"0\" height=\"102px\" sandbox=\"allow-scripts\" scrolling=\"no\" security=\"restricted\" src=\"https://anchor.fm/purrfect-dev/embed#?secret=nVScFxbMWE\" title=\"Purrfect.dev\" width=\"400px\"></iframe></div></figure>StateofJS[](https://codingcat.dev/blog/aj-s-week-in-web-december-18-2019#stateofjs)\n-----------------------------------------------------------------------------------\n\n<https://2019.stateofjs.com/front-end-frameworks/>\n\nStack Overflow 2019 Survey[](https://codingcat.dev/blog/aj-s-week-in-web-december-18-2019#stack-overflow-2019-survey)\n---------------------------------------------------------------------------------------------------------------------\n\n<https://insights.stackoverflow.com/survey/2019>\n\nCloudinary Teams Up with Shutterfly[](https://codingcat.dev/blog/aj-s-week-in-web-december-18-2019#cloudinary-teams-up-with-shutterfly)\n---------------------------------------------------------------------------------------------------------------------------------------\n\n[https://cloudinary.com/blog/cloudinary\\_teams\\_up\\_with\\_shutterstock\\_to\\_make\\_visual\\_storytelling\\_even\\_easier](https://cloudinary.com/blog/cloudinary_teams_up_with_shutterstock_to_make_visual_storytelling_even_easier)\n\nScully.io[](https://codingcat.dev/blog/aj-s-week-in-web-december-18-2019#scullyio)\n----------------------------------------------------------------------------------\n\n<figure class=\"wp-block-embed-wordpress wp-block-embed is-type-wp-embed is-provider-codingcatdev\"><div class=\"wp-block-embed__wrapper\">https://codingcat.dev/blog/scully-io-anguler-static-site-generator/ </div></figure>",
    "iso8601Date": "2019-12-18T13:07:08-05:00",
    "basename": "ajs-week-in-web-december-18-2019"
  },
  "ajs-week-in-web-january-08-2020": {
    "title": "AJ&#8217;s Week In Web January 08, 2020",
    "date": "2020-01-08T18:51:55+00:00",
    "status": "publish",
    "permalink": "/ajs-week-in-web-january-08-2020",
    "author": "Alex Patterson",
    "excerpt": "????️Web Development News: NextJS 9.1.7, SWR: React Hook, EdgeDB, Fauna, 24 Accessibility, Variable Fonts, CSS Shake, Cluster Maps",
    "type": "post",
    "id": 843,
    "thumbnail": "/v1600706369/ccd-cloudinary/eadfeca39b592e4dcc07a7136c70d856cb25294a-1920x1080-1/eadfeca39b592e4dcc07a7136c70d856cb25294a-1920x1080-1-150x150.png",
    "category": [
      "News",
      "Week In Web"
    ],
    "tag": [],
    "post_format": [
      "Video"
    ],
    "preview": "<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video …",
    "content": "\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\"><iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/TXNgr375NI0?feature=oembed\" title=\"????️NextJS 9.1.7, SWR: React Hook, EdgeDB, Fauna, 24 A11y, Variable Fonts, CSS Shake, Cluster Maps\" width=\"640\"></iframe></div></figure>AJ’s Week In Web Links\n----------------------\n\n### Australia Crisis Map[](https://codingcat.dev/blog/aj-s-week-in-web-january-08-2020#australia-crisis-map)\n\n[](https://google.org/crisismap/australia)[](https://google.org/crisismap/australia)<https://google.org/crisismap/australia>\n\n### NextJS 9.1.7[](https://codingcat.dev/blog/aj-s-week-in-web-january-08-2020#nextjs-917)\n\n[](https://nextjs.org/blog/next-9-1-7#react-strict-mode-compliance-and-opt-in)<https://nextjs.org/blog/next-9-1-7#react-strict-mode-compliance-and-opt-in>\n\n- [**3% – 8%+ Smaller Client-Side JavaScript Size**](https://nextjs.org/blog/next-9-1-7#3--8-smaller-client-side-javascript-size): We’ve optimized application output even futher, shaving 7.5kB off hello world applications. More complex applications will show a savings up to 8% or more.\n- [**Redesigned Production Build CLI Output**](https://nextjs.org/blog/next-9-1-7#redesigned-production-build-cli-output): The production build output now shows gzipped file sizes in an easier to understand format.\n- [**New Built-In Polyfills: fetch(), URL, and Object.assign**](https://nextjs.org/blog/next-9-1-7#new-built-in-polyfills-fetch-url-and-objectassign): Applications can leverage the `fetch()` API, `URL`, and `Object.assign` in legacy browsers without compatibility concerns.\n- [**Optimized Page Loading: Better FCP and TTI**](https://nextjs.org/blog/next-9-1-7#optimized-page-loading-better-fcp-and-tti): We’ve collaborated closely with the Google Chrome team to maximize page loading performance. This results in a much better end-user experience.\n- [**Support for the Latest JavaScript Features**](https://nextjs.org/blog/next-9-1-7#support-for-the-latest-javascript-features): We’re committed to ensuring you can always use the latest JavaScript features, including [Optional Chaining](https://github.com/tc39/proposal-optional-chaining), [Nullish Coalescing](https://github.com/tc39/proposal-nullish-coalescing), and other stable ES2020 features.\n- [**Zero-Config Deployment Support for**](https://nextjs.org/blog/next-9-1-7#zero-config-deployment-support-for-next-export-applications) [**`next export`**](https://nextjs.org/blog/next-9-1-7#zero-config-deployment-support-for-next-export-applications) [**Applications**](https://nextjs.org/blog/next-9-1-7#zero-config-deployment-support-for-next-export-applications): `next export` powered applications can now be deployed to [ZEIT Now](https://zeit.co/home) with zero configuration.\n- [**React Strict Mode Compliance and Opt-In**](https://nextjs.org/blog/next-9-1-7#react-strict-mode-compliance-and-opt-in): All of Next.js’ client-side runtime is now compatible with React’s Strict Mode. We’ve also added a configuration option to enable this mode for your whole application.\n- [**Automated Testing against Nightly React Builds**](https://nextjs.org/blog/next-9-1-7#automated-testing-against-nightly-react-builds): Next.js is automatically tested against [React’s next channel](https://reactjs.org/blog/2019/10/22/react-release-channels.html), ensuring compatibility with future releases.\n\n### SWR: React Hook[](https://codingcat.dev/blog/aj-s-week-in-web-january-08-2020#swr-react-hook)\n\n[](https://swr.now.sh/)<https://swr.now.sh/>React Hooks for Remote Data Fetching\n\n### EdgeDB[](https://codingcat.dev/blog/aj-s-week-in-web-january-08-2020#edgedb)\n\n[](https://edgedb.com/)<https://edgedb.com/>EdgeDB combines the simplicity of a NoSQL database with relational model’s powerful querying, strictness, consistency, and performance.\n\n### Fauna[](https://codingcat.dev/blog/aj-s-week-in-web-january-08-2020#fauna)\n\n[](https://fauna.com/)<https://fauna.com/>**The database built for serverless, featuring native GraphQL**Add a full-featured global datastore to your apps in minutes. Access effortlessly from the browser and from mobile. Never again worry about data correctness, capacity, redundancy, latency, and availability.\n\n### 24 Accessibility[](https://codingcat.dev/blog/aj-s-week-in-web-january-08-2020#24-accessibility)\n\n[](http://www.24a11y.com/)<http://www.24a11y.com/>24 days of digital accessibility gifts during the season of giving and sharing\n\nVariable Fonts[](https://codingcat.dev/blog/aj-s-week-in-web-january-08-2020#variable-fonts)\n--------------------------------------------------------------------------------------------\n\n[](https://variablefonts.dev/about/)<https://variablefonts.dev/about/>\n\n> This project was created by [Mandy Michael](https://twitter.com/@mandy_kerr) to showcase the many possibilities and opportunities that variable fonts can offer developers and designers on the web. The aim is to provide developers with the resources and tools needed to use variable fonts in their own projects. Variable fonts give us more control over our Typography-we can fine-tune the font characteristics to maximise the legibility, readability and overall accessibility of our website text. This is a level of control over our fonts that is unprecedented. Technology, like CSS is always improving, we now have more opportunities than ever to combine, create and present content on the web in more creative, more meaningful and more purposeful ways – and do so in a way that is more performant and more accessible.  \n> There has never been a better time to be a developer or designer for the web and variable fonts are just one opportunity to think more creatively for our users. At the very least, we can improve the performance of our websites, but at it’s best, we can make more usable, more accessible, and more meaningful content – and that, is what gets me really excited about the future of web typography and I hope it inspires you to feel the same way! – <https://variablefonts.dev/about/>\n\nCSS Shake[](https://codingcat.dev/blog/aj-s-week-in-web-january-08-2020#css-shake)\n----------------------------------------------------------------------------------\n\n<http://elrumordelaluz.github.io/csshake/>\n\n#### Some CSS classes to move your DOM![](https://codingcat.dev/blog/aj-s-week-in-web-january-08-2020#some-css-classes-to-move-your-dom)\n\nCluster Maps[](https://codingcat.dev/blog/aj-s-week-in-web-january-08-2020#cluster-maps)\n----------------------------------------------------------------------------------------\n\n<https://cloud.google.com/blog/products/maps-platform/how-cluster-map-markers>[](https://codingcat.dev/blog/aj-s-week-in-web-january-08-2020#)\n----------------------------------------------------------------\n\n[](https://codingcat.dev/blog/aj-s-week-in-web-january-08-2020#)\n----------------------------------------------------------------\n\n[](https://twitter.com/intent/tweet?url=https://codingcat.dev/blog/aj-s-week-in-web-january-08-2020&via=CodingCatDev&hashtags=CodingCatDevShares&text=AJ%27s%20Week%20In%20Web%20January%2008%2C%202020%0a)[](https://www.linkedin.com/shareArticle?mini=true&url=https://codingcat.dev/blog/aj-s-week-in-web-january-08-2020&title=AJ%27s%20Week%20In%20Web%20January%2008%2C%202020%0a&summary=%27#CodingCatDevShares'&source='codingcat.dev')[](https://www.facebook.com/sharer.php?u=https://codingcat.dev/blog/aj-s-week-in-web-january-08-2020)[](https://www.reddit.com/submit?url=https://codingcat.dev/blog/aj-s-week-in-web-january-08-2020&title=AJ%27s%20Week%20In%20Web%20January%2008%2C%202020%0a)[](https://news.ycombinator.com/submitlink?u=https://codingcat.dev/blog/aj-s-week-in-web-january-08-2020&t=AJ%27s%20Week%20In%20Web%20January%2008%2C%202020%0a)",
    "iso8601Date": "2020-01-08T13:51:55-05:00",
    "basename": "ajs-week-in-web-january-08-2020"
  },
  "ajs-week-in-web-january-15-2020": {
    "title": "AJ&#8217;s Week In Web January 15, 2020",
    "date": "2020-01-15T18:55:01+00:00",
    "status": "publish",
    "permalink": "/ajs-week-in-web-january-15-2020",
    "author": "Alex Patterson",
    "excerpt": "????️Web Development News: Edge Chromium, NOAA Datasets, Craft.js, Rete.js, Tiny-Helpers, Diary Email, The Odin Project",
    "type": "post",
    "id": 849,
    "thumbnail": "/v1600706369/ccd-cloudinary/eadfeca39b592e4dcc07a7136c70d856cb25294a-1920x1080-1/eadfeca39b592e4dcc07a7136c70d856cb25294a-1920x1080-1-150x150.png",
    "category": [
      "News",
      "Week In Web"
    ],
    "tag": [],
    "post_format": [
      "Video"
    ],
    "preview": "<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video …",
    "content": "\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\"><iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/6DhSsWMF3TY?feature=oembed\" title=\"????️Edge Chromium, NOAA Datasets, Craft.js, Rete.js, Tiny-Helpers, Diary Email, The Odin Project\" width=\"640\"></iframe></div></figure>AJ’s Week In Web Links\n----------------------\n\nEdge Chromium[](https://codingcat.dev/blog/aj-s-week-in-web-january-15-2020#edge-chromium)\n------------------------------------------------------------------------------------------\n\nFinally an Edge that I might use! Edge version 79 is now using [Chromium Project](https://www.chromium.org/Home) as an engine.\n\n[](https://blogs.windows.com/windowsexperience/2020/01/15/new-year-new-browser-the-new-microsoft-edge-is-out-of-preview-and-now-available-for-download/)<https://blogs.windows.com/windowsexperience/2020/01/15/new-year-new-browser-the-new-microsoft-edge-is-out-of-preview-and-now-available-for-download/>\n\n[](https://blogs.windows.com/msedgedev/2020/01/15/upgrading-new-microsoft-edge-79-chromium/)<https://blogs.windows.com/msedgedev/2020/01/15/upgrading-new-microsoft-edge-79-chromium/>\n\n### Download[](https://codingcat.dev/blog/aj-s-week-in-web-january-15-2020#download)\n\n[](https://www.microsoft.com/en-us/edge?form=MO12GB&OCID=MO12GB)<https://www.microsoft.com/en-us/edge?form=MO12GB&amp;OCID=MO12GB>\n\nNOAA datasets on Google Cloud[](https://codingcat.dev/blog/aj-s-week-in-web-january-15-2020#noaa-datasets-on-google-cloud)\n--------------------------------------------------------------------------------------------------------------------------\n\n[](https://cloud.google.com/blog/products/data-analytics/weather-climate-big-data-from-noaa-now-in-cloud)<https://cloud.google.com/blog/products/data-analytics/weather-climate-big-data-from-noaa-now-in-cloud>  \nThe agency is providing public access to its environmental datasets in the cloud in accordance with its open data policies.\n\n[](https://cloud.google.com/public-datasets)<https://cloud.google.com/public-datasets>\n\nCraft.js[](https://codingcat.dev/blog/aj-s-week-in-web-january-15-2020#craftjs)\n-------------------------------------------------------------------------------\n\n[](https://craft.js.org/)<https://craft.js.org/>???? A React Framework for building extensible drag and drop page editors[](https://github.com/prevwong/craft.js)<https://github.com/prevwong/craft.js>\n\nRete.js[](https://codingcat.dev/blog/aj-s-week-in-web-january-15-2020#retejs)\n-----------------------------------------------------------------------------\n\n[](https://rete.js.org/#/)<https://rete.js.org/>\\#/JavaScript framework for visual programming and creating node editor[](https://github.com/retejs/rete)<https://github.com/retejs/rete>\n\nTiny Helpers[](https://codingcat.dev/blog/aj-s-week-in-web-january-15-2020#tiny-helpers)\n----------------------------------------------------------------------------------------\n\n[](https://tiny-helpers.dev/)<https://tiny-helpers.dev/>A collection of free single-purpose online tools for web developers\n\nDiary Email[](https://codingcat.dev/blog/aj-s-week-in-web-january-15-2020#diary-email)\n--------------------------------------------------------------------------------------\n\n[](https://diaryemail.com/)<https://diaryemail.com/>Diary as simple as it getsWrite private diary using good old email!\n\nThe Odin Project[](https://codingcat.dev/blog/aj-s-week-in-web-january-15-2020#the-odin-project)\n------------------------------------------------------------------------------------------------\n\n[](https://www.theodinproject.com/home)<https://www.theodinproject.com/home>A full stack curriculum is free and supported by a passionate open source community.\n\n> This is the website we wish we had when we were learning on our own. We scour the internet looking for only the best resources to supplement your learning and present them in a logical order.",
    "iso8601Date": "2020-01-15T13:55:01-05:00",
    "basename": "ajs-week-in-web-january-15-2020"
  },
  "ajs-week-in-web-january-22-2020": {
    "title": "AJ&#8217;s Week In Web January 22, 2020",
    "date": "2020-01-22T18:58:00+00:00",
    "status": "publish",
    "permalink": "/ajs-week-in-web-january-22-2020",
    "author": "Alex Patterson",
    "excerpt": "????️Web Development News: Playwright, VS 8.4 Mac, Ionic Gestures, SpecFlow, DeliveryConf, Auth0 Assemble, backendlessConf",
    "type": "post",
    "id": 858,
    "thumbnail": "/v1600706369/ccd-cloudinary/eadfeca39b592e4dcc07a7136c70d856cb25294a-1920x1080-1/eadfeca39b592e4dcc07a7136c70d856cb25294a-1920x1080-1-150x150.png",
    "category": [
      "News",
      "Week In Web"
    ],
    "tag": [],
    "post_format": [
      "Video"
    ],
    "preview": "<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video …",
    "content": "\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\"><iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/-UC0oC5zLuw?feature=oembed\" title=\"????️Playwright, VS 8.4 Mac, Ionic Gestures, SpecFlow, DeliveryConf, Auth0 Assemble, backendlessConf\" width=\"640\"></iframe></div></figure>Puppeteer[](https://codingcat.dev/blog/aj-s-week-in-web-january-22-2020#puppeteer)\n----------------------------------------------------------------------------------\n\n[](https://pptr.dev/)<https://pptr.dev/>\n\n> Puppeteer is a Node library which provides a high-level API to control Chrome or Chromium over the [DevTools Protocol](https://chromedevtools.github.io/devtools-protocol/). Puppeteer runs [headless](https://developers.google.com/web/updates/2017/04/headless-chrome) by default, but can be configured to run full (non-headless) Chrome or Chromium.\n\n### Playwrigt[](https://codingcat.dev/blog/aj-s-week-in-web-january-22-2020#playwrigt)\n\n<https://github.com/microsoft/playwright>Think of Playwright as being Puppeteer, but it works on all the browsers.\n\n> Our primary goal with Playwright is to improve automated UI testing by eliminating flakiness, improving the speed of execution and offering insights into the browser operation.\n\nVisual Studio 2019 for Mac version 8.4[](https://codingcat.dev/blog/aj-s-week-in-web-january-22-2020#visual-studio-2019-for-mac-version-84)\n-------------------------------------------------------------------------------------------------------------------------------------------\n\n<figure class=\"wp-block-embed-wordpress wp-block-embed is-type-wp-embed is-provider-visual-studio-blog\"><div class=\"wp-block-embed__wrapper\">> [Visual Studio 2019 for Mac version 8.4 is now available](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-for-mac-version-8-4-is-now-available/)\n\n<iframe class=\"wp-embedded-content\" data-secret=\"FjUhyLzh5E\" frameborder=\"0\" height=\"338\" marginheight=\"0\" marginwidth=\"0\" sandbox=\"allow-scripts\" scrolling=\"no\" security=\"restricted\" src=\"https://devblogs.microsoft.com/visualstudio/visual-studio-2019-for-mac-version-8-4-is-now-available/embed/#?secret=FjUhyLzh5E\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" title=\"“Visual Studio 2019 for Mac version 8.4 is now available” — Visual Studio Blog\" width=\"600\"></iframe></div></figure>> The Visual Studio for Mac team is kicking off the new year with our best release ever! Visual Studio 2019 for Mac version 8.4, released today, brings several exciting enhancements to the developer experience. Many of these items were top requests from our community and include:  \n> [Support for the latest stable version of .NET Core 3.1](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-for-mac-version-8-4-is-now-available/#netcore31)  \n> [Scaffolding support for ASP.NET Core projects](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-for-mac-version-8-4-is-now-available/#scaffolding)  \n> [The ability to develop and publish ASP.NET Core Blazor Server applications](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-for-mac-version-8-4-is-now-available/#blazor)  \n> [Refinements to the editing experience, including .razor file support](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-for-mac-version-8-4-is-now-available/#editor-refinements)  \n> [Improvements to the IDE experience when using assistive technologies](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-for-mac-version-8-4-is-now-available/#assistive-technology)  \n> [Pack support for .NET Core library projects](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-for-mac-version-8-4-is-now-available/#pack-support)  \n> To learn more about all of the changes in this release of Visual Studio for Mac, see our [release notes](https://docs.microsoft.com/visualstudio/releasenotes/vs2019-mac-relnotes).\n\nIonic Gestures with Josh Morony[](https://codingcat.dev/blog/aj-s-week-in-web-january-22-2020#ionic-gestures-with-josh-morony)\n------------------------------------------------------------------------------------------------------------------------------\n\n<https://www.joshmorony.com/create-tinder-style-swipe-cards-with-ionic-gestures/>Create Tinder Style Swipe Cards with Ionic Gestures\n\n> Creating this style of animation/gesture has always been possible in Ionic applications – you could use one of many libraries to help you, or you could have also implemented it from scratch yourself. However, now that Ionic is exposing their underlying gesture system for use by Ionic developers, it makes things significantly simpler. We have everything we need out of the box, without having to write complicated gesture tracking ourselves.\n\nSpec Flow[](https://codingcat.dev/blog/aj-s-week-in-web-january-22-2020#spec-flow)\n----------------------------------------------------------------------------------\n\n<https://specflow.org/>\n\n> Use SpecFlow to define, manage and automatically execute human-readable acceptance tests in .NET projects. Writing easily understandable tests is a cornerstone of the BDD paradigm and also helps build up a living documentation of your system.\n\nDelivery Conf[](https://codingcat.dev/blog/aj-s-week-in-web-january-22-2020#delivery-conf)\n------------------------------------------------------------------------------------------\n\n<https://www.deliveryconf.com/>\n\n> DELIVERY|CONF 2020 is being held to give people a place to get deeper technical information about Continuous Integration (CI) and Continuous Delivery (CD). Our goal isn’t to just tell you to “do the technical thing”; it is to show you real world examples of how others have done it.\n\nAuth0 Assemble<https://auth0.com/blog/introducing-our-first-conference-auth0-assemble/>August 26-27, 2020\n\n> [Auth0 Assemble](https://assemble.auth0.com/?utm_source=ASM_Blog&utm_medium=sc&utm_campaign=ASM_WebTraffic), Auth0’s annual developer and customer conference, is the only identity conference for application builders. For those who are architecting the future. The ones who understand that applications are built today by assembling the best of breed APIs and tools. Those who care about the intersection between end-user experience, privacy, and security.\n\nbackendlessconf\\_[](https://codingcat.dev/blog/aj-s-week-in-web-january-22-2020#backendlessconf_)\n-------------------------------------------------------------------------------------------------\n\n<https://backendlessconf.com/>\n\n> Hear from inspiring speakers from the industry working on every aspect of the ecosystem — frontend frameworks, APIs, browsers, and more.\n\nI attended backendlessconf live and it was an absolute thrill to see how conected our world has become. Especially when you are using no backend (well kinda) or physical location to join it all together.",
    "iso8601Date": "2020-01-22T13:58:00-05:00",
    "basename": "ajs-week-in-web-january-22-2020"
  },
  "ajs-week-in-web-november-06-2019": {
    "title": "AJ&#8217;s Week In Web November 06, 2019",
    "date": "2019-11-06T17:13:10+00:00",
    "status": "publish",
    "permalink": "/ajs-week-in-web-november-06-2019",
    "author": "Alex Patterson",
    "excerpt": "????️Web Development News: React 16.11.0, Angular v9 RC, ngAdd Capacitor, Figma User Conference, Puppeteer v2, Search Console Speed Report, Azure DevOps Roadmap Q4, Visual Studio Online",
    "type": "post",
    "id": 790,
    "thumbnail": "/v1600706369/ccd-cloudinary/eadfeca39b592e4dcc07a7136c70d856cb25294a-1920x1080-1/eadfeca39b592e4dcc07a7136c70d856cb25294a-1920x1080-1-150x150.png",
    "category": [
      "News",
      "Week In Web"
    ],
    "tag": [],
    "post_format": [
      "Video"
    ],
    "preview": "<https://youtu.be/341a1K46SKQ>\n\nAJ’s Week In Web Links …",
    "content": "\n<https://youtu.be/341a1K46SKQ>\n\nAJ’s Week In Web Links\n----------------------\n\n[](https://github.com/facebook/react/releases/tag/v16.11.0)<https://github.com/facebook/react/releases/tag/v16.11.0>\n\n[](https://github.com/angular/angular/blob/master/CHANGELOG.md#900-rc0-2019-10-31)<https://github.com/angular/angular/blob/master/CHANGELOG.md#900-rc0-2019-10-31>\n\n[](https://next.angular.io/guide/updating-to-version-9)<https://next.angular.io/guide/updating-to-version-9>\n\n[](https://blog.angular.io/announcing-the-capacitor-ngadd-schematic-732fd90f40fa)<https://blog.angular.io/announcing-the-capacitor-ngadd-schematic-732fd90f40fa>\n\n[](https://www.figma.com/blog/lets-create-figmas-first-user-conference-together/)<https://www.figma.com/blog/lets-create-figmas-first-user-conference-together/>\n\n[](https://github.com/GoogleChrome/puppeteer/releases/tag/v2.0.0)<https://github.com/GoogleChrome/puppeteer/releases/tag/v2.0.0>\n\n[](https://pptr.dev/)<https://pptr.dev/>\n\n[](https://webmasters.googleblog.com/2019/11/search-console-speed-report.html)<https://webmasters.googleblog.com/2019/11/search-console-speed-report.html>\n\n<figure class=\"wp-block-embed-wordpress wp-block-embed is-type-wp-embed is-provider-azure-devops-blog\"><div class=\"wp-block-embed__wrapper\">https://devblogs.microsoft.com/devops/azure-devops-roadmap-update-for-2019-q4/</div></figure><figure class=\"wp-block-embed-wordpress wp-block-embed is-type-wp-embed is-provider-visual-studio-blog\"><div class=\"wp-block-embed__wrapper\">https://devblogs.microsoft.com/visualstudio/announcing-visual-studio-online-public-preview/</div></figure>",
    "iso8601Date": "2019-11-06T12:13:10-05:00",
    "basename": "ajs-week-in-web-november-06-2019"
  },
  "ajs-week-in-web-november-13-2019": {
    "title": "AJ&#8217;s Week In Web November 13, 2019",
    "date": "2019-11-13T17:14:49+00:00",
    "status": "publish",
    "permalink": "/ajs-week-in-web-november-13-2019",
    "author": "Alex Patterson",
    "excerpt": "????️Web Development News: Chrome Dev Summit, GitHub Universe, Houdini, Next.js, React Hooks",
    "type": "post",
    "id": 793,
    "thumbnail": "/v1600706369/ccd-cloudinary/eadfeca39b592e4dcc07a7136c70d856cb25294a-1920x1080-1/eadfeca39b592e4dcc07a7136c70d856cb25294a-1920x1080-1-150x150.png",
    "category": [
      "News",
      "Week In Web"
    ],
    "tag": [],
    "post_format": [
      "Video"
    ],
    "preview": "<https://youtu.be/wtfBXmdzElI>\n\nAJ’s Week In Web Links …",
    "content": "\n<https://youtu.be/wtfBXmdzElI>\n\nAJ’s Week In Web Links\n----------------------\n\n[](https://developer.chrome.com/devsummit/)<https://developer.chrome.com/devsummit/>\n\n[](https://developer.chrome.com/devsummit/sessions/advancing-the-web-framework-ecosystem/)<https://developer.chrome.com/devsummit/sessions/advancing-the-web-framework-ecosystem/>\n\n[](https://nextjs.org/)<https://nextjs.org/>\n\n[](https://developer.chrome.com/devsummit/sessions/next-generation-web-styling/)<https://developer.chrome.com/devsummit/sessions/next-generation-web-styling/>\n\n[](https://developer.mozilla.org/en-US/docs/Web/Houdini)<https://developer.mozilla.org/en-US/docs/Web/Houdini>\n\n[](https://developer.chrome.com/devsummit/sessions/speed-tooling-evolutions/)<https://developer.chrome.com/devsummit/sessions/speed-tooling-evolutions/>\n\n[](https://web.dev/metrics/)<https://web.dev/metrics/>\n\n[](https://developer.chrome.com/devsummit/sessions/adaptive-loading/)<https://developer.chrome.com/devsummit/sessions/adaptive-loading/>\n\n[](https://github.com/GoogleChromeLabs/react-adaptive-hooks)<https://github.com/GoogleChromeLabs/react-adaptive-hooks>\n\n[](https://githubuniverse.com/)<https://githubuniverse.com/>\n\n<figure class=\"wp-block-embed-wordpress wp-block-embed is-type-wp-embed is-provider-the-github-blog\"><div class=\"wp-block-embed__wrapper\">https://github.blog/2019-11-13-universe-day-one/</div></figure>[](https://github.com/features/actions)<https://github.com/features/actions>\n\n[](https://github.com/features/packages)<https://github.com/features/packages>\n\n[](https://blog.chromium.org/2019/11/moving-towards-faster-web.html)<https://blog.chromium.org/2019/11/moving-towards-faster-web.html>\n\n<figure class=\"wp-block-embed-wordpress wp-block-embed is-type-wp-embed is-provider-azure-devops-blog\"><div class=\"wp-block-embed__wrapper\">https://devblogs.microsoft.com/devops/updates-to-the-git-commit-graph-feature/</div></figure>[](https://blog.angular.io/accessibility-in-angular-e84f73a223f)<https://blog.angular.io/accessibility-in-angular-e84f73a223f>",
    "iso8601Date": "2019-11-13T12:14:49-05:00",
    "basename": "ajs-week-in-web-november-13-2019"
  },
  "ajs-week-in-web-november-20-2019": {
    "title": "AJ&#8217;s Week In Web November 20, 2019",
    "date": "2019-11-20T17:52:08+00:00",
    "status": "publish",
    "permalink": "/ajs-week-in-web-november-20-2019",
    "author": "Alex Patterson",
    "excerpt": "????️Web Development News: Blocklike.js, KubeCon, Microsoft Ignite, Cloudformation Update, Google Cloud Contact Center AI",
    "type": "post",
    "id": 810,
    "thumbnail": "/v1600706369/ccd-cloudinary/eadfeca39b592e4dcc07a7136c70d856cb25294a-1920x1080-1/eadfeca39b592e4dcc07a7136c70d856cb25294a-1920x1080-1-150x150.png",
    "category": [
      "News",
      "Week In Web"
    ],
    "tag": [],
    "post_format": [
      "Video"
    ],
    "preview": "<https://youtu.be/SiwStYsXGLM>\n\nAJ’s Week In Web Links …",
    "content": "\n<https://youtu.be/SiwStYsXGLM>\n\nAJ’s Week In Web Links\n----------------------\n\n[](https://www.blocklike.org/)<https://www.blocklike.org/>\n\n[](https://scratch.mit.edu/)<https://scratch.mit.edu/>\n\n[](https://chromium-review.googlesource.com/c/chromium/src/+/1541185)<https://chromium-review.googlesource.com/c/chromium/src/+/1541185>\n\n<figure class=\"wp-block-embed-wordpress wp-block-embed is-type-wp-embed is-provider-linux-foundation-events\"><div class=\"wp-block-embed__wrapper\">https://events19.linuxfoundation.org/events/kubecon-cloudnativecon-north-america-2019/</div></figure><figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">https://youtu.be/WS0OcCUt4io</div></figure>[](https://www.microsoft.com/en-us/ignite)<https://www.microsoft.com/en-us/ignite>\n\n[](https://docs.microsoft.com/en-us/learn/azure/?WT.mc_id=msignitethetour2019-orlando-niner)[https://docs.microsoft.com/en-us/learn/azure/?WT.mc\\_id=msignitethetour2019-orlando-niner](https://docs.microsoft.com/en-us/learn/azure/?WT.mc_id=msignitethetour2019-orlando-niner)\n\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">https://youtu.be/jnUiJi4hts4</div></figure>[](https://aws.amazon.com/blogs/aws/new-import-existing-resources-into-a-cloudformation-stack/)<https://aws.amazon.com/blogs/aws/new-import-existing-resources-into-a-cloudformation-stack/>\n\n[](https://cloud.google.com/blog/products/ai-machine-learning/contact-center-ai-now-ga)<https://cloud.google.com/blog/products/ai-machine-learning/contact-center-ai-now-ga>",
    "iso8601Date": "2019-11-20T12:52:08-05:00",
    "basename": "ajs-week-in-web-november-20-2019"
  },
  "anchor-links-from-sanity-in-gatsby": {
    "title": "Anchor Links From Sanity in Gatsby",
    "date": "2019-10-14T16:57:12+00:00",
    "status": "publish",
    "permalink": "/anchor-links-from-sanity-in-gatsby",
    "author": "Alex Patterson",
    "excerpt": "Have you ever hunted around for days trying to find that simple package for adding anchor links to your Gatsby blog? It is easier than you might think, and you don't need a package!",
    "type": "post",
    "id": 774,
    "thumbnail": "/v1600706375/ccd-cloudinary/ad7a9080192cdcf39309ef26b5f47b2591d9ecd1-1920x1080-1/ad7a9080192cdcf39309ef26b5f47b2591d9ecd1-1920x1080-1-150x150.png",
    "category": [
      "Web"
    ],
    "tag": [
      "gatsby",
      "sanity.io"
    ],
    "post_format": [],
    "preview": "> TL;DR version is make sure you implement **`onRouteUpdate`** and …",
    "content": "\n> TL;DR version is make sure you implement **`onRouteUpdate`** and **`shouldUpdateScroll`** in **`gatsby-browser.js`**.\n\nSo what is an anchor link?[](https://codingcat.dev/blog/anchor-links-from-sanity-in-gatsby#so-what-is-an-anchor-link)\n---------------------------------------------------------------------------------------------------------------------\n\nAnchor links are a way to navigate within the same page in HTML. The easiest way to think of them are like a table of contents, or bookmarks on a page. You will see anchors used often in markdown pages that have header tags in the form of `#`. Now in order for those normal header tags to have a link they must be wrapped on the front end with a link tag, similar to this: `<a href=\"#anchor\"><h2>Headline Link</h2></a>`. If you inspect the code on this page, you will even see an example of just that, as the blog is written in markdown and converted to HTML.\n\nSanity.io[](https://codingcat.dev/blog/anchor-links-from-sanity-in-gatsby#sanityio)\n-----------------------------------------------------------------------------------\n\n### How does this work with Sanity.io[](https://codingcat.dev/blog/anchor-links-from-sanity-in-gatsby#how-does-this-work-with-sanityio)\n\n[Sanity](https://www.sanity.io/) is a headless content based CMS. You write in a [rich text editor](https://www.sanity.io/docs/what-you-need-to-know-about-block-text), which creates [portable text](https://www.portabletext.org/). So unlike markdown you wont have to convert header `#` items but you will have to serialize the portable text into something that Gatsby can understand. I won’t dive too deeply into how you create a site using sanity.io there are some [great guides](https://www.gatsbyjs.org/packages/gatsby-source-sanity/?=sanity#gatsby-source-sanity) for that using `gatsby-source-sanity`. ### Extending the Sanity Gatsby blog[](https://codingcat.dev/blog/anchor-links-from-sanity-in-gatsby#extending-the-sanity-gatsby-blog)\n\nSanity.io’s Gatsby [blog example](https://www.sanity.io/guides/the-blog-template), is a great starting point for how to get up and running quickly. You can use that and then extend the functionality however you would like. In the example there is a file for posts which looks similar to below, what we really care about is the line `<div>{_rawBody && <PortableText blocks={_rawBody} />}</div>`. ```\n<pre class=\"wp-block-code\">```\nimport React from \"react\";\nimport PortableText from \"./portableText\";\nimport Card from \"../Card\";\n\nexport default (props) => {\n  const { _rawBody, authors, categories } = props;\n  return(\n  <article className=\"flex flex-col w-full max-w-xl md:max-w-1xl md:max-w-2xl lg:max-w-3xl xl:max-w-6xl m-2 md:max-m-8 md:max-m-8 lg:max-m-8 xl:m-8\">\n    <div className=\"w-full\">\n    <Card {...props} />\n    </div>\n    <section className=\"markdown bg-white w-full rounded mt-4 p-4\">\n    <div>{_rawBody && <PortableText blocks={_rawBody} />}</div>\n    <div>\n      <aside>\n        {categories && (\n          <div>\n            <h3>Categories</h3>\n            <ul>\n              {categories.map(category => (\n                <li key={category._id}>{category.title}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </aside>\n    </div>\n    </section>\n  </article>\n  )}\n```\n```\n\nThis is a simple react component that uses [@sanity/block-content-to-react](https://github.com/sanity-io/block-content-to-react). The great part here is that they have allowed for serializers and you can add a great deal of customization to any of the block based PortableText that you will be receiving from the graphql from Sanity.io. ```\n<pre class=\"wp-block-code\">```\nimport React from \"react\";\nimport clientConfig from \"../../../client-config\";\nimport BasePortableText from \"@sanity/block-content-to-react\";\nimport serializers from \"../graphql/serializers\";\n\nconst PortableText = ({ blocks }) => {\n  return(\n  <BasePortableText\n    blocks={blocks}\n    serializers={{...serializers}}\n    {...clientConfig.sanity} />\n  )\n};\n\nexport default PortableText;\n```\n```\n\n### Sanity.io Serializers[](https://codingcat.dev/blog/anchor-links-from-sanity-in-gatsby#sanityio-serializers)\n\nThe great part about serializers is that you can provide any custom React component that you would like to handle any of the different types that are coming from Sanity.io. ```\n<pre class=\"wp-block-code\">```\nimport React from \"react\";\nimport Figure from \"./Figure\";\nimport Code from \"./Code\";\nimport Img from \"./Img\";\nimport Block from \"./Block\";\n\nconst serializers = {\n  types: {\n    authorReference: ({ node }) => <span>{node.author.name}</span>,\n    mainImage: Figure,\n    code: Code,\n    img: Img,\n    block: Block\n  },\n};\n\nexport default serializers;\n```\n```\n\nA fun and simple example is `img` although I could add much of this inline, I plan to use [cloudinary’s](http://cloudinary.com/) image manipulations to apply affects as I would like to my images. So I added a simple component called `Img` that takes in the node and outputs a simple img tag with corresponding alt text. ```\n<pre class=\"wp-block-code\">```\nimport React from \"react\";\n\nexport default ({ node }) => {\n  const { asset } = node;\n  return <img src={asset.src} alt={asset.alt} />;\n};\n```\n```\n\nNow the same can hold true for all the `block` type items that appear with portableText. Because we are using Sanity.io’s awesome `@sanity/block-content-to-react` we really wouldn’t have to do much here, but since again I am a lazy developer I want to make all those headings magically have anchor tags associated, but our portableText looks something like below:So in order to make that happen we added the `block: Block` serializer above which Sanity.io has a great [example](https://github.com/sanity-io/block-content-to-react#customizing-default-serializer-for-block-type) how to setup. My Block looks very similar but it is setting Gatsby Link tags inside each of these headings (well h2 and h3 for now). ```\n<pre class=\"wp-block-code\">```\nimport React from \"react\";\nimport { IoMdLink } from \"react-icons/io/\";\nimport { Link } from \"gatsby\";\nconst slugs = require(`github-slugger`)()\n\nexport default (props) => {\n    slugs.reset();\n    const style = props.node.style || 'normal';\n    // If Heading Level add Anchor Link\n    if (typeof location !== `undefined` && /^h\\d/.test(style)) {\n      const level = style.replace(/[^\\d]/g, '')\n      const slug = slugs.slug(props.children[0], false)\n      switch (level) {\n        case 'h3':\n          return <h3 id={slug} className=\"flex\">{props.children}<Link to={`${location.pathname}#${slug}`}><div className=\"py-1 pl-1 rotateIn\"><IoMdLink /></div></Link></h3>\n        default:\n            return <h2 id={slug} className=\"flex\">{props.children}<Link to={`${location.pathname}#${slug}`}><div className=\"py-1 pl-1 rotateIn\"><IoMdLink /></div></Link></h2>\n      }\n    }\n\n    return style === 'blockquote'\n    ? <blockquote>{props.children}</blockquote>\n    : <p>{props.children}</p>\n};\n\n\n```\n```\n\nAdding Gatsby Anchor Links[](https://codingcat.dev/blog/anchor-links-from-sanity-in-gatsby#adding-gatsby-anchor-links)\n----------------------------------------------------------------------------------------------------------------------\n\nNow even though, Knut Melvær has a great guide called [Internal and external links](https://www.sanity.io/guides/portable-text-internal-and-external-links) that covers in great detail how to add links to your front end, I am a fairly lazy developer and I don’t want to manually select and add all of my anchor links so that is why I used the above method. This same approach can be made using markdown files using [gatsby-remark-autolink-headers](https://www.gatsbyjs.org/packages/gatsby-remark-autolink-headers/?=remark).The one missing piece I found is scrolling to the correct location within the page in Gatsby. In order to do this Gatsby provides some awesome [browser-apis](https://www.gatsbyjs.org/docs/browser-apis/). In order for the scrolling to occur when the page is first loaded we need to use `onRouteUpdate` this will allow us to use the location and check for an existance for `hash` which is our anchor link. I also implemented `shouldUpdateScroll` as selecting an internal link did not trigger a route update, so this was needed without refresh.gatsby-browser.js ```\n<pre class=\"wp-block-code\">```\n/**\n * Implement Gatsby's Browser APIs in this file.\n *\n * See: https://www.gatsbyjs.org/docs/browser-apis/\n */\n\n// You can delete this file if you're not using it\n\nexports.onRouteUpdate = ({location}) => {\n  anchorScroll(location);\n  return true;\n};\nexports.shouldUpdateScroll = ({\n  routerProps: { location },\n  getSavedScrollPosition\n}) => {\n  anchorScroll(location);\n  return true;\n}\n\nfunction anchorScroll(location){\n  // Check for location so build does not fail\n  if (location && location.hash) {\n    setTimeout(() => {\n      // document.querySelector(`${location.hash}`).scrollIntoView({ behavior: 'smooth', block: 'start' });\n      const item = document.querySelector(`${location.hash}`).offsetTop;\n      const mainNavHeight = document.querySelector(`nav`).offsetHeight;\n      window.scrollTo({top: item - mainNavHeight, left: 0, behavior: 'smooth'});\n    }, 0);\n  }\n}\n```\n```\n\nFinal result[](https://codingcat.dev/blog/anchor-links-from-sanity-in-gatsby#final-result)\n------------------------------------------------------------------------------------------\n\nA nice smooth scrolling screen on refresh and internal link click.<video controls=\"\" loop=\"\" width=\"100%\"></video>[](https://twitter.com/intent/tweet?url=https://codingcat.dev/blog/anchor-links-from-sanity-in-gatsby&via=CodingCatDev&hashtags=CodingCatDevShares&text=Anchor%20Links%20From%20Sanity%20in%20Gatsby%0a)[](https://www.linkedin.com/shareArticle?mini=true&url=https://codingcat.dev/blog/anchor-links-from-sanity-in-gatsby&title=Anchor%20Links%20From%20Sanity%20in%20Gatsby%0a&summary=%27#CodingCatDevShares'&source='codingcat.dev')[](https://www.facebook.com/sharer.php?u=https://codingcat.dev/blog/anchor-links-from-sanity-in-gatsby)[](https://www.reddit.com/submit?url=https://codingcat.dev/blog/anchor-links-from-sanity-in-gatsby&title=Anchor%20Links%20From%20Sanity%20in%20Gatsby%0a)[](https://news.ycombinator.com/submitlink?u=https://codingcat.dev/blog/anchor-links-from-sanity-in-gatsby&t=Anchor%20Links%20From%20Sanity%20in%20Gatsby%0a)",
    "iso8601Date": "2019-10-14T12:57:12-04:00",
    "basename": "anchor-links-from-sanity-in-gatsby"
  },
  "better-performance-through-analysis": {
    "title": "Better Performance through analysis",
    "date": "2019-08-17T16:25:27+00:00",
    "status": "publish",
    "permalink": "/better-performance-through-analysis",
    "author": "Alex Patterson",
    "excerpt": "Example of how to use Web.dev to maintain a timeline of performance, while running firebase performance for constant monitoring.",
    "type": "post",
    "id": 702,
    "thumbnail": "/v1600706354/ccd-cloudinary/edeed56fbd77dd393cca2604368c6e06c5b58491-3641x2048-1/edeed56fbd77dd393cca2604368c6e06c5b58491-3641x2048-1-150x150.png",
    "category": [
      "Web"
    ],
    "tag": [
      "monitoring",
      "performance"
    ],
    "post_format": [],
    "preview": "> Please note I wrote this on my phone driving 6 hours, so I hope to …",
    "content": "\n> Please note I wrote this on my phone driving 6 hours, so I hope to update in more detail. Fun fact I now know how to do git remote recursive from Android ????\n\nThe current web standard for initial page load is 2.0 seconds. This is only part of the performance story. Let’s dive in a little deeper and see how else we can improve performance. In terms of data reduction and user experience, sometimes these things are not as noticeable.\n\nWeb.dev[](https://codingcat.dev/blog/better-performance-through-analysis#webdev)\n--------------------------------------------------------------------------------\n\n[Web.dev learning](https://web.dev/learn) is one of the best sources to increase performance on your site.As you can see in the video, they have several subjects to help improve your sites performance.I actually find myself using the [measure](https://web.dev/measure) feature prior to diving into the learning section. But I never was good at “hitting the books” in school, I am a visual hands on learner ????.It is nice to repeat the lighthouse metrics to see what you have learned and the trends over time. <figure class=\"wp-block-image size-large\">![](https://res.cloudinary.com/ajonp/image/upload/v1600706347/codingcat.dev/image_70309666.png)</figure><figure class=\"wp-block-image\">![metrics](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/Screenshot_20190817-083308_2.png)</figure>Firebase performance monitoring[](https://codingcat.dev/blog/better-performance-through-analysis#firebase-performance-monitoring)\n---------------------------------------------------------------------------------------------------------------------------------\n\nFirebase Performance Monitoring [docs](https://firebase.google.com/docs/perf-mon) have the best information possible. With that said there are three key elements: 1. Automatically measure app startup time, HTTP/S network requests, and more\n2. Gain insight into situations where app performance could be improved\n3. Customize Performance Monitoring for your app\n\nThe awesome part of Firebase is that it is a very small amount of code that gives you all of this great info!Here you can see a great overview <figure class=\"wp-block-image\">![overview](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/Screenshot_20190817-100008_2.png)</figure>You can see all the pages and how many samples determine the average performance. <figure class=\"wp-block-image\">![pages](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/Screenshot_20190817-170441.png)</figure>Why 2 seconds[](https://codingcat.dev/blog/better-performance-through-analysis#why-2-seconds)\n---------------------------------------------------------------------------------------------\n\nGoogle ranks search results higher based on many inputs to the algorithm, speed is one of the most important factors! Now if you want to go beyond that checkout [Google’s Performance blog](https://developers.google.com/web/fundamentals/performance/why-performance-matters/). User perception matters[](https://codingcat.dev/blog/better-performance-through-analysis#user-perception-matters)\n-----------------------------------------------------------------------------------------------------------------\n\nYou really need to make all pages feel like less than one second, why? Humans can’t perceive things much faster than one second, but past that they start to think things are wrong. Google cares about the user and uses the [RAIL method](https://developers.google.com/web/fundamentals/performance/rail). - **Response** – How quickly browser reacts\n- **Animation** – effects that make a site look good\n- **Idle** – Settling down so browser does not have to process\n- **Load** – How quick does this page load\n\nAdditional tools[](https://codingcat.dev/blog/better-performance-through-analysis#additional-tools)\n---------------------------------------------------------------------------------------------------\n\nAs Google’s post points out[Chrome DevTools](https://developers.google.com/web/fundamentals/performance/rail#devtools) The developer tools built into Google Chrome. Provides in-depth analysis on everything that happens while your page loads or runs.[Lighthouse](https://developers.google.com/web/fundamentals/performance/rail#lighthouse) Available in Chrome DevTools, as a Chrome Extension, as a Node.js module, and within WebPageTest. You give it a URL, it simulates a mid-range device with a slow 3G connection, runs a series of audits on the page, and then gives you a report on load performance, as well as suggestions on how to improve. Also provides audits to improve accessibility, make the page easier to maintain, qualify as a Progressive Web App, and more.[WebPageTest](https://developers.google.com/web/fundamentals/performance/rail#webpagetest) Available at webpagetest.org/easy. You give it a URL, it loads the page on a real Moto G4 device with a slow 3G connection, and then gives you a detailed report on the page’s load performance. You can also configure it to include a Lighthouse audit. Difference on what you test[](https://codingcat.dev/blog/better-performance-through-analysis#difference-on-what-you-test)\n-------------------------------------------------------------------------------------------------------------------------\n\nIf the majority of your users are on desktop, you probably care more about testing for desktop. However, if you are looking to build a broader user base, especially in developing world’s, you better check low end mobile results! ### Desktop for AJonP[](https://codingcat.dev/blog/better-performance-through-analysis#desktop-for-ajonp)\n\nI try to get an all A rating, but this shows even smaller items that you can fix. <figure class=\"wp-block-image\">![AJonP desktop sample](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/Screenshot_20190818-124358.png)</figure>It allows you to really dig down into the details. <figure class=\"wp-block-image\">![AJonP desktop details](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/Screenshot_20190818-124455.png)</figure>### Mobile low-end for AJonP[](https://codingcat.dev/blog/better-performance-through-analysis#mobile-low-end-for-ajonp)\n\nAn example where I can improve performance still on low end devices. <figure class=\"wp-block-image\">![first byte](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/Screenshot_20190817-225336.png)</figure><figure class=\"wp-block-image\">![technical](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/Screenshot_20190817-225421.png)</figure>",
    "iso8601Date": "2019-08-17T12:25:27-04:00",
    "basename": "better-performance-through-analysis"
  },
  "building-a-fun-app-with-ionic-studio-and-cloudinary": {
    "title": "Building a Fun App With Ionic Studio and Cloudinary",
    "date": "2019-08-12T17:42:54+00:00",
    "status": "publish",
    "permalink": "/building-a-fun-app-with-ionic-studio-and-cloudinary",
    "author": "Alex Patterson",
    "excerpt": "This post describes the procedure of uploading images to Cloudinary as a prelude for building a fun app called Face Smash with Ionic Studio.",
    "type": "post",
    "id": 672,
    "thumbnail": "/v1600704447/ccd-cloudinary/cloudinary_face_detection/cloudinary_face_detection-150x150.png",
    "category": [
      "Uncategorized"
    ],
    "tag": [
      "cloudinary"
    ],
    "post_format": [],
    "preview": "In the [JAMstack](https://jamstack.org/) world, …",
    "content": "\nIn the [JAMstack](https://jamstack.org/) world, [Cloudinary](https://cloudinary.com/) is the market leader as a comprehensive, cloud-based image- and video-management platform that’s in use by hundreds of thousands of users around the world, from startups to enterprises. In fact, it’s widely acclaimed as the best solution for hosting visual media on the web.[Ionic Studio](https://ionicframework.com/studio) is a robust IDE that efficiently and smoothly enables the development of cross-platform apps. In his November 2018 [announcement](https://ionicframework.com/blog/announcing-ionic-studio-a-powerful-new-way-to-build-apps/), CEO [Max Lynch](https://twitter.com/maxlynch) cogently elaborates on Ionic Studio’s many impressive capabilities, complete with a demo video.This post describes the procedure of uploading images to Cloudinary as a prelude for building a fun app called Face Smash with Ionic Studio. You upload a photo to Cloudinary with its [upload API](https://cloudinary.com/documentation/image_upload_api_reference) and then, by leveraging [Cloudinary’s face-detection feature](https://cloudinary.com/blog/face_detection_based_cropping), have Cloudinary display all the uploaded people photos with the one you just uploaded at the top. Click that photo and a water balloon appears and smashes the face in the photo.Read on for the steps.\n\nUploading With Cloudinary APIs[](https://codingcat.dev/blog/building-a-fun-app-with-ionic-studio-and-cloudinary#uploading-with-cloudinary-apis)\n-----------------------------------------------------------------------------------------------------------------------------------------------\n\nUpload pictures to Cloudinary with its image upload API, unsigned, and complete the endpoint.\n\n### API for Image Uploads[](https://codingcat.dev/blog/building-a-fun-app-with-ionic-studio-and-cloudinary#api-for-image-uploads)\n\nSeveral SDKs are available for uploading images to Cloudinary through its [upload API](https://cloudinary.com/documentation/image_upload_api_reference). For simplicity, use the endpoint type for unsigned uploads for this app.Upload this picture of me in the much-coveted Ionic hat—\n\n<figure class=\"wp-block-image\">![Ionic hat](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/v1565636611/AlexPics/alex_ionic_hat_inside.png)</figure>—by specifying the JPEG image with the `file` parameter, like this:\n\n```\n<pre class=\"wp-block-code\">```\nfile=https://res.cloudinary.com/ajonp/image/upload/q_auto/AlexPics/alex_ionic_hat_inside.webp \n```\n```\n\nCloudinary then adds a copy of that image to a location on a Cloudinary server.{note} The URL under `file` above is an example only. Feel free to specify a URL of your choice. {/note}Even though this app requires that you take a picture and then reference it with the `file` parameter, Cloudinary ultimately sends the Base64-encoded string to the endpoint.For details on all the upload options, see the [related Cloudinary documentation](https://cloudinary.com/documentation/upload_images#data_upload_options).\n\n### Unsigned Uploads[](https://codingcat.dev/blog/building-a-fun-app-with-ionic-studio-and-cloudinary#unsigned-uploads)\n\nTo save time, opt for [unsigned-uploads](https://cloudinary.com/documentation/upload_images#unsigned_upload) to directly upload to Cloudinary from a browser or mobile app with no signature for authentication, bypassing your servers. However, for security reasons, you cannot specify certain upload parameters with unsigned upload calls. One of those parameters is `upload_preset`, a requirement for this app.As a workaround, create an upload preset in this screen in the Cloudinary [Console](https://cloudinary.com/console/settings/upload):\n\n<figure class=\"wp-block-image size-large\">![](/w_30,h_12/v1600704450/ccd-cloudinary/image-76/image-76.png)</figure><figure class=\"wp-block-image\">![Upload Preset](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/v1565637994/ajonp-ajonp-com/blog/Screen_Shot_2019-08-12_at_3.26.07_PM.png)</figure>That preset places all the newly uploaded photos in a folder called `ajonp-ionic-cloudinary-facesmash`, as specified at the bottom of the settings screen:.\n\n<figure class=\"wp-block-image size-large\">![](/w_30,h_15/v1600704452/ccd-cloudinary/image-77/image-77.png)</figure><figure class=\"wp-block-image\">![preset folder](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/Screen_Shot_2019-08-12_at_3.30.49_PM.png)</figure>`upload_preset` is now all set for incorporation into the code:\n\n```\n<pre class=\"wp-block-code\">```\nupload_preset=kuqm4xkg \n```\n```\n\n### Endpoint Uploads[](https://codingcat.dev/blog/building-a-fun-app-with-ionic-studio-and-cloudinary#endpoint-uploads)\n\nNow complete the upload through the endpoint:\n\n```\n<pre class=\"wp-block-code\">```\n<video controls=\"controls\" height=\"600\">\n  <source\n    src=\"https://res.cloudinary.com/ajonp/video/upload/q_auto/ajonp-ajonp-com/blog/cloudinary_api_endpoing_upload.webm\"\n    type=\"video/webm\"\n  />\n  <source\n    src=\"https://res.cloudinary.com/ajonp/video/upload/q_auto/ajonp-ajonp-com/blog/cloudinary_api_endpoing_upload.mp4\"\n    type=\"video/mp4\"\n  />\n</video>\n\n\n```\n```\n\n```\n<pre class=\"wp-block-code\">```\nhttps://api.cloudinary.com/v1_1/ajonp/image/upload?file=https://res.cloudinary.com/ajonp/image/upload/q_auto/AlexPics/alex_ionic_hat_inside.webp&upload_preset=kuqm4xkg \n```\n```\n\nAfterwards, a JSON payload returns, as in this example:\n\n```\n<pre class=\"wp-block-code\">```\n{\n  \"public_id\": \"ajonp-ionic-cloudinary-facesmash/raumizdelqrlows7pvzy\",\n  \"version\": 1565650174,\n  \"signature\": \"59905774f17ea06629ff90b73dfc9bed6c7fbdfd\",\n  \"width\": 2448,\n  \"height\": 3264,\n  \"format\": \"jpg\",\n  \"resource_type\": \"image\",\n  \"created_at\": \"2019-08-12T22:49:34Z\",\n  \"tags\": [\n    \"facesmash\",\n    \"face\",\n    \"head\",\n    \"chin\",\n    \"selfie\",\n    \"forehead\",\n    \"photography\",\n    \"fun\"\n  ],\n  \"pages\": 1,\n  \"bytes\": 1882858,\n  \"type\": \"upload\",\n  \"etag\": \"4ae8ba0edfb90689101fdfbb8b97548d\",\n  \"placeholder\": false,\n  \"url\": \"http://res.cloudinary.com/ajonp/image/upload/q_auto/ajonp-ionic-cloudinary-facesmash/raumizdelqrlows7pvzy.webp\",\n  \"secure_url\": \"https://res.cloudinary.com/ajonp/image/upload/q_auto/ajonp-ionic-cloudinary-facesmash/raumizdelqrlows7pvzy.webp\",\n  \"access_mode\": \"public\",\n  \"moderation\": [\n    {\n      \"response\": { \"moderation_labels\": [] },\n      \"status\": \"approved\",\n      \"kind\": \"aws_rek\",\n      \"updated_at\": \"2019-08-12T22:49:36Z\"\n    }\n  ],\n  \"info\": {\n    \"categorization\": {\n      \"google_tagging\": {\n        \"status\": \"complete\",\n        \"data\": [\n          { \"tag\": \"Face\", \"confidence\": 0.9635 },\n          { \"tag\": \"Head\", \"confidence\": 0.9097 },\n          { \"tag\": \"Chin\", \"confidence\": 0.8504 },\n          { \"tag\": \"Selfie\", \"confidence\": 0.8183 },\n          { \"tag\": \"Forehead\", \"confidence\": 0.7823 },\n          { \"tag\": \"Photography\", \"confidence\": 0.738 },\n          { \"tag\": \"Fun\", \"confidence\": 0.7039 },\n          { \"tag\": \"Headgear\", \"confidence\": 0.6748 },\n          { \"tag\": \"Cap\", \"confidence\": 0.6577 },\n          { \"tag\": \"T-shirt\", \"confidence\": 0.5763 },\n          { \"tag\": \"Smile\", \"confidence\": 0.5404 }\n        ]\n      }\n    }\n  },\n  \"faces\": [[132, 906, 808, 1077]],\n  \"coordinates\": { \"faces\": [[132, 906, 808, 1077]] },\n  \"original_filename\": \"alex_ionic_hat_inside\"\n}\n\n\n```\n```\n\nNote this key line, which depicts that Cloudinary has picked up a face in the coordinates:\n\n```\n<pre class=\"wp-block-code\">```\n\"coordinates\": { \"faces\": [[132, 906, 808, 1077]] } \n```\n```\n\nHowever, facial detection sometimes doesn’t work. For example, it did not recognize that this is a picture of me, probably because of the shadows from my hat:\n\n<figure class=\"wp-block-image\">![Alex Ionic Hat Outside](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/v1565636611/AlexPics/alex_ionic_hat.png)</figure>```\n<pre class=\"wp-block-code\">```\n\"coordinates\":{\"faces\":[]} \n```\n```\n\nHere’s another problematic picture that resulted from erroneous coordinates of face detection, as shown in the second picture:\n\n<figure class=\"wp-block-image\">![Issue face detection](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/Screen_Shot_2019-08-12_at_9.16.51_PM.png)</figure><figure class=\"wp-block-image\">![Example coordinates](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/Screen_Shot_2019-08-12_at_9.10.16_PM.png)</figure>I’d be happy to work with the Cloudinary team to improve the success rate for facial detection.\n\nLeveraging Facial Detection in Cloudinary[](https://codingcat.dev/blog/building-a-fun-app-with-ionic-studio-and-cloudinary#leveraging-facial-detection-in-cloudinary)\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n[Cloudinary’s documentation on face detection](https://cloudinary.com/documentation/face_detection_based_transformations) describes in detail how to transform detected images by adding parameters..As a start, with the `g_face` parameter, you add gravity to the position of the largest face in the image, after which you can manipulate it as you see fit. Al the pictures in this app appear as thumbnails, as defined in this code:\n\n```\n<pre class=\"wp-block-code\">```\nhttp://res.cloudinary.com/ajonp/image/upload/w_1000,h_1000,c_crop,g_face,r_max/w_200/v1565650174/ajonp-ionic-cloudinary-facesmash/raumizdelqrlows7pvzy.webp \n```\n```\n\nAn example is this cropped thumbnail:\n\n<figure class=\"wp-block-image\">![Cropped Sample Thumbnail](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/w_200/v1565650174/ajonp-ionic-cloudinary-facesmash/raumizdelqrlows7pvzy.png)</figure>Being careful in naming apps[](https://codingcat.dev/blog/building-a-fun-app-with-ionic-studio-and-cloudinary#being-careful-in-naming-apps)\n-------------------------------------------------------------------------------------------------------------------------------------------\n\nI can’t help but think of [Facemash from the Social Network](https://youtu.be/VSKoVsHs_Ko), and don’t want their to be confusion, this is a very fun project and we won’t be rating anyone ????!! I am hoping that the Amazon Rekognition AI Moderation will catch most the bad stuff. If it gets out of hand I am going to take it down. I don’t ever want to degrade anyone and write a [facemash apology](https://www.thecrimson.com/article/2003/11/19/facemash-creator-survives-ad-board-the/) like Zuck ????![](https://twitter.com/intent/tweet?url=https://codingcat.dev/blog/building-a-fun-app-with-ionic-studio-and-cloudinary&via=CodingCatDev&hashtags=CodingCatDevShares&text=Building%20a%20Fun%20App%20With%20Ionic%20Studio%20and%20Cloudinary%0a)[](https://www.linkedin.com/shareArticle?mini=true&url=https://codingcat.dev/blog/building-a-fun-app-with-ionic-studio-and-cloudinary&title=Building%20a%20Fun%20App%20With%20Ionic%20Studio%20and%20Cloudinary%0a&summary=%27#CodingCatDevShares'&source='codingcat.dev')[](https://www.facebook.com/sharer.php?u=https://codingcat.dev/blog/building-a-fun-app-with-ionic-studio-and-cloudinary)[](https://www.reddit.com/submit?url=https://codingcat.dev/blog/building-a-fun-app-with-ionic-studio-and-cloudinary&title=Building%20a%20Fun%20App%20With%20Ionic%20Studio%20and%20Cloudinary%0a)[](https://news.ycombinator.com/submitlink?u=https://codingcat.dev/blog/building-a-fun-app-with-ionic-studio-and-cloudinary&t=Building%20a%20Fun%20App%20With%20Ionic%20Studio%20and%20Cloudinary%0a)",
    "iso8601Date": "2019-08-12T13:42:54-04:00",
    "basename": "building-a-fun-app-with-ionic-studio-and-cloudinary"
  },
  "cloud-function-github-update": {
    "title": "Cloud Function GitHub Update",
    "date": "2018-12-26T23:14:04+00:00",
    "status": "publish",
    "permalink": "/cloud-function-github-update",
    "author": "Alex Patterson",
    "excerpt": "Changing git libraries",
    "type": "post",
    "id": 128,
    "thumbnail": "/v1600704416/ccd-cloudinary/eeef21dd96e8a299ccb2dfbcad5156781d0d7d0d-1280x720-1/eeef21dd96e8a299ccb2dfbcad5156781d0d7d0d-1280x720-1-150x150.png",
    "category": [
      "Google Cloud Platform"
    ],
    "tag": [
      "Google Cloud Function"
    ],
    "post_format": [],
    "preview": "Goal\n====\n\nMy goal is to clone a Repo using, add a new file, then …",
    "content": "\nGoal\n====\n\nMy goal is to clone a Repo using, add a new file, then push that new file to GitHub.\n\nAuthentication using Nodegit[](https://codingcat.dev/blog/cloud-function-github-update#authentication-using-nodegit)\n--------------------------------------------------------------------------------------------------------------------\n\n[nodegit](https://github.com/nodegit/nodegit)  \nAuthentication has become the biggest prolem with this entire process! I have added a comment to [Issue 1035](https://github.com/nodegit/nodegit/issues/1035) but I don’t know if it will get much traction as it seems there have been several issues out there already.\n\n### Failed Attempts[](https://codingcat.dev/blog/cloud-function-github-update#failed-attempts)\n\nAll of these attempts of course work for cloning, because I do not think it really checks\n\n- **sshKeyNew**\n\n```\n<pre class=\"wp-block-code\">```\nreturn NodeGit.Cred.sshKeyNew( \"username\", publicKeyContents, privateKeyContents, \"\").then(function(cred) { assert.ok(cred instanceof NodeGit.Cred); }); \n```\n```\n\n- **userpassPlaintextNew** `sh` return NodeGit.Cred.userpassPlaintextNew(GITHUB\\_TOKEN, “x-oauth-basic”);\n\n```\n<pre class=\"wp-block-code\">```\n### Successful Attempt - **sshKeyFromAgent** ```sh return nodegit.Cred.sshKeyFromAgent(userName); \n```\n```\n\nCloud Funcitons[](https://codingcat.dev/blog/cloud-function-github-update#cloud-funcitons)\n------------------------------------------------------------------------------------------\n\nSo the above sshKeyFromAgent works great while I am on my local Dev box (MacOS 10.14) after running the command `ssh-add`. I am currently running Node v10.14.1.I thought that it would be easy enough to do the same on a cloud function, but this took some digging. I then found out that Node 6 [base image](https://cloud.google.com/functions/docs/concepts/nodejs-6-runtime#base_image) is on Debian, I thought it was Alpine.Interestingly they changed this in Node 8 [base image](https://cloud.google.com/functions/docs/concepts/nodejs-8-runtime#base_image) to running Ubuntu 18.04, so I will have to keep an eye on this if Upgrading.\n\nPivot\n=====\n\nAs many great things in life, sometimes you dribble down a lane that is direct into a double team…so you must pivot to score. (Wow it must be late, basketball analogies are showing up!)\n\nsimple-git aka git-js[](https://codingcat.dev/blog/cloud-function-github-update#simple-git-aka-git-js)\n------------------------------------------------------------------------------------------------------\n\nI ended up switching to [simple-git](https://github.com/steveukx/git-js) as nodegit ssh issues had me 2 days behind on trying to get out lesson 8. It provides a very simple interface to effectively accomplish everything I needed. It also allows me to use a personal token to do Git updates to GitHub which I liked a lot better.",
    "iso8601Date": "2018-12-26T18:14:04-05:00",
    "basename": "cloud-function-github-update"
  },
  "cloudinary-in-jamstacks-using-webp": {
    "title": "Cloudinary in JAMStacks using Webp",
    "date": "2019-07-31T15:00:19+00:00",
    "status": "publish",
    "permalink": "/cloudinary-in-jamstacks-using-webp",
    "author": "Alex Patterson",
    "excerpt": "Create a single source for all of your posting needs, using the best format for the browser!",
    "type": "post",
    "id": 448,
    "thumbnail": "/v1600704486/ccd-cloudinary/cloudinary_webp/cloudinary_webp-150x150.png",
    "category": [
      "Uncategorized"
    ],
    "tag": [
      "cloudinary"
    ],
    "post_format": [],
    "preview": "Cloudinary and Jamstacks\n========================\n\nThe awesome part …",
    "content": "\nCloudinary and Jamstacks\n========================\n\nThe awesome part about hosting on Cloudinary is that it provides a very extensive API for developers. However for content creators they often don’t care that much about the technical aspects that are required to show images on the Web. We have been told repeatedly that storage is cheap and it doesn’t matter if we just throw these images on an unmanaged server, or a CMS like Adobe AEM or WordPress. However as we start moving more items to the \"Cloud\" pricing and functionality do start to matter, for both the producer and consumer of this content.\n\nWhat is Webp[](https://codingcat.dev/blog/cloudinary-in-jamstacks-using-webp#what-is-webp)\n------------------------------------------------------------------------------------------\n\n> WebP is a modern image format that provides superior lossless and lossy compression for images on the web. Using WebP, webmasters and web developers can create smaller, richer images that make the web faster.\n\nWebP lossless images are 26% smaller in size compared to PNGs. WebP lossy images are 25-34% smaller than comparable JPEG images at equivalent SSIM quality index. [Webp](https://developers.google.com/speed/webp/) is a format created by Google in 2010, and has been implemented in many of todays browsers.\n\n### Why do we care about Webp[](https://codingcat.dev/blog/cloudinary-in-jamstacks-using-webp#why-do-we-care-about-webp)\n\nIn many cloud based systems they will create several different image sizes which starts to add up on your storage costs. Now the consumer doesn’t necessarily care about this cost for the producer. The consumer will care about how much data their phone is using and eating up their phone plan. ### How does Cloudinary make Webp easy?[](https://codingcat.dev/blog/cloudinary-in-jamstacks-using-webp#how-does-cloudinary-make-webp-easy)\n\nHTTP Calls:Original Call 134 KBURL: [https://res.cloudinary.com/ajonp/image/upload/q\\_auto/ajonp-ajonp-com/blog/Cloudinary\\_-\\_Webp.webp](https://res.cloudinary.com/ajonp/image/upload/q_auto/ajonp-ajonp-com/blog/Cloudinary_-_Webp.webp)<figure class=\"wp-block-image\">![Title Photo PNG](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/hffb2m4yoewvtwd2np2f.png)</figure>Webp Call 49.7 KB – 63% reductionURL: [https://res.cloudinary.com/ajonp/image/upload/q\\_auto/ajonp-ajonp-com/blog/Cloudinary\\_-\\_Webp.webp](https://res.cloudinary.com/ajonp/image/upload/q_auto/ajonp-ajonp-com/blog/Cloudinary_-_Webp.webp)<figure class=\"wp-block-image\">![Title Photo Webp](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/kjzt6byjwsdwou7pw19w.png)</figure>Webp Call @ width of 800px 49.7 KB – 92.5% reductionURL: [https://res.cloudinary.com/ajonp/image/upload/w\\_800/v1564600835/ajonp-ajonp-com/blog/Cloudinary\\_-\\_Webp.webp](https://res.cloudinary.com/ajonp/image/upload/w_800/v1564600835/ajonp-ajonp-com/blog/Cloudinary_-_Webp.webp)<figure class=\"wp-block-image\">![Title Photo WEbp - 800px](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/tnvs0tqkfawkzmseeae3.png)</figure>Without doing anything more than changing png to webp, you can automatically reduce the call by 63%. Now most software can take this a step further and authomatically consider the screen size that your browser should request so an example above would be to request the picture width is 800px (‘w\\_800). ### Webp Support[](https://codingcat.dev/blog/cloudinary-in-jamstacks-using-webp#webp-support)\n\nAs you can see below Webp format is supported in all major browsers except for Safari (and iOS Safari). <figure class=\"wp-block-image\">![caniuse webp](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/fevcd3nnmbjwdtosomva.png)</figure><https://caniuse.com/#feat=webp>As you can see on Android using Chrome there is no issue with looking up the image using Webp. <figure class=\"wp-block-image\">![Android Webp](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/v1564962205/ajonp-ajonp-com/blog/h2totv0ub4jndjjnc7rf.png)</figure>When we attempt this on Safari the browser treats this as a file and downloads it. <figure class=\"wp-block-image\">![Ios Webp](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/v1564961942/ajonp-ajonp-com/blog/a8lmuu47pztq0jevrhku.png)</figure>### HTML picture to the rescue[](https://codingcat.dev/blog/cloudinary-in-jamstacks-using-webp#html-picture-to-the-rescue)\n\nSo as a developer I can’t honestly say “well just have people use anything except Safari”. So how do we solve this 100% of the time? HTML `<picture>` element is in for the rescue! When the ```\n<pre class=\"wp-block-code\">```\n<picture>\n  <source\n    srcset=\"https://res.cloudinary.com/ajonp/image/upload/q_auto/ajonp-ajonp-com/blog/Cloudinary_-_Webp.webp\"\n    type=\"image/webp\"\n  />\n  <img\n    src=\"https://res.cloudinary.com/ajonp/image/upload/q_auto/ajonp-ajonp-com/blog/Cloudinary_-_Webp.webp\"\n    alt=\"Cloudinary Webp\"\n  />\n</picture>\n\n\n```\n```\n\n<figure class=\"wp-block-image\">![Cloudinary Webp](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/Cloudinary_-_Webp.png)</figure>As you can see below Safari will use the `<img>` tag and not refer back to the `<source>` tag, and it will show the image correctly. <figure class=\"wp-block-image\">![Webp Picture Safari](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/pwbznjt7jh166kacevkx.png)</figure><figure class=\"wp-block-image\">![Network img vs source](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/ylcgjkzqau17g3cov6by.png)</figure>In Chrome the `<source>` tag is used so it will automatically pickup the webp extension and work correctly. Markdown[](https://codingcat.dev/blog/cloudinary-in-jamstacks-using-webp#markdown)\n----------------------------------------------------------------------------------\n\n### Why Markdown[](https://codingcat.dev/blog/cloudinary-in-jamstacks-using-webp#why-markdown)\n\nI cross post my lessons and blogs over to [DEV](https://dev.to/). Because of this I don’t prefer to use shortcodes and instead stick with supported markdown syntax. I also tend to move on the the next “cool” technology platform often.For instance I can easily load all Markdown to: - [Hugo](https://gohugo.io/)\n- [Jekyll](https://jekyllrb.com/)\n- [VuePress](https://vuepress.vuejs.org/)\n- [Gatsby](https://www.gatsbyjs.org/)\n\n### Markdown in Hugo[](https://codingcat.dev/blog/cloudinary-in-jamstacks-using-webp#markdown-in-hugo)\n\nI fully admit that it takes me much longer to take my [markdown file images](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#images) and replace them for `<picture>` tags (yes I am lazy). Hugo provides amazing things called [shortcodes](https://gohugo.io/content-management/shortcodes/) that will allow you to execute a great deal of code in a short one line example of markdown. [xabeng](https://dev.to/xabeng) created an awesome set of shortcodes [my hugo shortcode for including image from cloudinary](https://dev.to/xabeng/my-hugo-shortcode-for-including-image-from-cloudinary-1l46). ### VSCode Extension – Paste Image – Cloudinary[](https://codingcat.dev/blog/cloudinary-in-jamstacks-using-webp#vscode-extension---paste-image---cloudinary)\n\n[markdown image paste](https://marketplace.visualstudio.com/items?itemName=njLeonZhang.markdown-image-paste) is a fantastic plugin that allows you to take screenshots easily and loads them directly to cloudinary. By default once the upload completes it will place the new image URL into a markdown image tag.I did open an [issue](https://github.com/njleonzhang/vscode-extension-mardown-image-paste/issues/9) to allow for `html` code instead of the generic markdown syntax. ",
    "iso8601Date": "2019-07-31T11:00:19-04:00",
    "basename": "cloudinary-in-jamstacks-using-webp"
  },
  "debug-angular-9-in-chrome-console": {
    "title": "Debug Angular 9 in Chrome Console",
    "date": "2020-04-22T15:29:02+00:00",
    "status": "publish",
    "permalink": "/debug-angular-9-in-chrome-console",
    "author": "Alex Patterson",
    "excerpt": "",
    "type": "post",
    "id": 461,
    "thumbnail": "/v1600704486/ccd-cloudinary/debug_angular_9/debug_angular_9-150x150.png",
    "category": [
      "Uncategorized"
    ],
    "tag": [
      "angular"
    ],
    "post_format": [
      "Video"
    ],
    "preview": "[](https://youtu.be/H8GrzgQS-6c)[](https://youtu.be/H8GrzgQS-6c)<htt …",
    "content": "\n[](https://youtu.be/H8GrzgQS-6c)[](https://youtu.be/H8GrzgQS-6c)<https://youtu.be/H8GrzgQS-6c>\n\nDebug Angular 9 in Chrome Console\n=================================\n\n> These functions are exposed via the global `ng` “namespace” variable automatically when you import from `@angular/core` and run your application in development mode. These functions are not exposed when the application runs in a production mode.\n\nChrome Console Utilities\n------------------------\n\nThe great part about using the Chrome console is that it gives you access any DOM element that you have selected. For the last item you can get the reference by typing `$0` in the console. Below you will see that you can use the selection tool to easily find the element. Once this is selected you can then use `$0` as it will be the latest in your selection history. You can read further about this in [Console Utilities API Reference](https://developers.google.com/web/tools/chrome-devtools/console/utilities).\n\n<figure class=\"wp-block-image\">![Chrome Selection](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/debugAngular9/chromeSelection.png)</figure>Getting the Angular Component reference\n---------------------------------------\n\nNow that we know how to get a DOM reference we can use the Angular [code&gt;@angular/core/global&lt;/code](mailto:code>@angular/core/global</code) utilities, you can find more details here: [](https://angular.io/api/core/global#entry-point-exports)[](https://angular.io/api/core/global#entry-point-exports)<https://angular.io/api/core/global#entry-point-exports>.Using `ng.getContext($0)` we can access the angular component instance.\n\n```\n<pre class=\"wp-block-code\">```\n// Get this component\nlet dialogComponent = ng.getContext($0)\n\n// Get parent component\nlet dialogParentComponent = ng.getOwningComponent($0)\n```\n```\n\nChanging values in the Component\n--------------------------------\n\nNow that you have a reference to the component using `let dialogComponent = ng.getContext($0)` we can now update the properties within the component. For this example we will change the qty in our recipeIngredient object.\n\n```\n<pre class=\"wp-block-code\">```\ndialogComponent.data.recipeIngredient.qty = 5\n```\n```\n\nYou should also note that you can display the entire component as well incase you are unaware of the structure.\n\n<figure class=\"wp-block-image\">![](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/debugAngular9/Screen_Shot_2020-04-22_at_2.55.22_PM.png)</figure>Making Component Update\n-----------------------\n\nIn order to get the value change to show within the component you must trigger change detection.\n\n```\n<pre class=\"wp-block-code\">```\n// Apply change detection\nng.applyChanges(dialogComponent)\n```\n```",
    "iso8601Date": "2020-04-22T11:29:02-04:00",
    "basename": "debug-angular-9-in-chrome-console"
  },
  "firebase-hosting-version-settings": {
    "title": "Firebase Hosting Version Settings",
    "date": "2019-08-22T16:49:15+00:00",
    "status": "publish",
    "permalink": "/firebase-hosting-version-settings",
    "author": "Alex Patterson",
    "excerpt": "Set your version history for firebase hosting, to avoid storage costs.",
    "type": "post",
    "id": 750,
    "thumbnail": "/v1600706384/ccd-cloudinary/08db7925429fe741fd36e6d1e4b8b2d34972c9fc-1920x1080-1/08db7925429fe741fd36e6d1e4b8b2d34972c9fc-1920x1080-1-150x150.png",
    "category": [
      "Uncategorized"
    ],
    "tag": [
      "firebase"
    ],
    "post_format": [],
    "preview": "If you start to get that feeling like \"Why am I getting billed for …",
    "content": "\nIf you start to get that feeling like \"Why am I getting billed for this tiny app\" from Firebase, then this blog is for you!\n\nDashboard[](https://codingcat.dev/blog/firebase-hosting-version-settings#dashboard)\n-----------------------------------------------------------------------------------\n\nIf you project is currently using hosting, you should see your dashboard as soon as you enter your project. You can either click on your last deployment history or go to Hosting in the menu.\n\n<figure class=\"wp-block-image\">![firebase dashboard](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/Screen_Shot_2019-08-22_at_12.58.22_PM.png)</figure>Hosting Usage[](https://codingcat.dev/blog/firebase-hosting-version-settings#hosting-usage)\n-------------------------------------------------------------------------------------------\n\nYou may see multiple sites that you are currently hosting in this screen. For now lets switch over to the Usage tab. You should see a chart listed year of you trending stored bytes. In my graphy this shows a recent trendline upward (as I have been deploying a lot).\n\n<figure class=\"wp-block-image\">![hosting usage](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/Screen_Shot_2019-08-22_at_1.02.32_PM.png)</figure>If this type of storage trend where to continue I would eventually break into the 1GB limit for storage on this site, now granted for my 5MB it would take a great deal of time.\n\n<figure class=\"wp-block-image\">![Firebase Pricing](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/Screen_Shot_2019-08-22_at_1.05.23_PM.png)</figure>Updating Version[](https://codingcat.dev/blog/firebase-hosting-version-settings#updating-version)\n-------------------------------------------------------------------------------------------------\n\nIf you have multiple domains select View on the one that you want to change. Once you are in the Manage site area, you will see all of your domains at the top then the release history at the bottom.\n\n<figure class=\"wp-block-image\">![Firebase hosting manage site](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/Screen_Shot_2019-08-22_at_1.08.07_PM.png)</figure>It is in the Release History section that you will be able to select Version history settings, from the hamburger menu.\n\n<figure class=\"wp-block-image\">![Firebase Version history settings](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/Screen_Shot_2019-08-22_at_1.10.24_PM.png)</figure>When you get the modal screen to change the versions, you will see based on your selection the estimated storage. If you have several (in my case 100’s) of versions stored you will notice that a background job is kicked off that will mark your old versions for deletion.\n\n<figure class=\"wp-block-image\">![Version Settings change](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/Screen_Shot_2019-08-22_at_1.12.30_PM.png)</figure>Once the delete action has finished you will notice that your older deployments will have an `Auto deleted` indicator.\n\n<figure class=\"wp-block-image\">![Auto Delete Indicator](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/Screen_Shot_2019-08-22_at_1.52.07_PM.png)</figure>REST Service[](https://codingcat.dev/blog/firebase-hosting-version-settings#rest-service)\n-----------------------------------------------------------------------------------------\n\nYou can also automate this process if you are not into the Admin GUI through the [Firebase Hosting API](https://firebase.google.com/docs/hosting/reference/rest/v1beta1/sites.versions/delete).\n\n### Shell script[](https://codingcat.dev/blog/firebase-hosting-version-settings#shell-script)\n\n[andipaetzold/firebase-delete-releases.sh](https://gist.github.com/andipaetzold/94e470b4f74c85d426000d95791603fd)\n\n```\n<pre class=\"wp-block-code\">```\n#!/bin/bash set -eo pipefail echo \"Deleting existing hosting releases\" SITE=$1 echo \"Site: $SITE\" HEADER_AUTH=\"Authorization: Bearer \"$(gcloud auth application-default print-access-token)\"\"; PAGE_TOKEN= FIRST=true while : do echo \"Fetching releases for $PAGE_TOKEN\" RELEASES=$( \\ curl \\ -sS \\ -H \"$HEADER_AUTH\" \\ \"https://firebasehosting.googleapis.com/v1beta1/sites/$SITE/releases?pageToken=$PAGE_TOKEN&pageSize=25\" \\ ) for RELEASE_ID in $(echo $RELEASES | jq '.releases | keys[]') do VERSION_NAME=$(echo $RELEASES | jq --raw-output \".releases[$RELEASE_ID].version.name\") MESSAGE=$(echo $RELEASES | jq --raw-output \".releases[$RELEASE_ID].message\") VERSION_STATUS=$(echo $RELEASES | jq --raw-output \".releases[$RELEASE_ID].version.status\") if [ \"$VERSION_STATUS\" == \"FINALIZED\" ] && [ \"$FIRST\" == false ] then echo \"Deleting release $MESSAGE ($VERSION_NAME)\"; curl \\ -sS \\ -X DELETE \\ -H \"$HEADER_AUTH\" \\ \"https://firebasehosting.googleapis.com/v1beta1/$VERSION_NAME\" fi FIRST=false done if [ $(echo $RELEASES | jq --raw-output '.nextPageToken') == \"null\" ] then exit 0 fi PAGE_TOKEN=$(echo $RELEASES | jq --raw-output '.nextPageToken') sleep 1s done \n```\n```",
    "iso8601Date": "2019-08-22T12:49:15-04:00",
    "basename": "firebase-hosting-version-settings"
  },
  "front-end-web-development-podcasts": {
    "title": "Front End Web Development Podcasts",
    "date": "2019-08-18T16:44:54+00:00",
    "status": "publish",
    "permalink": "/front-end-web-development-podcasts",
    "author": "Alex Patterson",
    "excerpt": "This is my current list of front end web development podcasts, and just a little detail on why I listen to each one of them.",
    "type": "post",
    "id": 731,
    "thumbnail": "/v1600706388/ccd-cloudinary/395b7d00fc00bfe619dc7add36a9d282376e17c0-1920x1080-1/395b7d00fc00bfe619dc7add36a9d282376e17c0-1920x1080-1-150x150.png",
    "category": [
      "Web"
    ],
    "tag": [
      "podcasts"
    ],
    "post_format": [],
    "preview": "I listen to all of my podcasts using [Pocket …",
    "content": "\nI listen to all of my podcasts using [Pocket Casts](https://www.pocketcasts.com/), it makes my life easy to switch from mobile over to desktop super easy. I also love the [Android](https://play.google.com/store/apps/details?id=au.com.shiftyjelly.pocketcasts) and [iOS](https://itunes.apple.com/au/app/pocket-casts/id414834813) app designs. I am not affiliated with Pocket Casts at time of writing this blog. This list is in no particular order (yet).\n\n> Like everything I try to always include the community, so if you have a podcast you want to share please throw me a [pull request](https://github.com/AJONPLLC/ajonp-content/tree/master/blog/frontend-web-development-podcasts.md)!\n\nFront End Happy Hour[](https://codingcat.dev/blog/front-end-web-development-podcasts#front-end-happy-hour)\n----------------------------------------------------------------------------------------------------------\n\n<figure class=\"wp-block-image\">![Logo](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/frontend_podcast_images/frontendhappyhour.png)</figure>- [PocketCasts Link](https://pca.st/QwjO)\n- [Link](http://frontendhappyhour.com/)\n- [Twitter](https://twitter.com/FrontEndHH)\n\n### Pocket Casts Description[](https://codingcat.dev/blog/front-end-web-development-podcasts#pocket-casts-description)\n\nA podcast featuring panelists of engineers from [@Netflix](https://twitter.com/@Netflix), [@Evernote](https://twitter.com/@Evernote), [@Atlassian](https://twitter.com/@Atlassian) &amp; [@LinkedIn](https://twitter.com/@LinkedIn) talking over drinks about all things Front End development.\n\n### Alex’s Thoughts[](https://codingcat.dev/blog/front-end-web-development-podcasts#alexs-thoughts)\n\nFront End Happy Hour has become my weekly cast. I enjoy how light the conversation remains, while the technical material is amazingly relevant. Of course it is easy to this when you have some of the top experts in some of the biggest Tech companies as guests ????. Syntax – Tasty Web[](https://codingcat.dev/blog/front-end-web-development-podcasts#syntax---tasty-web)\n------------------------------------------------------------------------------------------------------\n\n<figure class=\"wp-block-image\">![Logo](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/frontend_podcast_images/syntaxfm.png)</figure>- [PocketCasts Link](https://pca.st/fmx9)\n- [Link](https://syntax.fm/)\n- [Twitter](https://twitter.com/syntaxfm)\n\n### Pocket Casts Description[](https://codingcat.dev/blog/front-end-web-development-podcasts#pocket-casts-description)\n\nFull Stack Developers Wes Bos and Scott Tolinski dive deep into web development topics, explaining how they work and talking about their own experiences. They cover from JavaScript frameworks like React, to the latest advancements in CSS to simplifying web tooling. ### Alex’s Thoughts[](https://codingcat.dev/blog/front-end-web-development-podcasts#alexs-thoughts)\n\nSyntax is hosted by [Wes Bos](https://twitter.com/@wesbos) and [Scott Tolinski](https://twitter.com/@stolinski). Both are gifted teachers and have great tutorial based websites [wesbos.com](https://wesbos.com/) and [leveluptutorials.com](https://www.leveluptutorials.com/) respectively. I usually catch up on these while ????. JS Party[](https://codingcat.dev/blog/front-end-web-development-podcasts#js-party)\n----------------------------------------------------------------------------------\n\n<figure class=\"wp-block-image\">![Logo](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/frontend_podcast_images/jsparty.png)</figure>- [PocketCasts Link](https://pca.st/ijqf)\n- [Link](https://changelog.com/jsparty)\n- [Twitter](https://twitter.com/JSPartyFM)\n\n### Pocket Casts Description[](https://codingcat.dev/blog/front-end-web-development-podcasts#pocket-casts-description)\n\nA community celebration of JavaScript and the web. This show records LIVE on Thursdays at 1pm US/Eastern time. Panelists include [Suz Hinton](https://twitter.com/noopkat), [Feross Aboukhadijeh](https://twitter.com/feross), [Kevin Ball](https://twitter.com/kbal11), [Emma Wedekind](https://twitter.com/@EmmaWedekind), [Jerod Santo](https://twitter.com/jerodsanto), [Nick Nisi](https://twitter.com/nicknisi), [Divya Sasidharan](https://twitter.com/shortdiv), [Mikeal Rogers](https://twitter.com/mikeal), and [Chris Hiller](https://twitter.com/b0neskull). Topics discussed include the web platform (Chrome, Safari, Edge, Firefox, Brave, etc), front-end frameworks (React, Ember, Angular, Vue, etc), Node.js, web animation, SVG, robotics, IoT, and much more. If JavaScript and/or the web touch your life, this show’s for you. Some people search for JSParty and can’t find the show, so now the string JSParty is in our description too. ### Alex’s Thoughts[](https://codingcat.dev/blog/front-end-web-development-podcasts#alexs-thoughts)\n\nThis really is a party, not in the sense everyone is filling up balloons all the time. It is more of the kind of party where all the Stranger Things get around a table and nerd out for a while! I really enjoy how empowering the episodes make you feel after listening. Ladybug Podcast[](https://codingcat.dev/blog/front-end-web-development-podcasts#ladybug-podcast)\n------------------------------------------------------------------------------------------------\n\n<figure class=\"wp-block-image\">![Logo](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/frontend_podcast_images/ladybug.png)</figure>- [PocketCasts Link](https://pca.st/ZD17)\n- [Link](https://ladybug.dev/)\n- [Twitter](https://twitter.com/LadybugPodcast)\n\n### Pocket Casts Description[](https://codingcat.dev/blog/front-end-web-development-podcasts#pocket-casts-description)\n\nWe’re [Emma Wedekind](https://twitter.com/@EmmaWedekind), [Kelly Vaughn](https://twitter.com/@kvlly), [Lindsey Kopacz](https://twitter.com/@LittleKope), and [Ali Spittel](https://twitter.com/@ASpittel) – four seasoned software developers working in different sectors. Since there’s a major lack of technical podcasts out there, we’ve decided to start one. Just kidding — there’s already a ton! But, we wanted to add our voices to the space and share our diverse experiences and advice. We’ll have great discussions around how to start coding, the hot technologies right now, how to get your first developer job, and more! ### Alex’s Thoughts[](https://codingcat.dev/blog/front-end-web-development-podcasts#alexs-thoughts)\n\nThey hosts are absolute rock stars in the [\\#webdev](https://twitter.com/search?q=webdev) community! They are 9 episodes into the start of this podcast series, I can’t wait to listen to more. Developer Tea[](https://codingcat.dev/blog/front-end-web-development-podcasts#developer-tea)\n--------------------------------------------------------------------------------------------\n\n<figure class=\"wp-block-image\">![Logo](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/frontend_podcast_images/developertea.png)</figure>- [PocketCasts Link](https://pca.st/devtea)\n- [Link](https://spec.fm/podcasts/developer-tea)\n- [Twitter](https://twitter.com/@developertea)\n\n### Pocket Casts Description[](https://codingcat.dev/blog/front-end-web-development-podcasts#pocket-casts-description)\n\nDeveloper Tea exists to help driven developers connect to their ultimate purpose and excel at their work so that they can positively impact the people they influence. With over 13 million downloads to date, Developer Tea is a short podcast hosted by [Jonathan Cutrell](https://twitter.com/@jcutrell), co-founder of Spec and developer at [Clearbit](https://twitter.com/@Clearbit). We hope you’ll take the topics from this podcast and continue the conversation, either online or in person with your peers. ### Alex’s Thoughts[](https://codingcat.dev/blog/front-end-web-development-podcasts#alexs-thoughts)\n\nJonathan’s voice is so soothing, you won’t be able to stop listening (be careful while driving). This podcast fits great on most commutes as it usually seems to be about 15 minutes or less (a few are longer). This podcast is basically yoga for my ears, it makes me settle down and really appreciate the goals that are constantly rolling around in my mind. As of writing this there are 720 episodes, I don’t know how anyone can make that many so quickly, but they are all really well made and though out. The Web Platform Podcast[](https://codingcat.dev/blog/front-end-web-development-podcasts#the-web-platform-podcast)\n------------------------------------------------------------------------------------------------------------------\n\n<figure class=\"wp-block-image\">![Logo](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/frontend_podcast_images/webplatform.png)</figure>- [PocketCasts Link](https://pca.st/QeXX)\n- [Link](https://thewebplatformpodcast.com/)\n- [Twitter](https://twitter.com/TheWebPlatform)\n\n### Pocket Casts Description[](https://codingcat.dev/blog/front-end-web-development-podcasts#pocket-casts-description)\n\nThe Web Platform Podcast was founded in 2014 by HTML W3C Invited Expert [Erik Isaksen](https://twitter.com/@eisaksen) who started the podcast with the mission “To learn more from the community at large and meet more of the people building the things that make the web what it is and what it could be.” ### Alex’s Thoughts[](https://codingcat.dev/blog/front-end-web-development-podcasts#alexs-thoughts)\n\nThe Web Platform Podcast is one of my favorites, it was my weekly listen. They are releasing a little less regularly now, but still great guests and content. Angular Air[](https://codingcat.dev/blog/front-end-web-development-podcasts#angular-air)\n----------------------------------------------------------------------------------------\n\n<figure class=\"wp-block-image\">![Logo](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/frontend_podcast_images/angularair.png)</figure>- [PocketCasts Link](https://pca.st/09GX)\n- [Link](https://angularair.podbean.com/)\n- [Twitter](https://twitter.com/AngularAir)\n\n### Pocket Casts Description[](https://codingcat.dev/blog/front-end-web-development-podcasts#pocket-casts-description)\n\nAngularAir is a video podcast about the Google Angular platform hosted by Justin Schwartzenberger. ### Alex’s Thoughts[](https://codingcat.dev/blog/front-end-web-development-podcasts#alexs-thoughts)\n\nAngular Air has a weird way of publishing their podcasts. So I will usually catch theirs on [YouTube](https://www.youtube.com/channel/UCdCOpvRk1lsBk26ePGDPLpQ), as it tends to be interactive which is awesome! Full Stack Radio[](https://codingcat.dev/blog/front-end-web-development-podcasts#full-stack-radio)\n--------------------------------------------------------------------------------------------------\n\n<figure class=\"wp-block-image\">![Logo](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/frontend_podcast_images/fullstackradio.png)</figure>- [PocketCasts Link](https://pca.st/fullstack)\n- [Link](http://www.fullstackradio.com/)\n- [Twitter](https://twitter.com/fullstackradio)\n\n### Pocket Casts Description[](https://codingcat.dev/blog/front-end-web-development-podcasts#pocket-casts-description)\n\nA podcast for developers interested in building great software products. Every episode, Adam Wathan is joined by a guest to talk about everything from product design and user experience to unit testing and system administration. ### Alex’s Thoughts[](https://codingcat.dev/blog/front-end-web-development-podcasts#alexs-thoughts)\n\nFull Stack Radio helps remind me as an aspiring front end developer, to remember the backend. I actually stumbled into this one because [Adam Wathan](https://twitter.com/adamwathan) is one of the creators of [tailwindcss](https://tailwindcss.com/) and is a great author. Toolsday[](https://codingcat.dev/blog/front-end-web-development-podcasts#toolsday)\n----------------------------------------------------------------------------------\n\n<figure class=\"wp-block-image\">![Logo](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/frontend_podcast_images/toolsday.png)</figure>- [PocketCasts Link](https://pca.st/LihQ)\n- [Link](https://spec.fm/podcasts/toolsday)\n- [Twitter](https://twitter.com/toolsday)\n\n### Pocket Casts Description[](https://codingcat.dev/blog/front-end-web-development-podcasts#pocket-casts-description)\n\nToolsday is a 20-ish-minute podcast hosted by Una Kravets &amp; Chris Dhanaraj. Toolsday is about the latest in tech tools, tips, and tricks on Tuesdays at 2! (Our alliteration game is so strong). ### Alex’s Thoughts[](https://codingcat.dev/blog/front-end-web-development-podcasts#alexs-thoughts)\n\nToolsday pulls you in at the very beginning with Una playing an awesome new ukulele song! Because of [Una Kravets](https://twitter.com/una) and [Chris Dhanaraj](https://twitter.com/chrisdhanaraj)‘s amazing UI/Frontend experience working at Google and Netflix. Adventures in Angular[](https://codingcat.dev/blog/front-end-web-development-podcasts#adventures-in-angular)\n------------------------------------------------------------------------------------------------------------\n\n<figure class=\"wp-block-image\">![Logo](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/frontend_podcast_images/adventuresinangular.png)</figure>- [PocketCasts Link](https://pca.st/SLpU)\n- [Link](http://www.adventuresinangular.com/)\n- [Twitter](https://twitter.com/angularpodcast)\n\n### Pocket Casts Description[](https://codingcat.dev/blog/front-end-web-development-podcasts#pocket-casts-description)\n\nAdventures in Angular is a weekly podcast about developments in the Angular community, tools, techniques, and ecosystem. ### Alex’s Thoughts[](https://codingcat.dev/blog/front-end-web-development-podcasts#alexs-thoughts)\n\nAdventures in Angular is new for me but after listening to the latest with [Hans Larsen](https://twitter.com/@hanslatwork) and the work on the Angular CLI I am eager to work through the backlog, it is currently episode 252 so it might take me a minute ???? React Podcast[](https://codingcat.dev/blog/front-end-web-development-podcasts#react-podcast)\n--------------------------------------------------------------------------------------------\n\n<figure class=\"wp-block-image\">![Logo](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/frontend_podcast_images/reactpodcast.png)</figure>- [PocketCasts Link](https://pca.st/bWXP)\n- [Link](https://reactpodcast.com/)\n- [Twitter](https://twitter.com/ReactPodcast)\n\n### Pocket Casts Description[](https://codingcat.dev/blog/front-end-web-development-podcasts#pocket-casts-description)\n\nConversations about React with your favorite developers. ### Alex’s Thoughts[](https://codingcat.dev/blog/front-end-web-development-podcasts#alexs-thoughts)\n\nReact Podcast is hosted by [Michael Chan](https://twitter.com/@chantastic), in full honesty I haven’t listened to a cast yet, but this came up as a suggestion since I am new to the ReactJS community. So it is now in my queue ????to learn a lot! ShopTalk[](https://codingcat.dev/blog/front-end-web-development-podcasts#shoptalk)\n----------------------------------------------------------------------------------\n\n<figure class=\"wp-block-image\">![Logo](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/frontend_podcast_images/shoptalkshow.png)</figure>- [PocketCasts Link](https://pca.st/P08F)\n- [Link](https://shoptalkshow.com/)\n- [Twitter](https://twitter.com/shoptalkshow)\n\n### Pocket Casts Description[](https://codingcat.dev/blog/front-end-web-development-podcasts#pocket-casts-description)\n\nA live podcast about front end web design and UX. ### Alex’s Thoughts[](https://codingcat.dev/blog/front-end-web-development-podcasts#alexs-thoughts)\n\nI found Shop Talk Show very recently and have been really enjoying it. [Dave Rupert](https://twitter.com/davatron5000) is a fun guy to listen to and his [site](https://daverupert.com/) is super awesome! If you don’t know the name [Chris Coyier](https://twitter.com/chriscoyier), I am sure you have seen a thing he Co-founded called [CodePen](https://codepen.io/). So lets just say they are really smart guys, that have on really smart Google Cloud Platform Podcast[](https://codingcat.dev/blog/front-end-web-development-podcasts#google-cloud-platform-podcast)\n----------------------------------------------------------------------------------------------------------------------------\n\n<figure class=\"wp-block-image\">![Logo](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/frontend_podcast_images/gcloud.png)</figure>- [PocketCasts Link](https://pca.st/rThD)\n- [Link](https://www.gcppodcast.com/)\n- [Twitter](https://twitter.com/)\n\n### Pocket Casts Description[](https://codingcat.dev/blog/front-end-web-development-podcasts#pocket-casts-description)\n\nThe Google Cloud Platform Podcast, coming to you every week. Discussing everything on Google Cloud Platform from App Engine to Big Query. ### Alex’s Thoughts[](https://codingcat.dev/blog/front-end-web-development-podcasts#alexs-thoughts)\n\nI am a huge Google Cloud fan so I try to catch up on all of these episodes. I will admit if there is something (like networking) I will often skip, until it is an episode geared more towards development. Y Combinator[](https://codingcat.dev/blog/front-end-web-development-podcasts#y-combinator)\n------------------------------------------------------------------------------------------\n\n<figure class=\"wp-block-image\">![Logo](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/frontend_podcast_images/ycombinator.png)</figure>- [PocketCasts Link](https://pca.st/3Gld)\n- [Link](https://www.ycombinator.com/)\n- [Twitter](https://twitter.com/ycombinator)\n\n### Pocket Casts Description[](https://codingcat.dev/blog/front-end-web-development-podcasts#pocket-casts-description)\n\nWe talk with people who are shaping the future. A show about technology in business, research, and art. ### Alex’s Thoughts[](https://codingcat.dev/blog/front-end-web-development-podcasts#alexs-thoughts)\n\nY Combinator always keeps me up on what is happening next with technology in business. Yes I do have a day job and I need to stay in touch with the heartbeat of our economy! How I Built This with Guy Raz[](https://codingcat.dev/blog/front-end-web-development-podcasts#how-i-built-this-with-guy-raz)\n----------------------------------------------------------------------------------------------------------------------------\n\n<figure class=\"wp-block-image\">![Logo](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/frontend_podcast_images/howibuiltthis.png)</figure>- [PocketCasts Link](https://pca.st/howibuiltthis)\n- [Link](https://www.npr.org/podcasts/510313/how-i-built-this)\n- [Twitter](https://twitter.com/howibuiltthis)\n\n### Pocket Casts Description[](https://codingcat.dev/blog/front-end-web-development-podcasts#pocket-casts-description)\n\nGuy Raz dives into the stories behind some of the world’s best known companies. How I Built This weaves a narrative journey about innovators, entrepreneurs and idealists—and the movements they built. ### Alex’s Thoughts[](https://codingcat.dev/blog/front-end-web-development-podcasts#alexs-thoughts)\n\nThis is probably more for wanting to keep AJonP going ????, keeping anything as a side hustle takes work, so it helps to hear others story! Ten Thousand Feet, the OST Podcast[](https://codingcat.dev/blog/front-end-web-development-podcasts#ten-thousand-feet-the-ost-podcast)\n-------------------------------------------------------------------------------------------------------------------------------------\n\n<figure class=\"wp-block-image\">![Logo](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/frontend_podcast_images/tenthousandfeetost.png)</figure>- [PocketCasts Link](https://pca.st/1X91ut)\n- [Link](https://www.ostusa.com/podcast/)\n- [Twitter](https://twitter.com/OSTgr)\n\n### Pocket Casts Description[](https://codingcat.dev/blog/front-end-web-development-podcasts#pocket-casts-description)\n\nAll areas of an organization, even those still in the analog world, are being transformed by technology. This shift isn’t just modernizing manual processes with digital tools, but changing the fabric of an organization to support a new way of thinking. So while it may be a buzzword, digital transformation is happening and we’re here to unpack it with you. Between big ideas and tiny details is the ten thousand foot view. Join the technology consultants from OST as we discuss the changing landscape of technology and what we’re learning along the way. OST is a technology consultancy, specializing in all things digital. With offices in Minneapolis, Grand Rapids and Detroit, we have spent the last 22 years working with companies to grow, innovate and better serve their customers using technology. ### Alex’s Thoughts[](https://codingcat.dev/blog/front-end-web-development-podcasts#alexs-thoughts)\n\nI might be a little biased on this one as I just started working here. However, the content is amazing! If you only listen to one checkout [Ep. 5 – Experience Design Week Recap](https://pca.st/sZs42J), I guarantee you will love the leprechaun tale, and how it fits into design and the digital world. ",
    "iso8601Date": "2019-08-18T12:44:54-04:00",
    "basename": "front-end-web-development-podcasts"
  },
  "gatsby-cloud-with-sanity-cms": {
    "title": "Gatsby Cloud with Sanity CMS",
    "date": "2019-11-14T17:24:06+00:00",
    "status": "publish",
    "permalink": "/gatsby-cloud-with-sanity-cms",
    "author": "Alex Patterson",
    "excerpt": "Start building your static site with Gatsby cloud and get live previews when you utilize Sanity as your CMS!",
    "type": "post",
    "id": 804,
    "thumbnail": "/v1600709556/ccd-cloudinary/fb5da72132a3d8a303cf3f9991535363318746a1-1920x1080-1_805e76ba/fb5da72132a3d8a303cf3f9991535363318746a1-1920x1080-1-150x150.png",
    "category": [
      "Content Management System",
      "Web"
    ],
    "tag": [
      "gatsby",
      "sanity.io"
    ],
    "post_format": [
      "Video"
    ],
    "preview": "<https://youtu.be/zaKZeusS2u8>\n\nAs a developer have you ever wanted …",
    "content": "\n<https://youtu.be/zaKZeusS2u8>\n\nAs a developer have you ever wanted to use a website builder like Squarespace, Wix or IM Creator because of their live previews? Then you realize I cannot add all the wonderful features of a ReactJS based environment! Gatsby Cloud just solved this for you!Useful Links:  \n<https://www.gatsbyjs.com/docs/sanity/getting-started/><https://www.gatsbyjs.com/docs/sanity/adding-extension/>\n\nGatsby[](https://codingcat.dev/blog/gatsby-cloud-with-sanity-cms#gatsby)\n------------------------------------------------------------------------\n\n<https://www.gatsbyjs.com/>Gatsby is an open source, modern website framework that builds performance into every site by leveraging the latest web technologies such as React and GraphQL. Create blazing fast apps and websites without needing to become a performance expert.\n\nGatsby Cloud[](https://codingcat.dev/blog/gatsby-cloud-with-sanity-cms#gatsby-cloud)\n------------------------------------------------------------------------------------\n\n<figure class=\"wp-block-image\">![Gatsby Cloud](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/gatsby-cloud-with-sanity/screencapture-gatsbyjs-2019-11-15-16_45_57_1.png)</figure>### Real-time Preview[](https://codingcat.dev/blog/gatsby-cloud-with-sanity-cms#real-time-preview)\n\n#### Content collaboration just got easier[](https://codingcat.dev/blog/gatsby-cloud-with-sanity-cms#content-collaboration-just-got-easier)\n\nPreview is like a private playground for developers, designers, and content creators. It provides a shareable temporary URL for viewing changes immediately and in context—so you can make sure that new header plays nicely with the rest of the page before hitting “publish.”\n\n- Instant updates triggered by your CMS or webhooks\n- Shareable Preview URL for easy collaboration\n- Popular CMS integrations with more coming soon\n- Support for many headless CMSs out-of-the-box\n\n### Builds (coming soon)[](https://codingcat.dev/blog/gatsby-cloud-with-sanity-cms#builds-coming-soon)\n\n#### The fastest way to build a Gatsby site[](https://codingcat.dev/blog/gatsby-cloud-with-sanity-cms#the-fastest-way-to-build-a-gatsby-site)\n\nTailored to Gatsby applications, Builds provide all the automation and infrastructure you need for instant continous deployment. On top of that, we include Lighthouse performance checks (coming soon) and Gatsby image processing in the Cloud.\n\n- Fastest build times for Gatsby sites\n- Build every branch automatically\n- Push to deploy with GitHub\n- Show and share previews of deploys (status checks on PRs, shareable URLs, etc)\n- Automated Lighthouse performance checks\n\nSanity[](https://codingcat.dev/blog/gatsby-cloud-with-sanity-cms#sanity)\n------------------------------------------------------------------------\n\n<https://www.sanity.io/>Sanity is the fastest, most flexible platform for delivering content to digital devices and products.\n\n<figure class=\"wp-block-image\">![Sanity](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/gatsby-cloud-with-sanity/screencapture-sanity-io-2019-11-15-16_51_14_1.png)</figure>### Move faster[](https://codingcat.dev/blog/gatsby-cloud-with-sanity-cms#move-faster)\n\nSketch with data. Start content work before even selecting a presentation framework. Move right to production.\n\n### A single source of truth[](https://codingcat.dev/blog/gatsby-cloud-with-sanity-cms#a-single-source-of-truth)\n\nAdvanced data modeling and custom user interfaces let you decouple content from presentation.\n\n### Treat content as data[](https://codingcat.dev/blog/gatsby-cloud-with-sanity-cms#treat-content-as-data)\n\nSanity treats your all content as data – even rich text – so you can transform and reuse it across channels.",
    "iso8601Date": "2019-11-14T12:24:06-05:00",
    "basename": "gatsby-cloud-with-sanity-cms"
  },
  "increasing-productivity-with-notion": {
    "title": "Increasing Productivity with Notion",
    "date": "2019-10-28T17:11:42+00:00",
    "status": "publish",
    "permalink": "/increasing-productivity-with-notion",
    "author": "Alex Patterson",
    "excerpt": "Have you ever wanted to take a minute and fix all the disparate lists that you have in so many places, and really start to focus on what is important? Notion is helping me solve this and I want to tell you how!",
    "type": "post",
    "id": 781,
    "thumbnail": "/v1600706370/ccd-cloudinary/3fe0647160d8eafb9d6075a91389b87dde1daa68-1920x1080-1/3fe0647160d8eafb9d6075a91389b87dde1daa68-1920x1080-1-150x150.png",
    "category": [
      "Uncategorized"
    ],
    "tag": [
      "notion",
      "productivity"
    ],
    "post_format": [],
    "preview": "Productivity Weekend\n====================\n\nWhile my wife was off to …",
    "content": "\nProductivity Weekend\n====================\n\nWhile my wife was off to a Yoga retreat, my parents offered to take my son camping with a Halloween type of theme. So I thought \"Wow I have a full day of uninterrupted focus!\". I had lofty plans of finishing all the slides for our new [JAMStack Meetup](https://link.ajonp.com/jamstackgr), but then I started to realize that I wanted to instead jump back and focus on a couple of productivity things that I have been wishing I could handle instead.\n\nNotion.so[](https://codingcat.dev/blog/increasing-productivity-with-notion#notionso)\n------------------------------------------------------------------------------------\n\nI searched high and low (okay a couple Google searches) for things that would replace AJonP’s Trello Board, Google Keep, and OneNote. What I landed on was [notion.so](https://notion.so/) it provides me with a simple consolidated place that allows me to track the progress of all the videos I have in progress.\n\n### Table View[](https://codingcat.dev/blog/increasing-productivity-with-notion#table-view)\n\nNotion has a great table view that allows you to quickly add any information just like in a Google Sheet.\n\n<figure class=\"wp-block-image\">![Notion Table View](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/productivity_wknd/Screen_Shot_2019-11-04_at_8.37.09_AM.png)</figure>### Calendar View[](https://codingcat.dev/blog/increasing-productivity-with-notion#calendar-view)\n\nI can then get better about sense of release dates and hard deadlines that I can push myself towards in the calendar view. Here is an example of the videos that I am working towards.\n\n<figure class=\"wp-block-image\">![Notion Calendar View](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/productivity_wknd/Screen_Shot_2019-11-04_at_8.38.57_AM.png)</figure>### Roadmap[](https://codingcat.dev/blog/increasing-productivity-with-notion#roadmap)\n\nThe roadmap allows me to share out with AJ’s Purr-fect Peeps that stats on changes that are happening on the site, something that I have not been able to provide in a public fashion up until now, so I really love this aspect. It allows a Trello like view into all the happenings for AJonP. Checkout [AJ’s Roadmap](https://link.ajonp.com/roadmap)!\n\n<figure class=\"wp-block-image\">![Notion Roadmap](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/productivity_wknd/Screen_Shot_2019-11-04_at_8.39.17_AM.png)</figure>### Web Clipper[](https://codingcat.dev/blog/increasing-productivity-with-notion#web-clipper)\n\nOne of my favorite features by far is the [Notion Web Clipper](https://chrome.google.com/webstore/detail/notion-web-clipper/knheggckgoiihginacbkhaalnibhilkk?hl=en) which you can direct to any page type within your entire Notion system. So let’s say that I am out on [Tyler McGinnis’s React Course](https://link.ajonp.com/tylermcginnis-react) and I want to keep track of it. All I have to do is be on the page and click the Notion Web Clipper, then load it directly into my Notion Reading List. After I can always see what I have not categorized and setup many views to keep track.\n\n<figure class=\"wp-block-image\">![Notion Web Clipper](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/productivity_wknd/Screen_Shot_2019-11-04_at_8.46.27_AM.png)</figure>### Markdown Export[](https://codingcat.dev/blog/increasing-productivity-with-notion#markdown-export)\n\nThe really big selling point for me is that Notion exports to markdown. Since it is available on every device that I own: MacOS, Windows, iOS, and Android and works offline. It was pretty simple for me to choose! Now I can keep track of any notes export to .md and off it goes to my Gatsby Blog ????\n\n### Notion Post[](https://codingcat.dev/blog/increasing-productivity-with-notion#notion-post)\n\n<figure class=\"wp-block-image\">![Notion Post](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/productivity_wknd/Screen_Shot_2019-11-04_at_8.48.03_AM.png)</figure>### Export to Markdown[](https://codingcat.dev/blog/increasing-productivity-with-notion#export-to-markdown)\n\n<figure class=\"wp-block-image\">![Export to Markdown .md](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/productivity_wknd/Screen_Shot_2019-11-04_at_8.48.16_AM.png)</figure>### Take Markdown (.md) Anywhere  \n[](https://codingcat.dev/blog/increasing-productivity-with-notion#take-markdown-md-anywhere)\n\n<figure class=\"wp-block-image\">![Markdown Export Files](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/productivity_wknd/Screen_Shot_2019-11-04_at_8.49.26_AM.png)</figure>### Looking for a job?[](https://codingcat.dev/blog/increasing-productivity-with-notion#looking-for-a-job)\n\n[Notion is hiring so why not go work for a cool compnay?](https://www.notion.so/Work-at-Notion-e7aeb157238a4603a2964b28c646f07f)",
    "iso8601Date": "2019-10-28T13:11:42-04:00",
    "basename": "increasing-productivity-with-notion"
  },
  "ionic-icons": {
    "title": "Ionic Icons",
    "date": "2019-01-20T14:51:50+00:00",
    "status": "publish",
    "permalink": "/ionic-icons",
    "author": "Alex Patterson",
    "excerpt": "",
    "type": "post",
    "id": 440,
    "thumbnail": "/v1600704494/ccd-cloudinary/ionic_icons_everywhere/ionic_icons_everywhere-150x150.png",
    "category": [
      "Mobile",
      "Web"
    ],
    "tag": [
      "ionic"
    ],
    "post_format": [],
    "preview": "Ever want to just use Ionic Icons? …",
    "content": "\nEver want to just use Ionic Icons?\n==================================\n\nYou can just add the unpkg tag to your head ???????? Demo: [](https://ion-icon.firebaseapp.com/)<https://ion-icon.firebaseapp.com/>\n\nIonic Icon Links\n================\n\nMain Page: [](https://ionicons.com/)<https://ionicons.com/> Git Repo: [](https://github.com/ionic-team/ionicons)<https://github.com/ionic-team/ionicons>\n\n```\n<pre class=\"wp-block-code\">```\n<html>\n  <head>\n    <meta charset=\"UTF-8\" />\n    <script\n      type=\"text/javascript\"\n      src=\"https://unpkg.com/ionicons@latest/dist/ionicons.js\"\n    ></script>\n    <style>\n      .flexcontainer {\n        display: -webkit-flex;\n        display: flex;\n        -webkit-align-items: center;\n        align-items: center;\n        -webkit-justify-content: center;\n        justify-content: center;\n        -webkit-flex-direction: row wrap;\n        flex-direction: column;\n        /* tweak the where items line up on the row */\n        /* valid values are: flex-start, flex-end, space-between, space-around, stretch */\n        -webkit-align-content: space-around;\n        align-content: space-around;\n        flex-shrink: 0;\n      }\n\n      .flex {\n        flex-shrink: 0;\n      }\n    </style>\n  </head>\n\n  <body class=\"flexcontainer\">\n    <span class=\"flex\">\n      <p style=\"float:left\">add</p>\n      <ion-icon name=\"add\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">add-circle</p>\n      <ion-icon name=\"add-circle\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">alarm</p>\n      <ion-icon name=\"alarm\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">albums</p>\n      <ion-icon name=\"albums\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">alert</p>\n      <ion-icon name=\"alert\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">american-football</p>\n      <ion-icon name=\"american-football\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">analytics</p>\n      <ion-icon name=\"analytics\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">aperture</p>\n      <ion-icon name=\"aperture\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">apps</p>\n      <ion-icon name=\"apps\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">appstore</p>\n      <ion-icon name=\"appstore\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">archive</p>\n      <ion-icon name=\"archive\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">arrow-back</p>\n      <ion-icon name=\"arrow-back\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">arrow-down</p>\n      <ion-icon name=\"arrow-down\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">arrow-dropdown</p>\n      <ion-icon name=\"arrow-dropdown\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">arrow-dropdown-circle</p>\n      <ion-icon name=\"arrow-dropdown-circle\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">arrow-dropleft</p>\n      <ion-icon name=\"arrow-dropleft\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">arrow-dropleft-circle</p>\n      <ion-icon name=\"arrow-dropleft-circle\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">arrow-dropright</p>\n      <ion-icon name=\"arrow-dropright\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">arrow-dropright-circle</p>\n      <ion-icon name=\"arrow-dropright-circle\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">arrow-dropup</p>\n      <ion-icon name=\"arrow-dropup\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">arrow-dropup-circle</p>\n      <ion-icon name=\"arrow-dropup-circle\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">arrow-forward</p>\n      <ion-icon name=\"arrow-forward\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">arrow-round-back</p>\n      <ion-icon name=\"arrow-round-back\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">arrow-round-down</p>\n      <ion-icon name=\"arrow-round-down\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">arrow-round-forward</p>\n      <ion-icon name=\"arrow-round-forward\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">arrow-round-up</p>\n      <ion-icon name=\"arrow-round-up\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">arrow-up</p>\n      <ion-icon name=\"arrow-up\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">at</p>\n      <ion-icon name=\"at\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">attach</p>\n      <ion-icon name=\"attach\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">backspace</p>\n      <ion-icon name=\"backspace\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">barcode</p>\n      <ion-icon name=\"barcode\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">baseball</p>\n      <ion-icon name=\"baseball\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">basket</p>\n      <ion-icon name=\"basket\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">basketball</p>\n      <ion-icon name=\"basketball\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">battery-charging</p>\n      <ion-icon name=\"battery-charging\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">battery-dead</p>\n      <ion-icon name=\"battery-dead\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">battery-full</p>\n      <ion-icon name=\"battery-full\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">beaker</p>\n      <ion-icon name=\"beaker\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">beer</p>\n      <ion-icon name=\"beer\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">bicycle</p>\n      <ion-icon name=\"bicycle\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">bluetooth</p>\n      <ion-icon name=\"bluetooth\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">boat</p>\n      <ion-icon name=\"boat\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">body</p>\n      <ion-icon name=\"body\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">bonfire</p>\n      <ion-icon name=\"bonfire\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">book</p>\n      <ion-icon name=\"book\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">bookmark</p>\n      <ion-icon name=\"bookmark\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">bookmarks</p>\n      <ion-icon name=\"bookmarks\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">bowtie</p>\n      <ion-icon name=\"bowtie\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">briefcase</p>\n      <ion-icon name=\"briefcase\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">browsers</p>\n      <ion-icon name=\"browsers\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">brush</p>\n      <ion-icon name=\"brush\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">bug</p>\n      <ion-icon name=\"bug\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">build</p>\n      <ion-icon name=\"build\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">bulb</p>\n      <ion-icon name=\"bulb\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">bus</p>\n      <ion-icon name=\"bus\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">cafe</p>\n      <ion-icon name=\"cafe\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">calculator</p>\n      <ion-icon name=\"calculator\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">calendar</p>\n      <ion-icon name=\"calendar\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">call</p>\n      <ion-icon name=\"call\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">camera</p>\n      <ion-icon name=\"camera\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">car</p>\n      <ion-icon name=\"car\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">card</p>\n      <ion-icon name=\"card\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">cart</p>\n      <ion-icon name=\"cart\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">cash</p>\n      <ion-icon name=\"cash\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">chatboxes</p>\n      <ion-icon name=\"chatboxes\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">chatbubbles</p>\n      <ion-icon name=\"chatbubbles\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">checkbox</p>\n      <ion-icon name=\"checkbox\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">checkbox-outline</p>\n      <ion-icon name=\"checkbox-outline\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">checkmark</p>\n      <ion-icon name=\"checkmark\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">checkmark-circle</p>\n      <ion-icon name=\"checkmark-circle\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">checkmark-circle-outline</p>\n      <ion-icon name=\"checkmark-circle-outline\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">clipboard</p>\n      <ion-icon name=\"clipboard\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">clock</p>\n      <ion-icon name=\"clock\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">close</p>\n      <ion-icon name=\"close\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">close-circle</p>\n      <ion-icon name=\"close-circle\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">closed-captioning</p>\n      <ion-icon name=\"closed-captioning\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">cloud</p>\n      <ion-icon name=\"cloud\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">cloud-circle</p>\n      <ion-icon name=\"cloud-circle\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">cloud-done</p>\n      <ion-icon name=\"cloud-done\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">cloud-download</p>\n      <ion-icon name=\"cloud-download\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">cloud-outline</p>\n      <ion-icon name=\"cloud-outline\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">cloud-upload</p>\n      <ion-icon name=\"cloud-upload\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">cloudy</p>\n      <ion-icon name=\"cloudy\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">cloudy-night</p>\n      <ion-icon name=\"cloudy-night\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">code</p>\n      <ion-icon name=\"code\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">code-download</p>\n      <ion-icon name=\"code-download\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">code-working</p>\n      <ion-icon name=\"code-working\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">cog</p>\n      <ion-icon name=\"cog\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">color-fill</p>\n      <ion-icon name=\"color-fill\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">color-filter</p>\n      <ion-icon name=\"color-filter\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">color-palette</p>\n      <ion-icon name=\"color-palette\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">color-wand</p>\n      <ion-icon name=\"color-wand\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">compass</p>\n      <ion-icon name=\"compass\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">construct</p>\n      <ion-icon name=\"construct\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">contact</p>\n      <ion-icon name=\"contact\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">contacts</p>\n      <ion-icon name=\"contacts\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">contract</p>\n      <ion-icon name=\"contract\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">contrast</p>\n      <ion-icon name=\"contrast\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">copy</p>\n      <ion-icon name=\"copy\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">create</p>\n      <ion-icon name=\"create\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">crop</p>\n      <ion-icon name=\"crop\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">cube</p>\n      <ion-icon name=\"cube\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">cut</p>\n      <ion-icon name=\"cut\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">desktop</p>\n      <ion-icon name=\"desktop\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">disc</p>\n      <ion-icon name=\"disc\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">document</p>\n      <ion-icon name=\"document\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">done-all</p>\n      <ion-icon name=\"done-all\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">download</p>\n      <ion-icon name=\"download\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">easel</p>\n      <ion-icon name=\"easel\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">egg</p>\n      <ion-icon name=\"egg\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">exit</p>\n      <ion-icon name=\"exit\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">expand</p>\n      <ion-icon name=\"expand\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">eye</p>\n      <ion-icon name=\"eye\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">eye-off</p>\n      <ion-icon name=\"eye-off\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">fastforward</p>\n      <ion-icon name=\"fastforward\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">female</p>\n      <ion-icon name=\"female\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">filing</p>\n      <ion-icon name=\"filing\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">film</p>\n      <ion-icon name=\"film\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">finger-print</p>\n      <ion-icon name=\"finger-print\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">flag</p>\n      <ion-icon name=\"flag\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">flame</p>\n      <ion-icon name=\"flame\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">flash</p>\n      <ion-icon name=\"flash\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">flask</p>\n      <ion-icon name=\"flask\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">flower</p>\n      <ion-icon name=\"flower\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">folder</p>\n      <ion-icon name=\"folder\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">folder-open</p>\n      <ion-icon name=\"folder-open\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">football</p>\n      <ion-icon name=\"football\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">funnel</p>\n      <ion-icon name=\"funnel\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">game-controller-a</p>\n      <ion-icon name=\"game-controller-a\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">game-controller-b</p>\n      <ion-icon name=\"game-controller-b\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">git-branch</p>\n      <ion-icon name=\"git-branch\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">git-commit</p>\n      <ion-icon name=\"git-commit\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">git-compare</p>\n      <ion-icon name=\"git-compare\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">git-merge</p>\n      <ion-icon name=\"git-merge\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">git-network</p>\n      <ion-icon name=\"git-network\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">git-pull-request</p>\n      <ion-icon name=\"git-pull-request\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">glasses</p>\n      <ion-icon name=\"glasses\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">globe</p>\n      <ion-icon name=\"globe\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">grid</p>\n      <ion-icon name=\"grid\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">hammer</p>\n      <ion-icon name=\"hammer\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">hand</p>\n      <ion-icon name=\"hand\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">happy</p>\n      <ion-icon name=\"happy\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">headset</p>\n      <ion-icon name=\"headset\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">heart</p>\n      <ion-icon name=\"heart\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">heart-outline</p>\n      <ion-icon name=\"heart-outline\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">help</p>\n      <ion-icon name=\"help\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">help-buoy</p>\n      <ion-icon name=\"help-buoy\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">help-circle</p>\n      <ion-icon name=\"help-circle\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">home</p>\n      <ion-icon name=\"home\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">ice-cream</p>\n      <ion-icon name=\"ice-cream\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">image</p>\n      <ion-icon name=\"image\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">images</p>\n      <ion-icon name=\"images\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">infinite</p>\n      <ion-icon name=\"infinite\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">information</p>\n      <ion-icon name=\"information\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">information-circle</p>\n      <ion-icon name=\"information-circle\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">ionic</p>\n      <ion-icon name=\"ionic\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">ionitron</p>\n      <ion-icon name=\"ionitron\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">jet</p>\n      <ion-icon name=\"jet\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">key</p>\n      <ion-icon name=\"key\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">keypad</p>\n      <ion-icon name=\"keypad\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">laptop</p>\n      <ion-icon name=\"laptop\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">leaf</p>\n      <ion-icon name=\"leaf\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">link</p>\n      <ion-icon name=\"link\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">list</p>\n      <ion-icon name=\"list\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">list-box</p>\n      <ion-icon name=\"list-box\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">locate</p>\n      <ion-icon name=\"locate\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">lock</p>\n      <ion-icon name=\"lock\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">log-in</p>\n      <ion-icon name=\"log-in\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">log-out</p>\n      <ion-icon name=\"log-out\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-android</p>\n      <ion-icon name=\"logo-android\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-angular</p>\n      <ion-icon name=\"logo-angular\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-apple</p>\n      <ion-icon name=\"logo-apple\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-bitcoin</p>\n      <ion-icon name=\"logo-bitcoin\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-buffer</p>\n      <ion-icon name=\"logo-buffer\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-chrome</p>\n      <ion-icon name=\"logo-chrome\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-codepen</p>\n      <ion-icon name=\"logo-codepen\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-css3</p>\n      <ion-icon name=\"logo-css3\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-designernews</p>\n      <ion-icon name=\"logo-designernews\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-dribbble</p>\n      <ion-icon name=\"logo-dribbble\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-dropbox</p>\n      <ion-icon name=\"logo-dropbox\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-euro</p>\n      <ion-icon name=\"logo-euro\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-facebook</p>\n      <ion-icon name=\"logo-facebook\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-foursquare</p>\n      <ion-icon name=\"logo-foursquare\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-freebsd-devil</p>\n      <ion-icon name=\"logo-freebsd-devil\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-github</p>\n      <ion-icon name=\"logo-github\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-google</p>\n      <ion-icon name=\"logo-google\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-googleplus</p>\n      <ion-icon name=\"logo-googleplus\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-hackernews</p>\n      <ion-icon name=\"logo-hackernews\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-html5</p>\n      <ion-icon name=\"logo-html5\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-instagram</p>\n      <ion-icon name=\"logo-instagram\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-javascript</p>\n      <ion-icon name=\"logo-javascript\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-linkedin</p>\n      <ion-icon name=\"logo-linkedin\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-markdown</p>\n      <ion-icon name=\"logo-markdown\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-nodejs</p>\n      <ion-icon name=\"logo-nodejs\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-octocat</p>\n      <ion-icon name=\"logo-octocat\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-pinterest</p>\n      <ion-icon name=\"logo-pinterest\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-playstation</p>\n      <ion-icon name=\"logo-playstation\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-python</p>\n      <ion-icon name=\"logo-python\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-reddit</p>\n      <ion-icon name=\"logo-reddit\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-rss</p>\n      <ion-icon name=\"logo-rss\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-sass</p>\n      <ion-icon name=\"logo-sass\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-skype</p>\n      <ion-icon name=\"logo-skype\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-snapchat</p>\n      <ion-icon name=\"logo-snapchat\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-steam</p>\n      <ion-icon name=\"logo-steam\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-tumblr</p>\n      <ion-icon name=\"logo-tumblr\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-twitch</p>\n      <ion-icon name=\"logo-twitch\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-twitter</p>\n      <ion-icon name=\"logo-twitter\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-usd</p>\n      <ion-icon name=\"logo-usd\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-vimeo</p>\n      <ion-icon name=\"logo-vimeo\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-whatsapp</p>\n      <ion-icon name=\"logo-whatsapp\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-windows</p>\n      <ion-icon name=\"logo-windows\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-wordpress</p>\n      <ion-icon name=\"logo-wordpress\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-xbox</p>\n      <ion-icon name=\"logo-xbox\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-yahoo</p>\n      <ion-icon name=\"logo-yahoo\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-yen</p>\n      <ion-icon name=\"logo-yen\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">logo-youtube</p>\n      <ion-icon name=\"logo-youtube\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">magnet</p>\n      <ion-icon name=\"magnet\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">mail</p>\n      <ion-icon name=\"mail\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">mail-open</p>\n      <ion-icon name=\"mail-open\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">male</p>\n      <ion-icon name=\"male\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">man</p>\n      <ion-icon name=\"man\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">map</p>\n      <ion-icon name=\"map\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">medal</p>\n      <ion-icon name=\"medal\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">medical</p>\n      <ion-icon name=\"medical\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">medkit</p>\n      <ion-icon name=\"medkit\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">megaphone</p>\n      <ion-icon name=\"megaphone\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">menu</p>\n      <ion-icon name=\"menu\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">mic</p>\n      <ion-icon name=\"mic\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">mic-off</p>\n      <ion-icon name=\"mic-off\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">microphone</p>\n      <ion-icon name=\"microphone\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">moon</p>\n      <ion-icon name=\"moon\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">more</p>\n      <ion-icon name=\"more\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">move</p>\n      <ion-icon name=\"move\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">musical-note</p>\n      <ion-icon name=\"musical-note\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">musical-notes</p>\n      <ion-icon name=\"musical-notes\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">navigate</p>\n      <ion-icon name=\"navigate\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">no-smoking</p>\n      <ion-icon name=\"no-smoking\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">notifications</p>\n      <ion-icon name=\"notifications\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">notifications-off</p>\n      <ion-icon name=\"notifications-off\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">notifications-outline</p>\n      <ion-icon name=\"notifications-outline\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">nuclear</p>\n      <ion-icon name=\"nuclear\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">nutrition</p>\n      <ion-icon name=\"nutrition\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">open</p>\n      <ion-icon name=\"open\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">options</p>\n      <ion-icon name=\"options\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">outlet</p>\n      <ion-icon name=\"outlet\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">paper</p>\n      <ion-icon name=\"paper\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">paper-plane</p>\n      <ion-icon name=\"paper-plane\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">partly-sunny</p>\n      <ion-icon name=\"partly-sunny\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">pause</p>\n      <ion-icon name=\"pause\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">paw</p>\n      <ion-icon name=\"paw\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">people</p>\n      <ion-icon name=\"people\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">person</p>\n      <ion-icon name=\"person\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">person-add</p>\n      <ion-icon name=\"person-add\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">phone-landscape</p>\n      <ion-icon name=\"phone-landscape\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">phone-portrait</p>\n      <ion-icon name=\"phone-portrait\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">photos</p>\n      <ion-icon name=\"photos\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">pie</p>\n      <ion-icon name=\"pie\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">pin</p>\n      <ion-icon name=\"pin\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">pint</p>\n      <ion-icon name=\"pint\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">pizza</p>\n      <ion-icon name=\"pizza\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">plane</p>\n      <ion-icon name=\"plane\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">planet</p>\n      <ion-icon name=\"planet\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">play</p>\n      <ion-icon name=\"play\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">podium</p>\n      <ion-icon name=\"podium\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">power</p>\n      <ion-icon name=\"power\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">pricetag</p>\n      <ion-icon name=\"pricetag\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">pricetags</p>\n      <ion-icon name=\"pricetags\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">print</p>\n      <ion-icon name=\"print\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">pulse</p>\n      <ion-icon name=\"pulse\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">qr-scanner</p>\n      <ion-icon name=\"qr-scanner\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">quote</p>\n      <ion-icon name=\"quote\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">radio</p>\n      <ion-icon name=\"radio\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">radio-button-off</p>\n      <ion-icon name=\"radio-button-off\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">radio-button-on</p>\n      <ion-icon name=\"radio-button-on\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">rainy</p>\n      <ion-icon name=\"rainy\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">recording</p>\n      <ion-icon name=\"recording\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">redo</p>\n      <ion-icon name=\"redo\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">refresh</p>\n      <ion-icon name=\"refresh\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">refresh-circle</p>\n      <ion-icon name=\"refresh-circle\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">remove</p>\n      <ion-icon name=\"remove\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">remove-circle</p>\n      <ion-icon name=\"remove-circle\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">reorder</p>\n      <ion-icon name=\"reorder\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">repeat</p>\n      <ion-icon name=\"repeat\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">resize</p>\n      <ion-icon name=\"resize\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">restaurant</p>\n      <ion-icon name=\"restaurant\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">return-left</p>\n      <ion-icon name=\"return-left\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">return-right</p>\n      <ion-icon name=\"return-right\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">reverse-camera</p>\n      <ion-icon name=\"reverse-camera\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">rewind</p>\n      <ion-icon name=\"rewind\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">ribbon</p>\n      <ion-icon name=\"ribbon\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">rose</p>\n      <ion-icon name=\"rose\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">sad</p>\n      <ion-icon name=\"sad\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">school</p>\n      <ion-icon name=\"school\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">search</p>\n      <ion-icon name=\"search\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">send</p>\n      <ion-icon name=\"send\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">settings</p>\n      <ion-icon name=\"settings\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">share</p>\n      <ion-icon name=\"share\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">share-alt</p>\n      <ion-icon name=\"share-alt\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">shirt</p>\n      <ion-icon name=\"shirt\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">shuffle</p>\n      <ion-icon name=\"shuffle\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">skip-backward</p>\n      <ion-icon name=\"skip-backward\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">skip-forward</p>\n      <ion-icon name=\"skip-forward\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">snow</p>\n      <ion-icon name=\"snow\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">speedometer</p>\n      <ion-icon name=\"speedometer\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">square</p>\n      <ion-icon name=\"square\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">square-outline</p>\n      <ion-icon name=\"square-outline\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">star</p>\n      <ion-icon name=\"star\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">star-half</p>\n      <ion-icon name=\"star-half\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">star-outline</p>\n      <ion-icon name=\"star-outline\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">stats</p>\n      <ion-icon name=\"stats\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">stopwatch</p>\n      <ion-icon name=\"stopwatch\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">subway</p>\n      <ion-icon name=\"subway\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">sunny</p>\n      <ion-icon name=\"sunny\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">swap</p>\n      <ion-icon name=\"swap\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">switch</p>\n      <ion-icon name=\"switch\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">sync</p>\n      <ion-icon name=\"sync\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">tablet-landscape</p>\n      <ion-icon name=\"tablet-landscape\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">tablet-portrait</p>\n      <ion-icon name=\"tablet-portrait\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">tennisball</p>\n      <ion-icon name=\"tennisball\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">text</p>\n      <ion-icon name=\"text\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">thermometer</p>\n      <ion-icon name=\"thermometer\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">thumbs-down</p>\n      <ion-icon name=\"thumbs-down\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">thumbs-up</p>\n      <ion-icon name=\"thumbs-up\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">thunderstorm</p>\n      <ion-icon name=\"thunderstorm\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">time</p>\n      <ion-icon name=\"time\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">timer</p>\n      <ion-icon name=\"timer\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">train</p>\n      <ion-icon name=\"train\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">transgender</p>\n      <ion-icon name=\"transgender\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">trash</p>\n      <ion-icon name=\"trash\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">trending-down</p>\n      <ion-icon name=\"trending-down\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">trending-up</p>\n      <ion-icon name=\"trending-up\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">trophy</p>\n      <ion-icon name=\"trophy\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">tux</p>\n      <ion-icon name=\"tux\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">umbrella</p>\n      <ion-icon name=\"umbrella\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">undo</p>\n      <ion-icon name=\"undo\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">unlock</p>\n      <ion-icon name=\"unlock\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">videocam</p>\n      <ion-icon name=\"videocam\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">volume-down</p>\n      <ion-icon name=\"volume-down\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">volume-mute</p>\n      <ion-icon name=\"volume-mute\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">volume-off</p>\n      <ion-icon name=\"volume-off\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">volume-up</p>\n      <ion-icon name=\"volume-up\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">walk</p>\n      <ion-icon name=\"walk\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">warning</p>\n      <ion-icon name=\"warning\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">watch</p>\n      <ion-icon name=\"watch\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">water</p>\n      <ion-icon name=\"water\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">wifi</p>\n      <ion-icon name=\"wifi\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">wine</p>\n      <ion-icon name=\"wine\" size=\"small\"></ion-icon>\n    </span>\n    <span class=\"flex\">\n      <p style=\"float:left\">woman</p>\n      <ion-icon name=\"woman\" size=\"small\"></ion-icon>\n    </span>\n  </body>\n</html>\n\n\n```\n```\n\n[](https://twitter.com/intent/tweet?url=https://codingcat.dev/blog/ionic-icons&via=CodingCatDev&hashtags=CodingCatDevShares&text=Ionic%20Icons%0a)[](https://www.linkedin.com/shareArticle?mini=true&url=https://codingcat.dev/blog/ionic-icons&title=Ionic%20Icons%0a&summary=%27#CodingCatDevShares'&source='codingcat.dev')[](https://www.facebook.com/sharer.php?u=https://codingcat.dev/blog/ionic-icons)[](https://www.reddit.com/submit?url=https://codingcat.dev/blog/ionic-icons&title=Ionic%20Icons%0a)[](https://news.ycombinator.com/submitlink?u=https://codingcat.dev/blog/ionic-icons&t=Ionic%20Icons%0a)\n\n</body></html>",
    "iso8601Date": "2019-01-20T09:51:50-05:00",
    "basename": "ionic-icons"
  },
  "jamstackgr-1-sanity-io-as-a-backend": {
    "title": "JAMStackGR #1-Sanity.io as a Backend",
    "date": "2019-10-25T17:05:45+00:00",
    "status": "publish",
    "permalink": "/jamstackgr-1-sanity-io-as-a-backend",
    "author": "Alex Patterson",
    "excerpt": "Talking through Sanity.io as a backend to multiple Static Site Generators. A slightly deeper dive into Gatsbyjs.",
    "type": "post",
    "id": 777,
    "thumbnail": "/v1600706372/ccd-cloudinary/cf41c647105a3490db82c9929b18a1679241d4a0-1920x1080-1/cf41c647105a3490db82c9929b18a1679241d4a0-1920x1080-1-150x150.png",
    "category": [
      "Content Management System",
      "Web"
    ],
    "tag": [
      "gatsby",
      "sanity.io"
    ],
    "post_format": [
      "Video"
    ],
    "preview": "<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video …",
    "content": "\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\"><iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/DrUabMWNYCw?feature=oembed\" title=\"JAMStackGR-1-Adding Sanity.io backend in your JAMStack\" width=\"640\"></iframe></div></figure>JAMStack GR #1\n==============\n\n﻿Slides[](https://codingcat.dev/blog/jamstackgr-1-sanity-io-as-a-backend#slides)\n--------------------------------------------------------------------------------\n\n<https://docs.google.com/presentation/d/1GsitEUyrC0xV4xlpFuRB9QKI5B4hdB5tZ5ldZEbuciU/edit?usp=sharing>\n\nDetails[](https://codingcat.dev/blog/jamstackgr-1-sanity-io-as-a-backend#details)\n---------------------------------------------------------------------------------\n\nHave you ever used WordPress or Contentful? There is a new Headless CMS that might replace them.\n\nDistribute a single source of truth to any (all) channel, device or product.\n\nSweet Query APIs  \nPrepare data in queries using joins and projections. CDN cache multiple queries in a single request. GraphQL in beta.\n\nPowerful patching  \nPowerful APIs for patching, exporting, and listening. No locking with real-time syncing.\n\nSecure &amp; Compliant  \nFully GDPR Compliant. EU Hosted.  \nData encrypted at rest and in transit. APIs TLS / SSL only.\n\nApps, not ops  \nSanity is a full-featured content API and editing solution that lets you concentrate on your core business.\n\nEnterprise comforts  \nThird party login, free-form security rules, transactional writes and millions of documents.\n\nScale ready  \nStop worrying about traffic spikes with asset and API CDNs on every continent – excepting Antarctica.\n\nApps, not ops!  \nSanity is a full-featured content API and editing solution that lets you concentrate on your core business.\n\nScale ready.  \nStop worrying about traffic spikes with asset and API CDNs on every continent – excepting Antarctica.\n\nFlexible and fast  \nStructured content flows easily across APIs and services, enabling rapid innovation.\n\nDistribute freely  \nDeep queries with joins on unstructured data. Select and reproject properties. Combine queries into a single cached result on a global CDN.\n\nAdapt continuously  \nCustomize editing environments to fit workflows and quickly iterate on data models.\n\nShip fast  \nSanity is a modern, API-first digital content management system that lets developers work fast using technologies they love\n\nCustomize  \nSanity is a headless CMS construction kit that you can adapt to create optimal editing experiences.\n\nLiberate legacy systems  \nImport content in real-time from multiple sources and instantly query across them.\n\nCreate custom editing workflows and experiences  \nIcon for Customize in React.js  \nCustomize in React.js  \nOpen Source JavaScript editor. Full source code, permissive license.\n\nInstant UIs for complex data  \nModel your content exactly the way you want with an extensive toolkit.\n\nReal-time Collaboration  \nEdit structured, highly connected documents collaboratively.\n\nCool Links﻿[](https://codingcat.dev/blog/jamstackgr-1-sanity-io-as-a-backend#cool-links)\n----------------------------------------------------------------------------------------\n\n<https://medium.com/@kimbjrkman/how-to-use-inline-images-in-rich-text-with-sanity-io-c42594baa509https://jamstackthemes.dev>",
    "iso8601Date": "2019-10-25T13:05:45-04:00",
    "basename": "jamstackgr-1-sanity-io-as-a-backend"
  },
  "jamstackgr-2-git-your-build-system-right-vs-deploying-fast": {
    "title": "JAMStackGR #2-Git Your Build System Right vs. Deploying Fast",
    "date": "2019-11-12T17:22:12+00:00",
    "status": "publish",
    "permalink": "/jamstackgr-2-git-your-build-system-right-vs-deploying-fast",
    "author": "Alex Patterson",
    "excerpt": "Demonstrating how to quickly deploy using Angular CLI to 6 places. Then how to setup CI/CD in Azure, AWS, and Google Cloud Platform.",
    "type": "post",
    "id": 801,
    "thumbnail": "/v1600706365/ccd-cloudinary/f5db56cff0bf5e5eab058acbf116aa60fa1fd41e-1920x1080-1/f5db56cff0bf5e5eab058acbf116aa60fa1fd41e-1920x1080-1-150x150.png",
    "category": [
      "DevOps",
      "Web"
    ],
    "tag": [
      "angular",
      "git"
    ],
    "post_format": [
      "Video"
    ],
    "preview": "<iframe allow=\"accelerometer; autoplay; clipboard-write; …",
    "content": "\n<iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/vhc0ws2cweA?feature=oembed\" title=\"JAMStackGR-2-Git Your Build System Right vs. Deploying Fast\" width=\"640\"></iframe>\n\nJAMStack GR #2\n--------------\n\nThis JAMStack was made from a lesson already posted, during the JAMStack GR Meeting we walked through how to attempt distribution using the Angular CLI (live demos are hard we had a couple of hiccups).  \n<https://ajonp.com/lessons/angular-cli-deploying>",
    "iso8601Date": "2019-11-12T12:22:12-05:00",
    "basename": "jamstackgr-2-git-your-build-system-right-vs-deploying-fast"
  },
  "jamstackgr-3-getting-started-with-serverless": {
    "title": "JAMStackGR #3-Getting Started with Serverless",
    "date": "2019-12-10T17:59:41+00:00",
    "status": "publish",
    "permalink": "/jamstackgr-3-getting-started-with-serverless",
    "author": "Alex Patterson",
    "excerpt": "We will build a small CRUD application using Firebase Functions. We will talk about the benefits of going serverless and why you might want to start using it for your next project. There will be heavy focus on the function building process vs the interface to use it. Please bring a computer to follow along and questions.",
    "type": "post",
    "id": 821,
    "thumbnail": "/v1600711228/ccd-cloudinary/06a9f40d2dabd40b922e3192c2ba1fdb4e18b31f-1920x1080-1_82260715/06a9f40d2dabd40b922e3192c2ba1fdb4e18b31f-1920x1080-1-150x150.png",
    "category": [
      "Uncategorized"
    ],
    "tag": [],
    "post_format": [
      "Video"
    ],
    "preview": "<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video …",
    "content": "\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\"><iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/11w6Lm-Nkrk?feature=oembed\" title=\"JAMStack #3 - Getting started with Serverless using Firebase Functions\" width=\"640\"></iframe></div></figure>JAMStack GR #3\n==============\n\n> ﻿Full Livestream, Video was missing when Keheira was coding. The video above has been edited down to my recap of Keheira’s full demo.\n\n> <https://youtu.be/ziDrjlvWtKE>\n\nFirebase Functions Serverless CRUD[](https://codingcat.dev/blog/jamstackgr-3-getting-started-with-serverless#firebase-functions-serverless-crud)\n------------------------------------------------------------------------------------------------------------------------------------------------\n\nIn the below example there are 4 Firebase Functions that will be created.functions/index.js\n\n```\n<pre class=\"wp-block-code\">```\nconst functions = require('firebase-functions')\nconst admin = require('firebase-admin')\nadmin.initializeApp()\n\n/*\n    Endpoint: /helloWorld\n*/\nexports.helloWorld = functions.https.onRequest((request, response) => {\n response.send(\"Google Whack\");\n});\n\n/*\n    C - Create\n    when user adds txt we push to the database\n    Endpoint: /addComment?text=\n*/\nexports.addComment = functions.https.onRequest(async(request, response) => {\n    word = request.query.text\n    snap = await admin.database().ref('/Words').push(word)\n    response.send(\"Word Added!\")\n})\n\n/*\n    R - Read\n    kinda useless for this but I'm going to write it anyway\n    Endpoint: /readComments\n*/\nexports.readComments = functions.https.onRequest(async(request, response) => {\n    var items = []\n    //loop thru snapshots>grab children value>push to items\n    admin.database().ref('/Words').on('value', snap => {\n        snap.forEach(child => {\n            items.push(child.val())\n        })\n    })\n    response.send(items)\n})\n\n/*\n    U - Update\n    When user give a word we update it with another word\n    Endpoint: /updateComment?old=&new=\n*/\n//TODO: Fix the foolishness\nexports.updateComment = functions.https.onRequest(async(request, response) => {\n    og_word = request.query.old\n    new_word = request.query.new\n    var key = null\n    //search db for old\n    admin.database().ref('/Words').on('value', snap => {\n        snap.forEach(child => {\n        if(child.val() === og_word) //check to see if the value is equal to the og text\n            key = child.key\n        })\n    })\n    //on successful key\n    if(key !== null){\n        snap = await admin.database().ref('/Words').child(key).set(new_word)\n        response.send(\"Word Updated!\")\n    } else { //word not in the database\n        response.send(\"Word not found.\")\n    }\n})\n\n/*\n    D - Delete\n    Allow user to delete a word\n    Endpoint: /deleteComment?text=\n*/\nexports.deleteComment = functions.https.onRequest(async(request, response) => {\n    word = request.query.text\n    var key = null\n    //loop thru snapshots>compare child value to word>if item exist delete it\n    admin.database().ref('/Words').on('value', snap => {\n        snap.forEach(child => {\n        if(child.val() === word)\n            key = child.key\n        })\n    })\n    if(key !== null){\n        snap = await admin.database().ref('/Words').child(key).remove()\n        response.send(\"Word Deleted!\")\n    } else { //word not in the database\n        response.send(\"Word not found.\")\n    }\n})\n```\n```\n\n<figure class=\"wp-block-image size-large\">![](https://res.cloudinary.com/ajonp/image/upload/v1600711272/codingcat.dev/image_823dd158.png)</figure><figure class=\"wp-block-image\">![Firebase Functions](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/Screen_Shot_2019-12-10_at_10.52.30_PM.png)</figure>  \nFixing Functions Code[](https://codingcat.dev/blog/jamstackgr-3-getting-started-with-serverless#)\n----------------------------------------------------------------------------------------------------\n\nThere are a couple of snags in the above code, so we worked through how to update the readComment function. This is because Firebase Functions require\n\n> The first person to see this message and send a pull request to Keheira wins a free AJ t-shirt <https://github.com/BackpackMedia/ServerlessExample/issues>\n\n```\n<pre class=\"wp-block-code\">```\nexports.readComments = functions.https.onRequest(async(request, response) => {\n    var items = []\n    //loop thru snapshots>grab children value>push to items\n    const snapshot = await admin.database().ref('/Words').once('value');\n    snapshot.forEach(child => {\n        items.push(child.val())\n    })\n    response.send(items)\n})\n```\n```",
    "iso8601Date": "2019-12-10T12:59:41-05:00",
    "basename": "jamstackgr-3-getting-started-with-serverless"
  },
  "jamstackgr-4-scully-an-angular-static-site-generator": {
    "title": "JAMStackGR #4-Scully An Angular Static Site Generator",
    "date": "2020-01-21T18:55:54+00:00",
    "status": "publish",
    "permalink": "/jamstackgr-4-scully-an-angular-static-site-generator",
    "author": "Alex Patterson",
    "excerpt": "Learn how to use Scully with an existing Angular project to create a static site.",
    "type": "post",
    "id": 853,
    "thumbnail": "/v1600714643/ccd-cloudinary/97adf5c7ac8c1492255facde6125109fae029b65-1920x1080-1_85470639/97adf5c7ac8c1492255facde6125109fae029b65-1920x1080-1-150x150.png",
    "category": [
      "Web"
    ],
    "tag": [
      "angular",
      "ssg",
      "ssr"
    ],
    "post_format": [
      "Video"
    ],
    "preview": "<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video …",
    "content": "\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\"><iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/fg_ueOGeWlM?feature=oembed\" title=\"Scully - An Angular Static Site Generator | JAMStackGR\" width=\"640\"></iframe></div></figure>JAMStack GR #4\n--------------\n\n### Nate Lentz Details[](https://codingcat.dev/blog/jamstackgr-4-scully-an-angular-static-site-generator#nate-lentz-details)\n\n<figure class=\"wp-block-embed-twitter wp-block-embed is-type-rich is-provider-twitter\"><div class=\"wp-block-embed__wrapper\">[Tweets by nathanlentz](https://twitter.com/nathanlentz?ref_src=twsrc%5Etfw)<script async=\"\" charset=\"utf-8\" src=\"https://platform.twitter.com/widgets.js\"></script></div></figure>### Nate’s Presentation on GitHub[](https://codingcat.dev/blog/jamstackgr-4-scully-an-angular-static-site-generator#nates-presentation-on-github)\n\n<https://github.com/nathanlentz/scully-talk-jamstackgr>\n\n### Scully[](https://codingcat.dev/blog/jamstackgr-4-scully-an-angular-static-site-generator#scully)\n\n<https://github.com/scullyio/scully/blob/master/README.md>\n\nScully Readme[](https://codingcat.dev/blog/jamstackgr-4-scully-an-angular-static-site-generator#scully-readme)\n--------------------------------------------------------------------------------------------------------------\n\n### Scully[](https://codingcat.dev/blog/jamstackgr-4-scully-an-angular-static-site-generator#scully)\n\nThe best way to build the fastest Angular apps. Scully is a static site generator for Angular projects looking to embrace the JAMStack.\n\n- [Getting Started](https://github.com/scullyio/scully/blob/master/docs/getting-started.md)\n- [Full Documentation](https://github.com/scullyio/scully/blob/master/docs/scully.md)\n- [Live Demo](https://www.youtube.com/watch?v=Sh37rIUL-d4) (*from Dec 16, 2019*)\n- [Contribution Guideline](https://github.com/scullyio/scully/blob/master/CONTRIBUTING.md)\n\n### What is Scully?[](https://codingcat.dev/blog/jamstackgr-4-scully-an-angular-static-site-generator#what-is-scully)\n\nScully pre-renders each page in your app to plain HTML &amp; CSS. To do this, Scully uses machine learning techniques to find all of the routes in your project. Scully then visits each route, rendering the view and saving it to an HTML file.You can then ship all of those HTML files to production. Each view in your app can now be delivered to your users in just a few KBs, as opposed to the hundreds/thousands of KBs require to download your entire Angular app.Your app appears INSTANTLY on any device (including mobile 3G).Once the fully-rendered HTML arrives/appears on the user’s view, your Angular app will then load and bootstrap on top of the existing view. This means that Scully gives you the best of both worlds:\n\n1. The ability to pre-render your entire app to the most base form of HTML &amp; CSS.\n2. The ability to still have a full powered SPA written in Angular.\n\nWhen your app is pre-rendered, users no longer wait until all the JavaScript has downloaded, parsed and executed before they can see and interact with your website. They can immediately begin to see and interact with the page. When your page is IMMEDIATELY available, you will have less abandoned sessions and a much higher conversion rate on your website.This also means that you may not need to ship your backend to production. Because the view is pre-rendered and the data is fetched at build time, all views that can run without the backend in prod CAN run without the backend in prod. The security and cost implications to that fact can be mind blowing when you think about them.For those wanting to know more about this process, please read the [Getting Started](https://github.com/scullyio/scully/blob/master/docs/getting-started.md) guide. For those who want to know more about the theory behind pre-rendering JavaScript SPAs, our friends at [Netlify](https://netlify.com/) wrote a [free book about the JAMStack](https://www.netlify.com/pdf/oreilly-modern-web-development-on-the-jamstack.pdf). Check that out today.\n\n#### GET A HOLD OF US 24/7[](https://codingcat.dev/blog/jamstackgr-4-scully-an-angular-static-site-generator#get-a-hold-of-us-247)\n\nThe Scully core team wants to help you any time you need us. We don’t want you to get stuck without help. To make this possible, you have the following ways to get a hold of our team:\n\n1. The ScullyIO [Gitter channel](https://gitter.im/scullyio/community) is available to the public, and you can chat questions to us in real time, one of the core team (or the community members) will be there to reply to it.\n2. Each Tuesday we have Office Hours at noon MDT. [You can join](https://meet.google.com/_meet/vcm-wekz-hsx) the entire team and ask your questions.\n3. Our DMs are open on [Twitter](https://twitter.com/scullyio). Feel free to reach out to us on Twitter.\n\n### Core Team[](https://codingcat.dev/blog/jamstackgr-4-scully-an-angular-static-site-generator#core-team)\n\nAaron Frost Sander Elias Jorge Cano Andres Villanueva [aaronfrost](https://github.com/aaronfrost)[SanderElias](https://github.com/SanderElias)[jorgeucano](https://github.com/jorgeucano)[villanuevand](https://github.com/villanuevand)\n\n#### Created by[](https://codingcat.dev/blog/jamstackgr-4-scully-an-angular-static-site-generator#created-by)\n\n***HeroDevs. LLC***",
    "iso8601Date": "2020-01-21T13:55:54-05:00",
    "basename": "jamstackgr-4-scully-an-angular-static-site-generator"
  },
  "scully-io-anguler-static-site-generator": {
    "title": "Scully.io &#8211; Anguler Static Site Generator",
    "date": "2019-12-17T18:06:13+00:00",
    "status": "publish",
    "permalink": "/scully-io-anguler-static-site-generator",
    "author": "Alex Patterson",
    "excerpt": "In the Static Site Generator (SSG) space, ReactJs has Gatsby and VueJs has Vuepress/Gridsome. This left for a space to be filled for Angular, introducing Scully the Angular solution for SSG.",
    "type": "post",
    "id": 829,
    "thumbnail": "/v1600711554/ccd-cloudinary/e0de4703c0f5e882fb5dca355405b1740cbfd23c-1920x1080-1_8354a504/e0de4703c0f5e882fb5dca355405b1740cbfd23c-1920x1080-1-150x150.png",
    "category": [
      "Web"
    ],
    "tag": [
      "angular",
      "ssg"
    ],
    "post_format": [],
    "preview": "JAMStack with …",
    "content": "\nJAMStack with SSG[](https://codingcat.dev/blog/scully-io#scullyio---angular-static-site-generator)\n--------------------------------------------------------------------------------------------------\n\n2019 has been another amazing year building up JAMStack (Javascript APIs and Markup) sites. AJonP joined this trend by moving over to Gatsby a React based Static Site generator. Growing up as an Angular developer I missed the fact that Angular didn’t have an option that existed. For AJonP it came down to Hugo and Gatsby (writing and then rewriting).\n\nScully[](https://codingcat.dev/blog/scully-io#scully)\n-----------------------------------------------------\n\n> The best way to build the fastest Angular apps. Scully is a static site generator for Angular projects looking to embrace the JAMStack.\n\nJust like the other frameworks what Scully offers is the ability to pre-render pages and then create HTML and CSS that loads highly performant pages for your browser to utilize without the SPA effect and whitescreen where you get loading times in the mix. Make sure to checkout the [Scully Docs](https://github.com/scullyio/scully/tree/master/docs).\n\n> Scully pre-renders each page in your app to plain HTML &amp; CSS. To do this, Scully uses machine learning techniques to find all of the routes in your project. Scully then visits each route, rendering the view and saving it to an HTML file.  \n> You can then ship all of those HTML files to production. Each view in your app can now be delivered to your users in just a few KBs, as opposed to the hundreds/thousands of KBs require to download your entire Angular app.  \n> Your app appears INSTANTLY on any device (including mobile 3G). -Scully Docs\n\n### Alpha Release Video[](https://codingcat.dev/blog/scully-io#alpha-release-video)\n\nMake sure to checkout Aaron Frost and the [HeroDevs](https://herodevs.com/) team [Introducing Scully: Angular + JAMStack](https://youtu.be/Sh37rIUL-d4).\n\nTry Scully[](https://codingcat.dev/blog/scully-io#try-scully)\n-------------------------------------------------------------\n\nOf course you just need an Angular project. For an example I cloned the example from our [Angular Material Course](https://ajonp.com/courses/angularmaterial/angular-material-reactive-forms-update-firestore). ```\n<pre class=\"wp-block-code\">```\ngit clone https://github.com/AJONPLLC/lesson13-angular-material-reactive-forms\n```\n```\n\n### Initialize[](https://codingcat.dev/blog/scully-io#initialize)\n\nThen opening the terminal at the root of this project I ran the commands to initialize scully ```\n<pre class=\"wp-block-code\">```\nng add @scullyio/init\n```\n```\n\nThis produced 6 file changes in my examplepackage.json and package-lock.json <figure class=\"wp-block-image\">![package.json](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/scully.io-intro/Screen_Shot_2019-12-17_at_2.49.23_PM.png)</figure>scullyconfig.js <figure class=\"wp-block-image\">![scullyconfig.js](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/scully.io-intro/Screen_Shot_2019-12-17_at_2.49.35_PM.png)</figure>polyfills.ts <figure class=\"wp-block-image\">![](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/scully.io-intro/Screen_Shot_2019-12-17_at_2.49.47_PM.png)</figure>app.component.ts <figure class=\"wp-block-image\">![app.component.ts](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/scully.io-intro/Screen_Shot_2019-12-17_at_2.50.02_PM.png)</figure>app.module.ts <figure class=\"wp-block-image\">![app.module.ts](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/scully.io-intro/Screen_Shot_2019-12-17_at_2.50.16_PM.png)</figure>### Build[](https://codingcat.dev/blog/scully-io#build)\n\nNext you will create an Angular build just like normal, followed by `npm run scully` . ```\n<pre class=\"wp-block-code\">```\nng build && npm run scully\n```\n```\n\n> If you get an error I did have to place `\"fs-extra\": \"^8.1.0\",` as a dev dependency  \n> <https://github.com/scullyio/scully/issues/28>\n\nYou will see your normal build file in `dist` folder and a new `static` folder that contains your SSG files. You can then run the site by switching to the static directory and using a local server like [http-server](https://www.npmjs.com/package/http-server) to run the compliled code.\n\nWhat to Try Next[](https://codingcat.dev/blog/scully-io#what-to-try-next)\n-------------------------------------------------------------------------\n\n### Scully Generators[](https://codingcat.dev/blog/scully-io#scully-generators)\n\nAdd scully to your project and utilize [@schematics/angular](https://angular.io/cli/generate). This command will add the necessary packages that allow you to use the Angular CLI for scaffolding out ```\n<pre class=\"wp-block-code\">```\nng add @scullyio/init\n```\n```\n\n### Blogs[](https://codingcat.dev/blog/scully-io#blogs)\n\nThe below command allows you to create a blog and make posts. Try this out in a new Angular app to start up your blog from scratch. ```\n<pre class=\"wp-block-code\">```\nng g @scullyio/init:blog\nng g @scullyio/init:post\n\n```\n```\n\n<https://github.com/scullyio/scully/blob/master/docs/blog.md>Final Thoughts[](https://codingcat.dev/blog/scully-io#final-thoughts)\n---------------------------------------------------------------------\n\nI know that Aaron Frost, Sander Elias, Jorge Cano, and Andres Villanueva are Angular Wizards so the project is in good hands. It is just the beginning, but if you are looking for an amazing Angular project to be part of make sure you star this one! ",
    "iso8601Date": "2019-12-17T13:06:13-05:00",
    "basename": "scully-io-anguler-static-site-generator"
  },
  "slack-workspace-theme-customization": {
    "title": "Slack Workspace Theme Customization",
    "date": "2019-08-01T15:59:32+00:00",
    "status": "publish",
    "permalink": "/slack-workspace-theme-customization",
    "author": "Alex Patterson",
    "excerpt": "",
    "type": "post",
    "id": 684,
    "thumbnail": "/v1600704779/ccd-cloudinary/slack/slack-150x150.png",
    "category": [
      "Productivity"
    ],
    "tag": [
      "slack"
    ],
    "post_format": [
      "Video"
    ],
    "preview": "<iframe allow=\"accelerometer; autoplay; clipboard-write; …",
    "content": "\n<iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/vbtncEcoO9o?feature=oembed\" title=\"Slack Workspace Theme Customization\" width=\"640\"></iframe>\n\nHow to customize your slack theme\n---------------------------------\n\n[Official Slack Doc](https://get.slack.help/hc/en-us/articles/205166337-Customize-your-Slack-theme)\n\nSlackThemes.net\n---------------\n\n> AJonP is not sponsored by [Slack](https://slack.com/) , neither is slackthemes.net at time of this posting. But we both think it is a great tool!\n\n[SlackThemes.net](https://slackthemes.net/#/myplanet)\n\n<figure class=\"wp-block-image\">![Slack Themes Image](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/Screen_Shot_2019-08-14_at_10.36.02_PM.png)</figure>### Fork SlackThemes Repo\n\nIf you make a cool theme add it to [paracycle/slackthemes](https://github.com/paracycle/slackthemes) GitHub repository. It is as simple as making a pull request.[Fork a repo – GitHub Help](https://help.github.com/en/articles/fork-a-repo)",
    "iso8601Date": "2019-08-01T11:59:32-04:00",
    "basename": "slack-workspace-theme-customization"
  },
  "updating-ajonps-brand": {
    "title": "Updating AJonP&#8217;s Brand",
    "date": "2019-10-10T16:54:09+00:00",
    "status": "publish",
    "permalink": "/updating-ajonps-brand",
    "author": "Alex Patterson",
    "excerpt": "Another evolution in the AJonP brand has come in the form of standardizing on acceptance. Making the most of neutral (non-stereotyped) colors. Taking a nod from Dev.to and updating AJ's tag to include a rainbow, as every mascot should have gender neutrality.",
    "type": "post",
    "id": 766,
    "thumbnail": "/v1600706379/ccd-cloudinary/8bad310b542451b614acb12dcae54bd404363129-1920x1080-1/8bad310b542451b614acb12dcae54bd404363129-1920x1080-1-150x150.png",
    "category": [
      "CodingCatDev"
    ],
    "tag": [],
    "post_format": [],
    "preview": "Another evolution in the AJonP brand has come in the form of …",
    "content": "\nAnother evolution in the AJonP brand has come in the form of standardizing on acceptance. Making the most of neutral (non-stereotyped) colors. Taking a nod from Dev.to and updating AJ’s tag to include a rainbow, as every mascot should have gender neutrality.\n\nFirst the Technology[](https://codingcat.dev/blog/updating-ajonp-s-brand#first-the-technology)\n----------------------------------------------------------------------------------------------\n\nIf you have not checked out [Figma](https://figma.com/) yet please do so right meow! It is so powerful when you can take a component and reuse it throughout your site. Checkout how I can change the eyes in all of these different Logos, just by changing the main component.<https://www.youtube.com/embed/IFLQySh-Zb4?autoplay=0&amp;rel=0&amp;showinfo=0&amp;modestbranding=1>\n\nAJ’s New Tag[](https://codingcat.dev/blog/updating-ajonp-s-brand#ajs-new-tag)\n-----------------------------------------------------------------------------\n\nAJ will now be representing more people equally, and that is really important particularly to web development! We want a community that encourages everyone to share and learn together!\n\n<figure class=\"wp-block-image\">![AJonP's New Logo and Tag](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/Logos/ajonp/AJ_Vector.png)</figure>AJonP’s New Colors and Logos[](https://codingcat.dev/blog/updating-ajonp-s-brand#ajonps-new-colors-and-logos)\n-------------------------------------------------------------------------------------------------------------",
    "iso8601Date": "2019-10-10T12:54:09-04:00",
    "basename": "updating-ajonps-brand"
  },
  "vscode-extension-peacock": {
    "title": "VSCode Extension Peacock",
    "date": "2019-05-10T14:56:32+00:00",
    "status": "publish",
    "permalink": "/vscode-extension-peacock",
    "author": "Alex Patterson",
    "excerpt": "Subtly change the color of your Visual Studio Code workspace. Ideal when you have multiple VS Code instances, use VS Live Share, or use VS Code's Remote features, and you want to quickly identify your editor.",
    "type": "post",
    "id": 444,
    "thumbnail": "/v1600704493/ccd-cloudinary/peacock/peacock-150x150.png",
    "category": [
      "Developer Tools"
    ],
    "tag": [
      "peacock",
      "vscode"
    ],
    "post_format": [
      "Video"
    ],
    "preview": "<iframe allow=\"accelerometer; autoplay; clipboard-write; …",
    "content": "\n<iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/VYuSbZxbBoE?feature=oembed\" title=\"VSCode Extension - Peacock by John Papa\" width=\"640\"></iframe>\n\n> Please note the video was from version 2.\n\nVSCode Extension Peacock\n========================\n\n<figure class=\"wp-block-image\">![Peacock](https://res.cloudinary.com/ajonp/image/upload/f_auto,q_auto/ajonp-ajonp-com/blog/peacock.png)</figure>Subtly change the color of your Visual Studio Code workspace. Ideal when you have multiple VS Code instances, use VS Live Share, or use VS Code’s Remote features, and you want to quickly identify your editor.\n\n[Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=johnpapa.vscode-peacock)\n\n[Full Documentation](https://papapeacockstorage.z13.web.core.windows.net/)",
    "iso8601Date": "2019-05-10T10:56:32-04:00",
    "basename": "vscode-extension-peacock"
  },
  "aws-amplify-vs-aws-cdk-2020": {
    "title": "AWS Amplify vs. AWS CDK What is the most powerful AWS IaC in 2020?",
    "date": "2020-11-18T16:03:07+00:00",
    "status": "publish",
    "permalink": "/aws-amplify-vs-aws-cdk-2020",
    "author": "Alex",
    "excerpt": "AWS Amplify vs. AWS CDK. So you are just getting started with your next project and can't figure out what IaC to start with, lets compare two of AWS's most popular.",
    "type": "post",
    "id": 1899,
    "thumbnail": "/v1605701532/ccd-cloudinary/AWS-Amplify-vs-CDK/AWS-Amplify-vs-CDK-150x150.png",
    "category": [
      "Amazon Web Services",
      "Developer Tools",
      "Web"
    ],
    "tag": [
      "aws",
      "aws amplify",
      "aws cdk"
    ],
    "post_format": [],
    "rank_math_schema_BlogPosting": [
      "a:8:{s:5:\"@type\";s:11:\"BlogPosting\";s:8:\"metadata\";a:3:{s:5:\"title\";s:7:\"Article\";s:4:\"type\";s:8:\"template\";s:9:\"isPrimary\";b:1;}s:8:\"headline\";s:11:\"%seo_title%\";s:11:\"description\";s:17:\"%seo_description%\";s:13:\"datePublished\";s:20:\"%date(Y-m-dTH:i:sP)%\";s:12:\"dateModified\";s:24:\"%modified(Y-m-dTH:i:sP)%\";s:5:\"image\";a:2:{s:5:\"@type\";s:11:\"ImageObject\";s:3:\"url\";s:16:\"%post_thumbnail%\";}s:6:\"author\";a:2:{s:5:\"@type\";s:6:\"Person\";s:4:\"name\";s:6:\"%name%\";}}"
    ],
    "rank_math_schema_VideoObject": [
      "a:12:{s:5:\"@type\";s:11:\"VideoObject\";s:8:\"metadata\";a:7:{s:5:\"title\";s:5:\"Video\";s:4:\"type\";s:8:\"template\";s:9:\"shortcode\";s:15:\"s-5fb53da84db16\";s:9:\"isPrimary\";b:0;s:23:\"reviewLocationShortcode\";s:24:\"[rank_math_rich_snippet]\";s:8:\"category\";s:12:\"%categories%\";s:4:\"tags\";s:6:\"%tags%\";}s:4:\"name\";s:11:\"%seo_title%\";s:11:\"description\";s:17:\"%seo_description%\";s:10:\"uploadDate\";s:20:\"%date(Y-m-dTH:i:sP)%\";s:12:\"thumbnailUrl\";s:62:\"https://codingcat.dev/wp-content/uploads/2020/11/hqdefault.jpg\";s:8:\"embedUrl\";s:56:\"https://www.youtube.com/embed/bz4jTx4v-l8?feature=oembed\";s:10:\"contentUrl\";s:0:\"\";s:8:\"duration\";s:0:\"\";s:5:\"width\";i:480;s:6:\"height\";i:270;s:16:\"isFamilyFriendly\";b:1;}"
    ],
    "rank_math_facebook_image": [
      "/v1605701532/ccd-cloudinary/AWS-Amplify-vs-CDK/AWS-Amplify-vs-CDK.png"
    ],
    "rank_math_facebook_image_id": [
      "1903"
    ],
    "CODEiaccompare": [
      "<script type=\"text/javascript\" src=\"https://ssl.gstatic.com/trends_nrtr/2402_RC03/embed_loader.js\"></script> <script type=\"text/javascript\"> trends.embed.renderExploreWidget(\"TIMESERIES\", {\"comparisonItem\":[{\"keyword\":\"aws cdk\",\"geo\":\"US\",\"time\":\"today 12-m\"},{\"keyword\":\"aws amplify\",\"geo\":\"US\",\"time\":\"today 12-m\"},{\"keyword\":\"cloudformation\",\"geo\":\"US\",\"time\":\"today 12-m\"},{\"keyword\":\"terraform\",\"geo\":\"US\",\"time\":\"today 12-m\"},{\"keyword\":\"serverless framework\",\"geo\":\"US\",\"time\":\"today 12-m\"}],\"category\":0,\"property\":\"\"}, {\"exploreQuery\":\"geo=US&q=aws%20cdk,aws%20amplify,cloudformation,terraform,serverless%20framework&date=today 12-m,today 12-m,today 12-m,today 12-m,today 12-m\",\"guestPath\":\"https://trends.google.com:443/trends/embed/\"}); </script>"
    ],
    "preview": "<figure class=\"wp-block-image size-large\">![Adding AWS Amplify or …",
    "content": "\n<figure class=\"wp-block-image size-large\">![Adding AWS Amplify or CDK to AWS deploying several services.](/w_1024,h_576,c_scale/v1605701532/ccd-cloudinary/AWS-Amplify-vs-CDK/AWS-Amplify-vs-CDK-1024x576.png)</figure>  \nWhat are AWS Amplify and AWS CDK?\n------------------------------------\n\nFirst things first acronyms are always a tough start to a post so lets clear up a few of them.\n\n- AWS – [Amazon Web Services](https://aws.amazon.com/)\n- Amplify – [AWS Amplify](https://aws.amazon.com/amplify/)\n- CDK – [Cloud Development Kit](https://aws.amazon.com/cdk/)\n- IaC – [Infrastructure as Code](https://en.wikipedia.org/wiki/Infrastructure_as_code)\n- CF – [AWS CloudFormation](https://aws.amazon.com/cloudformation/)\n\nAWS’s description for the AWS CDK\n\n> The AWS Cloud Development Kit (AWS CDK) is an open source software development framework to define your cloud application resources using familiar programming languages.\n> \n> <cite>https://aws.amazon.com/cdk/</cite>\n\n  \nAWS’s description for AWS Amplify\n\n> AWS Amplify is a set of products and tools that enables mobile and front-end web developers to build and deploy secure, scalable full stack applications, powered by AWS. With Amplify, you can configure app backends in minutes, connect them to your app in just a few lines of code, and deploy static web apps in three steps. Get to market faster with AWS Amplify.\n> \n> <cite>https://aws.amazon.com/amplify/</cite>\n\nAt first glance it would seems like these two products are not related at all. However both are tools that you can use to build cloud applications while maintaining the resource definitions in your code, what we call Infrastructure as Code (IaC). There are several tools that help with IaC across many cloud platforms, but especially with AWS and we will cover those in further details.\n\n### AWS CDK\n\nThe AWS CDK was released at AWS New Your Summit 2019 which you can watch Martin Beeby talk about in the below YouTube video.\n\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\"><iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/bz4jTx4v-l8?feature=oembed\" title=\"AWS New York Summit 2019 - AWS Cloud Development Kit\" width=\"640\"></iframe></div></figure>The most amazing part about the CDK is that you can write your definitions in the language of your choice (well of the supported choices). At the time of this article the supported languages are TypeScript, JavaScript, Python, Java, and C#.\n\nDevelopers can use one of the supported programming languages to define reusable cloud components known as [Constructs](https://docs.aws.amazon.com/cdk/latest/guide/constructs.html). You compose these together into [Stacks](https://docs.aws.amazon.com/cdk/latest/guide/stacks.html) and [Apps](https://docs.aws.amazon.com/cdk/latest/guide/apps.html).\n\nBelow you can see it is very readable in your IDE\n\n<figure class=\"wp-block-image\">![Coded showing CDK usage.](https://docs.aws.amazon.com/cdk/latest/guide/images/CodeCompletion.png)<figcaption>From: https://docs.aws.amazon.com/cdk/latest/guide/home.html</figcaption></figure>To get started all you have to do is install the AWS CDK globally with npm like below.\n\n```\n<pre class=\"wp-block-code\">```\nnpm install -g aws-cdk\n```\n```\n\nOnce you do this I would suggest reading through the [getting started guide ](https://docs.aws.amazon.com/cdk/latest/guide/getting_started.html)that AWS provides.\n\n### AWS Amplify\n\nAWS Amplify was released in 2018, probably the best example of the release I could find was from Nader Dabit, Senior Developer Advocate at Amazon Web Services.\n\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\"><iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/yp3nNcqH5is?feature=oembed\" title=\"AWS re:Invent 2018: Building Engaging Mobile Apps (DEM117)\" width=\"640\"></iframe></div></figure>I had an opportunity to sit down with Nader on [Purrfect.dev](https://codingcat.dev/podcasts/0-10-amplify-with-nader-dabit/) to discuss how AWS Amplify fits into a developer’s ecosystem. You can see the video below\n\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\"><iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/kUM8Zcb369U?feature=oembed\" title=\"Amplify with Nader Dabit | Purrfect.dev\" width=\"640\"></iframe></div></figure>Or please subscribe to the podcast and listen.\n\n<iframe frameborder=\"0\" height=\"102px\" scrolling=\"no\" src=\"https://anchor.fm/purrfect-dev/embed/episodes/0-10---Amplify-with-Nader-Dabit-edvjpb/a-a3lu891\" width=\"400px\"></iframe>\n\nWhen you start using AWS Amplify you will notice that it is geared more towards the entire platform to be supported. Making it very simple for a Web or Mobile developer to get started very easy. The configurations for your backend are done mainly through the CLI and some configurations on your GraphQL (or REST) definitions.\n\nWhy do they both exist?\n-----------------------\n\nWhat is similar between AWS CDK and AWS Amplify is that they both create CloudFormation files and deploy using AWS CloudFormation. This is the key when comparing them as Infrastructure as Code tools. However where the difference lies is the focus for each tool.\n\n### AWS Amplify\n\nAWS Amplify is all about mobile and web apps and has a very specific setup to get you writing your web or mobile application fast! It does this by using 3 components [libraries](https://aws.amazon.com/amplify/features/#Libraries), [UI components](https://aws.amazon.com/amplify/features/#UI_components), and a [CLI toolchain](https://aws.amazon.com/amplify/features/#CLI_toolchain). What Amplify does is allow for creating the below services very easily.\n\n<div class=\"wp-block-columns\"><div class=\"wp-block-column\">#### [Authentication](https://aws.amazon.com/amplify/features/#Authentication)\n\nUser registration &amp; authentication\n\n</div><div class=\"wp-block-column\">#### [DataStore](https://aws.amazon.com/amplify/features/#DataStore)\n\nOffline synchronization &amp; conflict resolution\n\n</div><div class=\"wp-block-column\">#### [API (GraphQL and REST)](https://aws.amazon.com/amplify/features/#API)\n\nAccess data from multiple data sources\n\n</div></div><div class=\"wp-block-columns\"><div class=\"wp-block-column\">#### [Storage](https://aws.amazon.com/amplify/features/#Storage)\n\nManage user content\n\n</div><div class=\"wp-block-column\">#### [Analytics](https://aws.amazon.com/amplify/features/#Analytics)\n\nCollect analytics data for your app\n\n</div><div class=\"wp-block-column\">#### [Predictions](https://aws.amazon.com/amplify/features/#Predictions)\n\nAI/ML including text translations\n\n</div></div><div class=\"wp-block-columns\"><div class=\"wp-block-column\">#### [Interactions](https://aws.amazon.com/amplify/features/#Interactions)\n\nCreate conversational chatbots\n\n</div><div class=\"wp-block-column\">#### [Push Notifications](https://aws.amazon.com/amplify/features/#Push_notifications)\n\nSend targeted communications\n\n</div><div class=\"wp-block-column\">#### [PubSub](https://aws.amazon.com/amplify/features/#PubSub)\n\nManage messaging &amp; subscriptions\n\n</div></div>Much of this is done via the CLI and one comment that I hear a lot is that there is too much hidden “magic” that is happening when using the CLI to create all of these configurations.\n\n### AWS CDK\n\nIf you know for a fact that your next application is going to need tools outside of the ones listed above I would look to leverage another IaC like AWS CDK. The biggest thing is going to be developer happiness and testability within your application. If you spend all day fighting with customized CloudFormation written in customized JSON resources in AWS Amplify your developers are probably going to start to dislike the maintenance of the entire Amplify solution.\n\nThe wonderful part about both AWS Amplify and AWS CDK is that they are both powered by CloudFormation, so you get all the benefits of CloudFormation, including repeatable deployment, easy rollback, and drift detection.\n\nBoth tools also allow you to develop infrastructure and runtime code together.\n\nOne of the biggest things that I believe AWS CDK has that Amplify does not are the idea of Constructs. Constructs are vetted architecture patterns, available as an open-source extension of the AWS Cloud Development Kit (CDK), that can be easily assembled declaratively to create a production-ready workload. You can find an entire [AWS Solutions Constructs repository](https://aws.amazon.com/solutions/constructs/patterns/).\n\nSo a great example of using the CDK over Amplify would be if you are developing an IoT solution. This isn’t a great fit for Amplify but below are all the Constructs that will get you started quickly.\n\n<figure class=\"wp-block-image size-large\">![Listing of IoT Constructs.](/w_1024,h_1011,c_scale/v1605715082/ccd-cloudinary/image_1911ef4d4/image-1024x1011.png)</figure>There is a great list of features still coming on the [AWS CDK roadmap](https://github.com/orgs/aws/projects/7).\n\nSo is AWS Amplify or AWS CDK the most powerful in 2020?\n-------------------------------------------------------\n\nI know you read through all of the above and you did your best to already formulate an opinion and that was my goal. Don’t let the tools stop you from creating exactly what you need, make sure you list out what you are trying to accomplish and then you can easily determine what IaC will work best for you. I believe as long as you have your Infrastructure in some type of code and it allows you to repeat your work easily, that is going to be the best solution for you.\n\nWHY NOT BOTH??  \n  \nBetter yet if you are looking to start with AWS Amplify and then continue building on top of this base you absolutely can! Checkout Nader Dabit’s *Mixing Amplify with CDK – Building an Authenticated GraphQL API with TypeScript on AWS*\n\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\"><iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/rjiiNpJzOYk?feature=oembed\" title=\"Mixing Amplify with CDK - Building an Authenticated GraphQL API with TypeScript on AWS\" width=\"640\"></iframe></div></figure>Alternative IaC Tools\n---------------------\n\n{{CODEiaccompare}}\n\n- [Terraform](https://www.terraform.io/)\n  - <https://github.com/hashicorp/terraform-cdk>\n- [Serverless Framework](https://www.serverless.com/)\n- [Pulumi](https://www.pulumi.com/)\n\nIf you haven’t watched [Purrfect.dev’s Pulumi Episode](https://codingcat.dev/podcasts/infrastructure-as-code-with-pulumi/) you should check it out now!\n\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\"><iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/csOQut3UiTM?feature=oembed\" title=\"1.1 - Infrastructure as Code with Pulumi\" width=\"640\"></iframe></div></figure>",
    "iso8601Date": "2020-11-18T11:03:07-05:00",
    "basename": "aws-amplify-vs-aws-cdk-2020"
  },
  "google-cloud-reference": {
    "title": "Google Cloud Reference",
    "date": "2020-09-16T20:15:45+00:00",
    "status": "publish",
    "permalink": "/google-cloud-reference",
    "author": "Alex Patterson",
    "excerpt": "A developers cheat sheet for all the products offered by Google Cloud Platform",
    "type": "post",
    "id": 116,
    "thumbnail": "/v1600704421/ccd-cloudinary/9b45cb61e60e9c6c7ca6dcfaf2fff458ca26bcc2-5400x3600-1/9b45cb61e60e9c6c7ca6dcfaf2fff458ca26bcc2-5400x3600-1-150x150.png",
    "category": [
      "Google Cloud Platform"
    ],
    "tag": [],
    "post_format": [],
    "use_ampforwp_page_builder": [
      "yes"
    ],
    "preview": "The Google Cloud Developer’s Cheat Sheet …",
    "content": "\nThe Google Cloud Developer’s Cheat Sheet\n========================================\n\nThis is all from <https://github.com/gregsramblings/google-cloud-4-words/blob/master/README.md> please check it out! This is mainly for me to remember where this great list is located 🔗LinkFeedback? [@gregsramblings](https://twitter.com/gregsramblings). You can also check my blog – <https://gregsramblings.com>**Note:** This list only includes products that are publicly available. There are several products in pre-release/private-alpha that will not be included until they go public beta or GA.\n\nAll Products\n============\n\n### Compute\n\n- **Cloud Run**: Serverless for containerized applications [🔗Link](https://cloud.google.com/run/) [🔗Link](https://cloud.google.com/run/docs/)\n- **Cloud Functions**: Event-driven serverless functions [🔗Link](https://cloud.google.com/functions/) [🔗Link](https://cloud.google.com/functions/docs/)\n- **Compute Engine**: VMs, GPUs, TPUs, Disks [🔗Link](https://cloud.google.com/compute/) [🔗Link](https://cloud.google.com/compute/docs/)\n- **Kubernetes Engine (GKE)**: Managed Kubernetes/containers [🔗Link](https://cloud.google.com/kubernetes-engine/) [🔗Link](https://cloud.google.com/kubernetes-engine/docs/)\n- **App Engine**: Managed app platform [🔗Link](https://cloud.google.com/appengine/) [🔗Link](https://cloud.google.com/appengine/docs/)\n- **Bare Metal Solution**: Hardware for specialized workloads [🔗Link](https://cloud.google.com/bare-metal)\n- **Preemptible VMs**: Short-lived compute instances [🔗Link](https://cloud.google.com/preemptible-vms) [🔗Link](https://cloud.google.com/compute/docs/instances/preemptible)\n- **Shielded VMs**: Hardened VMs [🔗Link](https://cloud.google.com/shielded-vm/) [🔗Link](https://cloud.google.com/security/shielded-cloud/shielded-vm/)\n- **Sole-tenant nodes**: Dedicated physical servers [🔗Link](https://cloud.google.com/sole-tenant-nodes) [🔗Link](https://cloud.google.com/compute/docs/nodes)\n \n### Storage\n\n- **Cloud Filestore**: Managed NFS server [🔗Link](https://cloud.google.com/filestore/) [🔗Link](https://cloud.google.com/filestore/docs/)\n- **Cloud Storage**: Multi-class multi-region object storage[🔗Link](https://cloud.google.com/storage/) [🔗Link](https://cloud.google.com/storage/docs/)\n- **Persistent Disk**: Block storage for VMs [🔗Link](https://cloud.google.com/persistent-disk/) [🔗Link](https://cloud.google.com/compute/docs/disks/)\n- **Local SSD**: VM locally attached SSDs [🔗Link](https://cloud.google.com/local-ssd) [🔗Link](https://cloud.google.com/compute/docs/disks/local-ssd)\n \n### Database\n\n- **Cloud Bigtable**: Petabyte-scale, low-latency, non-relational [🔗Link](https://cloud.google.com/bigtable/) [🔗Link](https://cloud.google.com/bigtable/docs/)\n- **Cloud Firestore**: Serverless NoSQL document DB [🔗Link](https://cloud.google.com/firestore/) [🔗Link](https://cloud.google.com/firestore/docs/)\n- **Cloud Memorystore**: Managed Redis and Memcached [🔗Link](https://cloud.google.com/memorystore/) [🔗Link](https://cloud.google.com/memorystore/docs/)\n- **Cloud Spanner**: Horizontally scalable relational DB [🔗Link](https://cloud.google.com/spanner/) [🔗Link](https://cloud.google.com/spanner/docs/)\n- **Cloud SQL**: Managed MySQL, PostgreSQL, SQL Server [🔗Link](https://cloud.google.com/sql/) [🔗Link](https://cloud.google.com/sql/docs/)\n \n### Data and Analytics\n\n- **BigQuery**: Data warehouse/analytics [🔗Link](https://cloud.google.com/bigquery/) [🔗Link](https://cloud.google.com/bigquery/docs/)\n- **BigQuery BI Engine**: In-memory analytics engine [🔗Link](https://cloud.google.com/bi-engine/docs/)\n- **BigQuery ML**: BigQuery model training/serving [🔗Link](https://cloud.google.com/bigquery-ml/docs/)\n- **Cloud Composer**: Managed workflow orchestration service [🔗Link](https://cloud.google.com/composer/) [🔗Link](https://cloud.google.com/composer/docs/)\n- **Cloud Data Fusion**: Graphically manage data pipelines [🔗Link](https://cloud.google.com/data-fusion/) [🔗Link](https://cloud.google.com/data-fusion/docs/)\n- **Cloud Dataflow**: Stream/batch data processing [🔗Link](https://cloud.google.com/dataflow/) [🔗Link](https://cloud.google.com/dataflow/docs/)\n- **Cloud Dataprep**: Visual data wrangling [🔗Link](https://cloud.google.com/dataprep/) [🔗Link](https://cloud.google.com/dataprep/docs/)\n- **Cloud Dataproc**: Managed Spark and Hadoop [🔗Link](https://cloud.google.com/dataproc/) [🔗Link](https://cloud.google.com/dataproc/docs/)\n- **Cloud Pub/Sub**: Global real-time messaging [🔗Link](https://cloud.google.com/pubsub/) [🔗Link](https://cloud.google.com/pubsub/docs/)\n- **Data Catalog**: Metadata management service [🔗Link](https://cloud.google.com/data-catalog/) [🔗Link](https://cloud.google.com/data-catalog/docs/)\n- **Data Studio**: Collaborative data exploration/dashboarding [🔗Link](https://datastudio.google.com/overview) [🔗Link](https://datastudio.google.com/overviewdocs/)\n- **Looker**: Enterprise BI and Analytics [🔗Link](https://cloud.google.com/looker)\n \n### Hybrid and Multi-cloud\n\n- **Anthos**: Enterprise hybrid/multi-cloud platform [🔗Link](https://cloud.google.com/anthos/) [🔗Link](https://cloud.google.com/anthos/docs/)\n- **Anthos GKE**: Hybrid/on-prem Kubernetes Engine [🔗Link](https://cloud.google.com/anthos/gke) [🔗Link](https://cloud.google.com/anthos/gke/docs/on-prem/)\n- **Anthos Config Management**:Policy and security automation [🔗Link](https://cloud.google.com/anthos/config-management) [🔗Link](https://cloud.google.com/anthos-config-management/docs)\n- **Anthos Service Mesh**: Managed service mesh (Istio) [🔗Link](https://cloud.google.com/anthos/service-mesh) [🔗Link](https://cloud.google.com/service-mesh/docs)\n- **Cloud Run for Anthos**: Serverless development for Anthos [🔗Link](https://cloud.google.com/anthos/run) [🔗Link](https://cloud.google.com/run/docs/quickstarts/prebuilt-deploy-gke)\n- **Google Cloud Marketplace for Anthos**: Pre-configured containerized apps [🔗Link](https://cloud.google.com/kubernetes-applications) [🔗Link](https://cloud.google.com/marketplace/docs/kubernetes-apps)\n- **Migrate for Anthos**: Migrate VMs to Kubernetes Engine [🔗Link](https://cloud.google.com/migrate/anthos/) [🔗Link](https://cloud.google.com/migrate/anthos/docs/getting-started)\n- **Operations**: Monitoring, logging, troubleshooting [🔗Link](https://cloud.google.com/products/operations) [🔗Link](https://cloud.google.com/stackdriver/docs)\n- **Cloud Build**: Continuous integration/delivery platform [🔗Link](https://cloud.google.com/cloud-build/) [🔗Link](https://cloud.google.com/cloud-build/docs/)\n- **Traffic Director**: Service mesh traffic management [🔗Link](https://cloud.google.com/traffic-director/) [🔗Link](https://cloud.google.com/traffic-director/docs/)\n- **Apigee API Management**: API management, development, security [🔗Link](https://cloud.google.com/apigee)\n \n### AI/ML\n\n- **AI Hub**: Hosted AI component sharing [🔗Link](https://cloud.google.com/ai-hub/) [🔗Link](https://cloud.google.com/ai-hub/docs/)\n- **AI Platform Data Labeling**: Data labeling by humans [🔗Link](https://cloud.google.com/data-labeling/docs/)\n- **AI Platform Deep Learning VMs**: Preconfigured VMs for deep learning [🔗Link](https://cloud.google.com/deep-learning-vm/) [🔗Link](https://cloud.google.com/deep-learning-vm/docs/)\n- **AI Platform Deep Learning Containers**: Preconfigured containers for deep learning [🔗Link](https://cloud.google.com/ai-platform/deep-learning-containers/) [🔗Link](https://cloud.google.com/ai-platform/deep-learning-containers/docs/)\n- **AI Platform Notebooks**: Managed JupyterLab notebook instances [🔗Link](https://cloud.google.com/ai-platform-notebooks/)[🔗Link](https://cloud.google.com/ai-platform/notebooks/docs/)\n- **AI Platform Pipelines**: Hosted ML workflows[🔗Link](https://cloud.google.com/ai-platform/pipelines/)\n- **AI Platform Predictions**: Autoscaled model serving [🔗Link](https://cloud.google.com/ai-platform/prediction/docs/overview)\n- **AI Platform Training**: Distributed AI training [🔗Link](https://cloud.google.com/ai-platform/training/docs/overview)\n- **AI Platform**: Managed platform for ML [🔗Link](https://cloud.google.com/ai-platform/)\n- **AutoML Natural Language**: Custom text models [🔗Link](https://cloud.google.com/natural-language/automl/docs/)\n- **AutoML Tables**: Custom structured data models [🔗Link](https://cloud.google.com/automl-tables/) [🔗Link](https://cloud.google.com/automl-tables/docs/)\n- **AutoML Translation**: Custom domain-specific translation [🔗Link](https://cloud.google.com/translate/) [🔗Link](https://cloud.google.com/translate/docs/)\n- **AutoML Video Intelligence**: Custom video annotation models [🔗Link](https://cloud.google.com/video-intelligence/) [🔗Link](https://cloud.google.com/video-intelligence/automl/docs/)\n- **AutoML Vision**: Custom image models [🔗Link](https://cloud.google.com/automl/) [🔗Link](https://cloud.google.com/automl/docs/)\n- **Cloud Natural Language API**: Text parsing and analysis [🔗Link](https://cloud.google.com/natural-language/) [🔗Link](https://cloud.google.com/natural-language/docs/)\n- **Cloud Speech-To-Text API**: Convert audio to text [🔗Link](https://cloud.google.com/speech/) [🔗Link](https://cloud.google.com/speech/docs/)\n- **Cloud Talent Solutions API**: Job search with ML [🔗Link](https://cloud.google.com/job-discovery/) [🔗Link](https://cloud.google.com/job-discovery/docs/)\n- **Cloud Text-To-Speech API**: Convert text to audio [🔗Link](https://cloud.google.com/text-to-speech/) [🔗Link](https://cloud.google.com/text-to-speech/docs/)\n- **Cloud TPU**: Hardware acceleration for ML [🔗Link](https://cloud.google.com/tpu/) [🔗Link](https://cloud.google.com/tpu/docs/)\n- **Cloud Translation API**: Language detection and translation [🔗Link](https://cloud.google.com/translate/) [🔗Link](https://cloud.google.com/translate/docs/)\n- **Cloud Video Intelligence API**: Scene-level video annotation [🔗Link](https://cloud.google.com/video-intelligence/) [🔗Link](https://cloud.google.com/video-intelligence/docs/)\n- **Cloud Vision API**: Image recognition and classification [🔗Link](https://cloud.google.com/vision/) [🔗Link](https://cloud.google.com/vision/docs/)\n- **Contact Center AI**: AI in your contact center[🔗Link](https://cloud.google.com/solutions/contact-center/) [🔗Link](https://cloud.google.com/solutions/contact-center/)\n- **Dialogflow**: Create conversational interfaces [🔗Link](https://cloud.google.com/dialogflow-enterprise/) [🔗Link](https://cloud.google.com/dialogflow-enterprise/docs/)\n- **Document AI**: Analyze, classify, search documents [🔗Link](https://cloud.google.com/solutions/document-understanding/) [🔗Link](https://cloud.google.com/document-understanding/docs/)\n- **Explainable AI**: Understand ML model predictions [🔗Link](https://cloud.google.com/explainable-ai/) [🔗Link](https://cloud.google.com/ai-platform/prediction/docs/ai-explanations/overview)\n- **Recommendations AI**: Create custom recommendations [🔗Link](https://cloud.google.com/recommendations/) [🔗Link](https://cloud.google.com/recommendations-ai/docs/)\n- **Vision Product Search**: Visual search for products [🔗Link](https://cloud.google.com/vision/product-search/docs/)\n \n### Networking\n\n- **Carrier Peering**: Peer through a carrier [🔗Link](https://cloud.google.com/interconnect/docs/how-to/carrier-peering)\n- **Direct Peering**: Peer with GCP [🔗Link](https://cloud.google.com/interconnect/docs/how-to/direct-peering)\n- **Dedicated Interconnect**: Dedicated private network connection [🔗Link](https://cloud.google.com/interconnect/docs/details/dedicated)\n- **Partner Interconnect**: Connect on-prem network to VPC [🔗Link](https://cloud.google.com/interconnect/docs/concepts/partner-overview)\n- **Cloud Armor**: DDoS protection and WAF [🔗Link](https://cloud.google.com/armor/) [🔗Link](https://cloud.google.com/armor/docs/)\n- **Cloud CDN**: Content delivery network [🔗Link](https://cloud.google.com/cdn/) [🔗Link](https://cloud.google.com/cdn/docs/)\n- **Cloud DNS**: Programmable DNS serving [🔗Link](https://cloud.google.com/dns/) [🔗Link](https://cloud.google.com/dns/docs/)\n- **Cloud Load Balancing**: Multi-region load distribution/balancing [🔗Link](https://cloud.google.com/load-balancing/) [🔗Link](https://cloud.google.com/load-balancing/)\n- **Cloud NAT**: Network address translation service [🔗Link](https://cloud.google.com/nat/docs/overview/)\n- **Cloud Router**: VPC/on-prem network route exchange (BGP) [🔗Link](https://cloud.google.com/router/docs/)\n- **Cloud VPN (HA)**: VPN (Virtual private network connection) [🔗Link](https://cloud.google.com/compute/docs/vpn/overview)\n- **Network Service Tiers**: Price vs performance tiering [🔗Link](https://cloud.google.com/network-tiers/) [🔗Link](https://cloud.google.com/network-tiers/docs/)\n- **Network Telemetry**: Network telemetry service [🔗Link](https://cloud.google.com/network-telemetry/) [🔗Link](https://cloud.google.com/vpc/docs/using-flow-logs/)\n- **Traffic Director**: Service mesh traffic management [🔗Link](https://cloud.google.com/traffic-director/) [🔗Link](https://cloud.google.com/traffic-director/docs/)\n- **Google Cloud Service Mesh**: Service-aware network management [🔗Link](https://cloud.google.com/service-mesh/) [🔗Link](https://cloud.google.com/trace/docs/)\n- **Virtual Private Cloud**: Software defined networking [🔗Link](https://cloud.google.com/vpc/) [🔗Link](https://cloud.google.com/vpc/docs/)\n- **VPC Service Controls**: Security perimeters for API-based services [🔗Link](https://cloud.google.com/vpc-service-controls/) [🔗Link](https://cloud.google.com/vpc-service-controls/)\n- **Network Intelligence Center**: Network monitoring and topology [🔗Link](https://cloud.google.com/network-intelligence-center/) [🔗Link](https://cloud.google.com/network-intelligence-center/docs/)\n \n### Internet of Things (IoT)\n\n- **Cloud IoT Core**: Manage devices, ingest data [🔗Link](https://cloud.google.com/iot-core/) [🔗Link](https://cloud.google.com/iot-core/docs/)\n \n### Gaming\n\n- **Google Cloud Game Servers**: Orchestrate Agones clusters [🔗Link](https://cloud.google.com/game-servers)\n \n### Identity and Security\n\n- **Access Transparency**: Audit cloud provider access [🔗Link](https://cloud.google.com/access-transparency/) [🔗Link](https://cloud.google.com/logging/docs/audit/access-transparency-overview/)\n- **Binary Authorization**: Kubernetes deploy-time security [🔗Link](https://cloud.google.com/binary-authorization/) [🔗Link](https://cloud.google.com/binary-authorization/docs/)\n- **Cloud Audit Logs**: Audit trails for GCP [🔗Link](https://cloud.google.com/audit-logs/) [🔗Link](https://cloud.google.com/logging/docs/audit/)\n- **Cloud Data Loss Prevention API**: Classify and redact sensitive data [🔗Link](https://cloud.google.com/dlp/) [🔗Link](https://cloud.google.com/dlp/docs/)\n- **Cloud HSM**: Hardware security module service [🔗Link](https://cloud.google.com/hsm/) [🔗Link](https://cloud.google.com/kms/docs/hsm/)\n- **Cloud EKM**: External keys you control [🔗Link](https://cloud.google.com/ekm/) [🔗Link](https://cloud.google.com/kms/docs/ekm/)\n- **Cloud IAM**: Resource access control [🔗Link](https://cloud.google.com/iam/) [🔗Link](https://cloud.google.com/iam/docs/)\n- **Cloud Identity**: Manage users, devices &amp; apps [🔗Link](https://cloud.google.com/identity/) [🔗Link](https://cloud.google.com/identity/solutions/overview/)\n- **Cloud Identity-Aware Proxy**: Identity-based app access [🔗Link](https://cloud.google.com/iap/) [🔗Link](https://cloud.google.com/iap/docs/)\n- **Cloud KMS**: Hosted key management service [🔗Link](https://cloud.google.com/kms/) [🔗Link](https://cloud.google.com/kms/docs/)\n- **Cloud Resource Manager**: Cloud project metadata management [🔗Link](https://cloud.google.com/resource-manager/) [🔗Link](https://cloud.google.com/resource-manager/docs/)\n- **Cloud Security Command Center**: Security management and data risk platform [🔗Link](https://cloud.google.com/security-command-center/) [🔗Link](https://cloud.google.com/security-command-center/docs/)\n- **Cloud Security Scanner**: App engine security scanner [🔗Link](https://cloud.google.com/security-scanner/) [🔗Link](https://cloud.google.com/security-scanner/docs/)\n- **Context-aware Access**: End-user attribute-based access control [🔗Link](https://cloud.google.com/context-aware-access/) [🔗Link](https://cloud.google.com/iap/docs/cloud-iap-context-aware-access-howto/)\n- **Event Threat Detection**: Scans for suspicious activity [🔗Link](https://cloud.google.com/event-threat-detection/)\n- **Managed Service for Microsoft Active Directory**: Managed Microsoft Active Directory [🔗Link](https://cloud.google.com/managed-microsoft-ad/) [🔗Link](https://cloud.google.com/managed-microsoft-ad/docs/)\n- **Secret Manager**: Store and manage secrets [🔗Link](https://cloud.google.com/secret-manager/) [🔗Link](https://cloud.google.com/secret-manager/docs/)\n- **Security Key Enforcement**: Two-step key verification [🔗Link](https://cloud.google.com/security-key/)\n- **Shielded VMs**: Hardened VMs [🔗Link](https://cloud.google.com/shielded-vm/) [🔗Link](https://cloud.google.com/security/shielded-cloud/shielded-vm/)\n- **Titan Security Key**: Two-factor authentication (2FA) device [🔗Link](https://cloud.google.com/titan-security-key/)\n- **VPC Service Controls**: VPC data constraints [🔗Link](https://cloud.google.com/vpc-service-controls/) [🔗Link](https://cloud.google.com/vpc-service-controls/docs/)\n \n### Management Tools\n\n- **Cloud APIs**: APIs for cloud services [🔗Link](https://cloud.google.com/apis/) [🔗Link](https://cloud.google.com/apis/docs/)\n- **Cloud Billing API**: Programmatically manage GCP billing [🔗Link](https://cloud.google.com/billing/docs/)\n- **Cloud Billing**: Billing and cost management tools [🔗Link](https://cloud.google.com/billing/docs/) [🔗Link](https://cloud.google.com/billing/docs/docs/)\n- **Cloud Console**: Web-based management console [🔗Link](https://cloud.google.com/cloud-console/)\n- **Cloud Deployment Manager**: Templated infrastructure deployment [🔗Link](https://cloud.google.com/deployment-manager/) [🔗Link](https://cloud.google.com/deployment-manager/docs/)\n- **Cloud Mobile App**: iOS/Android GCP manager app [🔗Link](https://cloud.google.com/console-app/)\n- **Private Catalog**: Internal Solutions Catalog [🔗Link](https://cloud.google.com/private-catalog/) [🔗Link](https://cloud.google.com/private-catalog/docs/)\n- **Cloud Debugger**: Live production debugging [🔗Link](https://cloud.google.com/debugger/) [🔗Link](https://cloud.google.com/debugger/docs/)\n- **Error Reporting**: App error reporting [🔗Link](https://cloud.google.com/error-reporting/) [🔗Link](https://cloud.google.com/error-reporting/docs/)\n- **Cloud Logging**: Centralized logging [🔗Link](https://cloud.google.com/logging/) [🔗Link](https://cloud.google.com/logging/docs/)\n- **Cloud Monitoring**: Infrastructure and application monitoring [🔗Link](https://cloud.google.com/monitoring/) [🔗Link](https://cloud.google.com/monitoring/docs/)\n- **Cloud Profiler**: CPU and heap profiling [🔗Link](https://cloud.google.com/profiler/) [🔗Link](https://cloud.google.com/profiler/docs/)\n- **Cloud Trace**: App performance insights [🔗Link](https://cloud.google.com/trace/) [🔗Link](https://cloud.google.com/trace/docs/)\n- **Transparent SLIs**: Monitor GCP services [🔗Link](https://cloud.google.com/transparent-sli/) [🔗Link](https://cloud.google.com/apis/docs/monitoring/)\n \n### Developer Tools\n\n- **Cloud Build**: Continuous integration/delivery platform [🔗Link](https://cloud.google.com/cloud-build/) [🔗Link](https://cloud.google.com/cloud-build/docs/)\n- **Cloud Code for IntelliJ**: IntelliJ GCP tools [🔗Link](https://cloud.google.com/intellij/)\n- **Cloud Code for VS Code**: VS Code GCP tools [🔗Link](https://cloud.google.com/code/docs/vscode/)\n- **Cloud Code**: Cloud native IDE extensions [🔗Link](https://cloud.google.com/code/) [🔗Link](https://cloud.google.com/code/docs/)\n- **Cloud Scheduler**: Managed cron job service [🔗Link](https://cloud.google.com/scheduler/) [🔗Link](https://cloud.google.com/scheduler/docs/)\n- **Cloud SDK**: CLI for GCP [🔗Link](https://cloud.google.com/sdk/) [🔗Link](https://cloud.google.com/sdk/docs/)\n- **Cloud Shell**: Browser-based terminal/CLI [🔗Link](https://cloud.google.com/shell/) [🔗Link](https://cloud.google.com/shell/docs/)\n- **Cloud Source Repositories**: Hosted private git repos [🔗Link](https://cloud.google.com/source-repositories/) [🔗Link](https://cloud.google.com/source-repositories/docs/)\n- **Cloud Tasks**: Asynchronous task execution [🔗Link](https://cloud.google.com/tasks/) [🔗Link](https://cloud.google.com/tasks/docs/)\n- **Cloud Tools for Eclipse**: Eclipse GCP tools [🔗Link](https://cloud.google.com/eclipse/docs/)\n- **Cloud Tools for Visual Studio**: Visual Studio GCP tools [🔗Link](https://cloud.google.com/visual-studio/)\n- **Container Analysis**: Automated security scanning [🔗Link](https://cloud.google.com/container-registry/docs/container-analysis) [🔗Link](https://cloud.google.com/container-registry/docs/)\n- **Container Registry**: Private container registry/storage [🔗Link](https://cloud.google.com/container-registry/) [🔗Link](https://cloud.google.com/container-registry/docs/)\n- **Artifact Registry**: Universal package manager [🔗Link](https://cloud.google.com/artifacts/) [🔗Link](https://cloud.google.com/artifacts/)\n- **Gradle App Engine Plugin**: Gradle App Engine plugin [🔗Link](https://github.com/GoogleCloudPlatform/app-gradle-plugin)\n- **Maven App Engine Plugin**: Maven App Engine plugin [🔗Link](https://github.com/GoogleCloudPlatform/app-maven-plugin)\n \n### Migration to GCP\n\n- **BigQuery Data Transfer Service**: Bulk import analytics data [🔗Link](https://cloud.google.com/bigquery/transfer/) [🔗Link](https://cloud.google.com/bigquery/transfer/docs/)\n- **Cloud Data Transfer**: Data migration tools/CLI [🔗Link](https://cloud.google.com/products/data-transfer/)\n- **Google Transfer Appliance**: Rentable data transport box [🔗Link](https://cloud.google.com/transfer-appliance/) [🔗Link](https://cloud.google.com/transfer-appliance/docs/)\n- **Migrate for Anthos**: Migrate VMs to GKE containers [🔗Link](https://cloud.google.com/migrate/anthos/) [🔗Link](https://cloud.google.com/migrate/anthos/docs/getting-started)\n- **Migrate for Compute Engine**: Compute Engine migration tools [🔗Link](https://cloud.google.com/migrate/compute-engine/) [🔗Link](https://cloud.google.com/velostrata/docs/)\n- **Migrate from Amazon Redshift**: Migrate from Redshift to BigQuery [🔗Link](https://cloud.google.com/bigquery/docs/redshift-migration)\n- **Migrate from Teradata**: Migrate from Teradata to BigQuery [🔗Link](https://cloud.google.com/solutions/migration/td2bq/td-bq-migration-overview)\n- **Storage Transfer Service**: Online/on-premises data transfer [🔗Link](https://cloud.google.com/storage-transfer-service/)\n- **VM Migration**: VM migration tools [🔗Link](https://cloud.google.com/vm-migrate/)\n- **Cloud Foundation Toolkit**: Infrastructure as Code templates [🔗Link](https://cloud.google.com/foundation-toolkit)\n \n### API Platform and Ecosystems\n\n- **API Analytics**: API metrics [🔗Link](https://cloud.google.com/api-analytics/)\n- **API Monetization**: Monetize APIs [🔗Link](https://cloud.google.com/api-monetization/)\n- **Apigee API Platform**: Develop, secure, monitor APIs [🔗Link](https://cloud.google.com/apigee-api-management/)\n- **Apigee Hybrid**: Manage hybrid/multi-cloud API environments [🔗Link](https://cloud.google.com/apigee/api-management/hybrid/)[🔗Link](https://docs.apigee.com/hybrid/beta2)\n- **Apigee Sense**: API protection from attacks [🔗Link](https://cloud.google.com/apigee-sense/)\n- **Cloud Endpoints**: Cloud API gateway [🔗Link](https://cloud.google.com/endpoints/)\n- **Cloud Healthcare API**: Healthcare system GCP interoperability [🔗Link](https://cloud.google.com/healthcare-api/)\n- **Developer Portal**: API management portal [🔗Link](https://cloud.google.com/developer-portal/)\n- **GCP Marketplace**: Partner &amp; open source marketplace [🔗Link](https://cloud.google.com/marketplace/)\n \n### Google Maps Platform\n\n- **Directions API**: Get directions between locations [🔗Link](https://developers.google.com/maps/documentation/directions/)\n- **Distance Matrix API**: Multi-origin/destination travel times [🔗Link](https://developers.google.com/maps/documentation/distance-matrix/intro)\n- **Geocoding API**: Convert address to/from coordinates [🔗Link](https://developers.google.com/maps/documentation/geocoding/)\n- **Geolocation API**: Derive location without GPS [🔗Link](https://developers.google.com/maps/documentation/geolocation/)\n- **Maps Embed API**: Display iframe embedded maps [🔗Link](https://developers.google.com/maps/documentation/embed/)\n- **Maps JavaScript API**: Dynamic web maps [🔗Link](https://developers.google.com/maps/documentation/javascript/)\n- **Maps SDK for Android**: Maps for Android apps [🔗Link](https://developers.google.com/maps/documentation/android-sdk/)\n- **Maps SDK for iOS**: Maps for iOS apps [🔗Link](https://developers.google.com/maps/documentation/ios-sdk/)\n- **Maps Static API**: Display static map images [🔗Link](https://developers.google.com/maps/documentation/maps-static/)\n- **Maps SDK for Unity**: Unity SDK for games [🔗Link](https://cloud.google.com/maps-platform/gaming/)\n- **Maps URLs**: URL scheme for maps [🔗Link](https://developers.google.com/maps/documentation/urls/)\n- **Places API**: Rest-based Places features [🔗Link](https://developers.google.com/places/web-service/)\n- **Places Library, Maps JS API**: Places features for web [🔗Link](https://developers.google.com/maps/documentation/javascript/places)\n- **Places SDK for Android**: Places features for Android [🔗Link](https://developers.google.com/places/android-sdk/)\n- **Places SDK for iOS**: Places feature for iOS [🔗Link](https://developers.google.com/places/ios-sdk/)\n- **Roads API**: Convert coordinates to roads [🔗Link](https://developers.google.com/maps/documentation/roads/)\n- **Street View Static API**: Static street view images [🔗Link](https://developers.google.com/maps/documentation/streetview/)\n- **Street View Service**: Street view for JavaScript [🔗Link](https://developers.google.com/maps/documentation/javascript/streetview/)\n- **Time Zone API**: Convert coordinates to timezone [🔗Link](https://developers.google.com/maps/documentation/timezone/)\n \n### G Suite Platform\n\n- **Admin SDK**: Manage G Suite resources [🔗Link](https://developers.google.com/admin-sdk)\n- **AMP for Email**: Dynamic interactive email [🔗Link](https://developers.google.com/gmail)\n- **Apps Script**: Extend and automate everything [🔗Link](https://developers.google.com/apps-script/)\n- **Calendar API**: Create and manage calendars [🔗Link](https://developers.google.com/calendar/)\n- **Classroom API**: Provision and manage classrooms [🔗Link](https://developers.google.com/classroom)\n- **Cloud Search**: Unified search for enterprise [🔗Link](https://developers.google.com/cloud-search/docs/guides/)\n- **Docs API**: Create and edit documents [🔗Link](https://developers.google.com/docs/api/)\n- **Drive Activity API**: Retrieve Google Drive activity [🔗Link](https://developers.google.com/drive/activity/)\n- **Drive API**: Read and write files [🔗Link](https://developers.google.com/drive/)\n- **Drive Picker**: Drive file selection widget [🔗Link](https://developers.google.com/picker/)\n- **Email Markup**: Interactive email using schema.org [🔗Link](https://developers.google.com/gmail/markup/)\n- **G Suite Add-ons**: Extend G Suite apps [🔗Link](https://developers.google.com/gsuite/add-ons)\n- **G Suite Marketplace**: Storefront for integrated applications [🔗Link](https://developers.google.com/gsuite/marketplace/)\n- **Gmail API**: Enhance Gmail [🔗Link](https://developers.google.com/gmail/)\n- **Hangouts Chat Bots**: Conversational bots in chat [🔗Link](https://developers.google.com/hangouts/chat/)\n- **People API**: Manage user’s Contacts [🔗Link](https://developers.google.com/people/)\n- **Sheets API**: Read and write spreadsheets [🔗Link](https://developers.google.com/sheets/api/)\n- **Slides API**: Create and edit presentations [🔗Link](https://developers.google.com/slides/)\n- **Task API**: Search, read &amp; update Tasks [🔗Link](https://developers.google.com/tasks/)\n- **Vault API**: Manage your organization’s eDiscovery [🔗Link](https://developers.google.com/vault/)\n \n### Mobile (Firebase)\n\n- **Cloud Firestore**: Document store and sync [🔗Link](https://firebase.google.com/products/firestore/)\n- **Cloud Functions for Firebase**: Event-driven serverless applications [🔗Link](https://firebase.google.com/products/functions/)\n- **Cloud Storage for Firebase**: Object storage and serving [🔗Link](https://firebase.google.com/products/storage/)\n- **Crashlytics**: Crash reporting and analytics [🔗Link](https://fabric.io/kits/android/crashlytics/summary)\n- **Firebase A/B Testing**: Create A/B test experiments [🔗Link](https://firebase.google.com/products/ab-testing/)\n- **Firebase App Distribution**: Trusted tester early access [🔗Link](https://firebase.google.com/products/app-distribution/)\n- **Firebase Authentication**: Drop-in authentication [🔗Link](https://firebase.google.com/products/auth/)\n- **Firebase Cloud Messaging**: Send device notifications [🔗Link](https://firebase.google.com/products/cloud-messaging/)\n- **Firebase Dynamic Links**: Link to app content [🔗Link](https://firebase.google.com/products/dynamic-links/)\n- **Firebase Extensions**: Pre-packaged development solutions [🔗Link](https://firebase.google.com/products/extensions)\n- **Firebase Hosting**: Web hosting with CDN/SSL [🔗Link](https://firebase.google.com/products/hosting/)\n- **Firebase In-App Messaging**: Send in-app contextual messages [🔗Link](https://firebase.google.com/products/in-app-messaging/)\n- **Firebase Performance Monitoring**: App/web performance monitoring [🔗Link](https://firebase.google.com/products/performance/)\n- **Firebase Predictions**: Predict user targeting [🔗Link](https://firebase.google.com/products/predictions/)\n- **Firebase Realtime Database**: Real-time data synchronization [🔗Link](https://firebase.google.com/products/realtime-database/)\n- **Firebase Remote Config**: Remotely configure installed apps [🔗Link](https://firebase.google.com/docs/remote-config/)\n- **Firebase Test Lab**: Mobile testing device farm [🔗Link](https://firebase.google.com/docs/test-lab/)\n- **Google Analytics for Firebase**: Mobile app analytics [🔗Link](https://firebase.google.com/products/analytics/)\n- **ML Kit for Firebase**: ML APIs for mobile [🔗Link](https://firebase.google.com/products/ml-kit/)\n \n### Additional Resources\n\n- **Google Cloud Home Page**: [🔗Link](https://cloud.google.com/)\n- **Google Cloud Blog**: [🔗Link](https://cloud.google.com/blog)\n- **Google Cloud Open Source**: [🔗Link](https://opensource.google/projects/list/cloud)\n- **GCP Medium Publication**: [🔗Link](https://medium.com/google-cloud)\n- **Apigee Blog**: [🔗Link](https://apigee.com/about/blog)\n- **Firebase Blog**: [🔗Link](https://firebase.googleblog.com/)\n- **G Suite Developers Blog**: [🔗Link](https://gsuite-developers.googleblog.com/)\n- **G Suite GitHub**: [🔗Link](https://github.com/gsuitedevs)\n- **G Suite Twitter**: [🔗Link](https://twitter.com/gsuitedevs)\n- **Google Cloud Certifications**: [🔗Link](https://cloud.google.com/certification)\n- **Google Cloud System Status**: [🔗Link](https://status.cloud.google.com/)\n- **Google Cloud Training**: [🔗Link](https://cloud.google.com/training)\n- **Google Developers Blog**: [🔗Link](https://developers.googleblog.com/)\n- **Google Maps Platform Blog**: [🔗Link](https://mapsplatform.googleblog.com/)\n- **Google Open Source Blog**: [🔗Link](https://opensource.googleblog.com/)\n- **Google Security Blog**: [🔗Link](https://security.googleblog.com/)\n- **Kaggle Home Page**: [🔗Link](https://www.kaggle.com/)\n- **Kubernetes Blog**: [🔗Link](https://kubernetes.io/blog)\n- **Regions and Network Map**: [🔗Link](https://cloud.google.com/about/locations)\n \n### Everything below is not included in the PDFs/PNGs due to space limitations\n\n### Additional Resources\n\n- **Source for this document**: [🔗Link](https://4words.dev/)\n- **Google Cloud Solutions Library**: [🔗Link](https://cloud.google.com/solutions/)\n- **G Suite Solutions Gallery**: [🔗Link](https://developers.google.com/gsuite/solutions)\n- **Google Cloud Support Hub**: [🔗Link](https://cloud.google.com/support-hub/)\n- **GCP Pricing**: [🔗Link](https://cloud.google.com/pricing/)\n- **GCP Pricing Calculator**: [🔗Link](https://cloud.google.com/products/calculator/)\n- **Qwiklabs Home Page**: [🔗Link](https://www.qwiklabs.com/)\n- **Codelabs Home Page**: [🔗Link](https://codelabs.developers.google.com/)\n- **YouTube Channels**: \n  - **Google Cloud**: [🔗Link](https://www.youtube.com/channel/UCTMRxtyHoE3LPcrl-kT4AQQ)\n  - **Google Cloud Technical**: [🔗Link](https://www.youtube.com/user/googlecloudplatform)\n  - **G Suite**: [🔗Link](https://www.youtube.com/user/GoogleApps)\n  - **Google Developer’s**: [🔗Link](https://www.youtube.com/user/GoogleDevelopers)\n  - **Firebase**: [🔗Link](https://www.youtube.com/user/Firebase)\n- **Podcasts**: \n  - **Google Cloud Podcast**: [🔗Link](https://gcppodcast.com/)\n  - **Kubernetes Podcast**: [🔗Link](https://kubernetespodcast.com/)\n- **Reddit**: \n  - **/r/googlecloud**: [🔗Link](https://www.reddit.com/r/googlecloud/)\n  - **/r/AppEngine**: [🔗Link](https://www.reddit.com/r/AppEngine/)\n  - **/r/bigquery**: [🔗Link](https://www.reddit.com/r/bigquery/)\n  - **/r/dataflow**: [🔗Link](https://www.reddit.com/r/dataflow/)\n  - **/r/firebase**: [🔗Link](https://www.reddit.com/r/firebase/)\n  - **/r/GoogleAppsScript**: [🔗Link](https://www.reddit.com/r/GoogleAppsScript/)\n- **Big Data / Data Analytics Product Comparisons**: [🔗Link](https://cloud.google.com/products/big-data)\n- **Compute Product Comparisons**: [🔗Link](https://cloud.google.com/products/databases)\n- **Database Product Comparisons**: [🔗Link](https://cloud.google.com/products/compute)\n- **Networking Product Comparisons**: [🔗Link](https://cloud.google.com/products/networking)\n- **Storage Product Comparisons**: [🔗Link](https://cloud.google.com/products/storage)\n \n### GCP Foundational Open Source Projects\n\n- **Apache Beam**: Batch/streaming data processing [🔗Link](https://beam.apache.org/)\n- **Go**: High Concurrency Programming Language [🔗Link](https://golang.org/)\n- **gRPC**: RPC framework [🔗Link](https://grpc.io/)\n- **gVisor**: Secure container runtime [🔗Link](https://github.com/google/gvisor)\n- **Istio**: Connect and secure services [🔗Link](https://istio.io/)\n- **Knative**: Serverless framework for Kubernetes [🔗Link](https://github.com/knative)\n- **Kubeflow**: ML toolkit for Kubernetes [🔗Link](https://www.kubeflow.org/)\n- **Kubernetes**: Management of containerized applications [🔗Link](https://kubernetes.io/)\n- **OpenCensus**: Cloud native observability framework [🔗Link](https://opencensus.io/)\n- **TensorFlow**: ML framework [🔗Link](https://www.tensorflow.org/)\n \n### Platform Comparisons\n\n- **Google Cloud Platform for AWS Professionals**: [🔗Link](https://cloud.google.com/docs/compare/aws/)\n- **Google Cloud Platform for Azure Professionals**: [🔗Link](https://cloud.google.com/docs/compare/azure/)\n- **Google Cloud Platform for Data Center Professionals**: [🔗Link](https://cloud.google.com/docs/compare/data-centers/)\n- **Google Cloud Platform for OpenStack Users**: [🔗Link](https://cloud.google.com/docs/compare/openstack/)\n \n### Language Specific Documentation\n\n- **Apps Script**: [🔗Link](https://developers.google.com/apps-script)\n- **Java**: [🔗Link](https://cloud.google.com/java/docs/)\n- **Node.js**: [🔗Link](https://cloud.google.com/nodejs/docs/)\n- **Python**: [🔗Link](https://cloud.google.com/python/docs/)\n- **Go**: [🔗Link](https://cloud.google.com/go/docs/)\n- **Ruby**: [🔗Link](https://cloud.google.com/ruby/docs/)\n- **PHP**: [🔗Link](https://cloud.google.com/php/docs/)\n- **.NET/C#**: [🔗Link](https://cloud.google.com/dotnet/docs/)\n ",
    "iso8601Date": "2020-09-16T16:15:45-04:00",
    "basename": "google-cloud-reference"
  },
  "kinsta-saved-codingcatdevs-lms-dream-after-3-others-failed": {
    "title": "Kinsta saved CodingCatDev&#8217;s LMS dream after 3 others failed!",
    "date": "2020-11-10T10:05:59+00:00",
    "status": "publish",
    "permalink": "/kinsta-saved-codingcatdevs-lms-dream-after-3-others-failed",
    "author": "Alex",
    "excerpt": "",
    "type": "post",
    "id": 1690,
    "thumbnail": "/v1605119203/ccd-cloudinary/600x300-developers-light/600x300-developers-light-150x150.jpg",
    "category": [
      "CodingCatDev"
    ],
    "tag": [
      "Hosting",
      "Kinsta",
      "wordpress"
    ],
    "post_format": [],
    "preview": "<figure class=\"wp-block-image size-large\">[![Kinsta we love …",
    "content": "\n<figure class=\"wp-block-image size-large\">[![Kinsta we love developers](/v1605119203/ccd-cloudinary/600x300-developers-light/600x300-developers-light.jpg)](https://kinsta.com?kaid=XIIHFPADWOKE)</figure>After two weeks of moving CodingCatDev from Kinsta to WPEngine to Flywheel, and AWS we are back on Kinsta.\n\nKinsta Plan\n-----------\n\nI am still not sure if we will need the [Business 1 Plan](https://kinsta.com/plans/) but looking at the options and the fact I was hosting other sites I decided to consolidate. I then moved one site with the free migration offering and another old, simple site I moved myself.\n\n<figure class=\"wp-block-image size-large\">[![](/w_1024,h_681,c_scale/v1604999580/ccd-cloudinary/image_1693464a5/image-1024x681.png)](https://kinsta.com/plans/?kaid=XIIHFPADWOKE)<figcaption>Kinsta Business Plan</figcaption></figure>The great thing is that Kinsta Business also has 3 Premium migration credits as well, which will allow me to bring on two additional hosting sites. I have a couple in the pipeline so hopefully that will come soon enough and then we can push towards the next tier.\n\n<figure class=\"wp-block-image size-large\">[![](/v1604999845/ccd-cloudinary/image_1696b0d3e/image_1696b0d3e.png)](https://kinsta.com/knowledgebase/wordpress-migrations/?kaid=XIIHFPADWOKE)<figcaption>Free Migrations</figcaption></figure>One of the biggest reasons that I chose Business 1 was that it was the first plan that allows for 4 php workers, which I think is the reason for such great performance while running our new [BuddyBoss](https://www.buddyboss.com/) based [LearnDash](https://learndash.idevaffiliate.com/976.html) site.\n\n<figure class=\"wp-block-image size-large\">[![](/w_1024,h_566,c_scale/v1604999581/ccd-cloudinary/image-1_169428277/image-1-1024x566.png)](https://kinsta.com/plans/?kaid=XIIHFPADWOKE)<figcaption>Kinsta PHP workers per site</figcaption></figure>### Kinsta is on Google Cloud Platform\n\n<figure class=\"wp-block-image size-large\">![Kinsta GCP](/v1605119727/ccd-cloudinary/300x600-optimized-dark/300x600-optimized-dark.jpg)<figcaption><https://kinsta.com/blog/google-cloud-hosting/?kaid=XIIHFPADWOKE></figcaption></figure>I personally love Google Cloud Platform since I am a Firebase GDE! Here are all the locations that you can choose from. Find out more detail in [Top 7 Advantages of Choosing Google Cloud Hosting](https://kinsta.com/blog/google-cloud-hosting/?kaid=XIIHFPADWOKE)\n\nYou are free to choose from the following 24 [data centers](https://kinsta.com/knowledgebase/best-data-center/) for your WordPress websites:\n\n1. Council Bluffs, Iowa, USA (us-central1)\n2. St. Ghislain, Belgium (europe-west1)\n3. Changhua County, Taiwan (asia-east1)\n4. Sydney, Australia (australia-southeast1)\n5. The Dalles, Oregon, USA (us-west1)\n6. Salt Lake City, USA (us-west3)\n7. Ashburn, Virginia, USA (us-east4)\n8. Moncks Corner, South Carolina, USA (us-east1)\n9. São Paulo, Brazil (southamerica-east1)\n10. London, UK (europe-west2)\n11. Frankfurt, Germany (europe-west3)\n12. Jurong West, Singapore (asia-southeast1)\n13. Tokyo, Japan (asia-northeast1)\n14. Mumbai, India (asia-south1)\n15. Montréal, Canada (northamerica-northeast1)\n16. Eemshaven, Netherlands (europe-west4)\n17. Hamina, Finland (europe-north1)\n18. Los Angeles, California (us-west2)\n19. Hong Kong (asia-east2)\n20. Zürich, Switzerland (europe-west6)\n21. Osaka, Japan (asia-northeast2)\n22. Seoul, South Korea (asia-northeast3)\n23. Las Vegas, Nevada, USA (us-west4)\n24. Jakarta, Indonesia (asia-southeast2)\n\nWPEngine\n--------\n\nInitially I thought I could get better performance at a lower cost and I thought I might utilize Genesis Framework which is included to see some real gains on the site. What I found was without a tailored LearnDash and BBPress explicit theme this became very difficult. While I liked what I was experiencing I wasn’t getting the gains that I had hoped for and I found their admin interface difficult to use.\n\n<figure class=\"wp-block-image size-large\">![](/w_874,h_1024,c_scale/v1605001356/ccd-cloudinary/image_169809906/image-874x1024.png)<figcaption>WP Enginge Pricing</figcaption></figure>Flywheel (getflywheel)\n----------------------\n\nAfter digging in some more I read that [WP Engine](https://wpengine.com/blog/wp-engine-to-acquire-flywheel/) acquired [Flywheel](https://getflywheel.com/) and that they were offering some amazing pricing for their tiny plan. When I first looked into this I thought this would be great to do some initial testing. Flywheel has really [competitive base plans](https://getflywheel.com/pricing/) that I think would work really well for a static WordPress site that just needs some solid SEO and fast CDN, but CodingCatDev is a very dynamic site that needs a lot of CPU, memory and PHP workers.\n\n<figure class=\"wp-block-image size-large\">![](/w_1024,h_973,c_scale/v1605001549/ccd-cloudinary/image_17002c4f8/image-1024x973.png)<figcaption>Flywheel Pricing</figcaption></figure>What irritated me the most about the Flywheel is that the seemed to hide aspects of their infrastructure from me, they placed arbitrary limits on something that should be so simple. As you can see here they too are hosted on Google Cloud Platform and based on this diagram I was given should have a compelling and solid solution. Unfortunately after requesting logs to be emailed to myself for the 10th time I ultimately gave up on this hosting dream.\n\n<figure class=\"wp-block-image size-large\">![](/w_1024,h_971,c_scale/v1605002007/ccd-cloudinary/image_1702c8580/image-1024x971.png)</figure>AWS Direct Hosting\n------------------\n\nThe entire goal of running CodingCatDev on WordPress was to simplify all of this for other Authors (Instructors) to start coming to the site and allowing them to build their own Courses to sell. So I left AWS pretty far down my list as I don’t want to spend my time with maintaining all of this Infrastructure. I already have a day job that keeps me busy enough with AWS Amplify and serverless framework.  \n  \nHowever, after I read this Dev blog on [Best Practices for Running WordPress on AWS using CDK](https://dev.to/aws-builders/best-practices-for-running-wordpress-on-aws-using-cdk-aj9). I had to at least give it a try and see how much it would cost each month. [Mike Ng](https://dev.to/mike_ng) has a pretty awesome solution laid out using AWS CDK and provides a [Github repo](https://github.com/MikletNg/aws-serverless-wordpress).\n\n<figure class=\"wp-block-image\">![architecture-diagram-v2.png](https://github.com/MikletNg/aws-serverless-wordpress/blob/master/doc/architecture-diagram-v2.png?raw=true)<figcaption>Architecture Diagram for WordPress from CDK</figcaption></figure>Although I think this is an amazing solution and I think if I spent enough time on it, this would be a great turnkey solution for any client of mine. I hit a roadblock early on with CloudFormation and decided this is why I want managed hosting digging through the 187 resource this creates and making sure I have Route 53 and all the security setup correctly is still a waste of our time, again we need content and Authors!\n\n<figure class=\"wp-block-image size-large\">![](/w_1024,h_504,c_scale/v1605002760/ccd-cloudinary/image_170447e74/image-1024x504.png)<figcaption>AWS CloudFormation fail.</figcaption></figure>Summary\n-------\n\nHere is what I now know, if you have a solution that is working for a decent price, stick with it and it will pay off in the end! This in no way shape or form makes any of the other solutions bad, just not the right one for CodingCatDev.",
    "iso8601Date": "2020-11-10T05:05:59-05:00",
    "basename": "kinsta-saved-codingcatdevs-lms-dream-after-3-others-failed"
  },
  "moving-to-wordpress": {
    "title": "Excited for move to WordPress",
    "date": "2020-10-26T18:49:27+00:00",
    "status": "publish",
    "permalink": "/moving-to-wordpress",
    "author": "Alex Patterson",
    "excerpt": "",
    "type": "post",
    "id": 1306,
    "thumbnail": "/v1603737065/ccd-cloudinary/Wordpress/Wordpress-150x150.png",
    "category": [
      "CodingCatDev"
    ],
    "tag": [
      "wordpress"
    ],
    "post_format": [],
    "rank_math_description": [
      "CodingCatDev has moved over to Wordpress in 2020. We still love JAMStack but find out why we decided it was time to embrace a trusted solution."
    ],
    "preview": "Why is CodingCatDev switching to WordPress …",
    "content": "\nWhy is CodingCatDev switching to WordPress\n------------------------------------------\n\nCodingCatDev has been using [Sanity.io](https://www.sanity.io/ \"Sanity.io\") and [Firebase](https://firebase.com/ \"Firebase\") for the backend, [Gatsby](https://www.gatsbyjs.com/ \"Gatsby\") for the frontend and [Google Cloud Platform](https://cloud.google.com/ \"Google Cloud Platform\")&gt; for the build pipeline. It resulted in an absolutely blazing fast site with fantastic Search Engine Optimization and Social Meta Data.\n\n**So why would we switch?**\n\nThe main goal for CodingCatDev is to allow others (not just Alex) to create wonderful Courses, Lessons, and Tutorials. Unfortunately, at the time of writing this Sanity.io does not allow for [fine grained access control](https://www.sanity.io/docs/access-control#custom-access-control). We were also looking into making changes to create content that is Server Side Rendered (SSR) so that authors are able to securely create courses that they can monetize. In the old world these were controlled using Firebase and the solution was not working as well as we had hoped when creating it. There were several Cloud Functions that were required to keep Stripe payments and subscriptions safe. On top of this we were tweaking the design to show progress indicators and other nice features that a Learning Managment System (LMS) should have. CodingCatDev shouldn’t be an all or nothing solution either when it comes to taking courses. While much of the site has been created so that our Pro members get the greatest benefits, we also want to allow people to by package deals for a given track, or just a single class. This comes with a great deal of complexity that others have already solved.\n\nContent Management System\n-------------------------\n\nKnowing the only reason that we left Sanity.io was because of the fine grained control restriction we did a lot of research on CMS platforms that might do the trick and the only two that we could find (at the base level) were [Dato CMS](https://www.datocms.com/pricing/compare \"Dato CMS\") and [Flamelink](https://flamelink.io/features \"Flamelink\").\n\nFor one of our upcoming courses [AngularFire Master Course](/angularfire-master-course/) we will actually build a CMS that handles a great deal of these challenges and is backed by Firebase, but it wasn’t ready for full consumption.\n\nLearning Management System\n--------------------------\n\nWe did extensive research with all of the hosted solutions that are available today including\n\n- [Learnworlds](http://https://www.learnworlds.com/ \"Learnworlds\")\n- [Thinkific](https://www.thinkific.com/ \"Thinkific\")\n- [Teachable](https://teachable.com/ \"Teachable\")\n- [Podia](https://www.podia.com/ \"Podia\")\n\nMany of this solutions would have worked but ultimately we felt that for long term success we needed to have control over the system that hosts our content. We don’t want to be stuck in a situation where a hosted LMS company fails and we lose decades worth of peoples work.\n\n### LMS Goals\n\n- Allow for structured content\n- Progress for students\n- Lessons that allow quizzes, videos, and any embeddable content\n- Allow creation of content using Markdown or Block coding (for advanced or beginner)\n- Unlimited course hosting with no upsell requirements\n- Unlimited users\n- Certificates\n- Badges\n\nSpecific CodingCatDev Requirements\n----------------------------------\n\nOne of our biggest feature requests when moving to an LMS was to allow progress to be shown for the end users for each course.\n\n![Progress of Course shown.](/f_auto,q_auto/w_217,h_300,c_scale,f_auto/v1603737569/codingcat.dev/image-1603737568572/image-1603737568572-217x300.png)\n\nWe also wanted to allow for copying code blocks more easily so this was a must have for a technical project\n\n```javascript\n  <script>\n    alert( 'Hello, world!' );\n  </script>\n```\n\nWordPress with Learndash\n------------------------\n\nWe ultimately decided that Learndash checked all of the boxes! So far it was easy to move all of the content from Sanity.io (after some GROQ magic). I think it will be in CCD’s best interest so that we can continue to grow the platform at large.\n\nJust like anyone who has re-written their personal blog using several methods this will come with a learning curve, as we currently have no one on staff that can customize WordPress.\n\nAs I always say the web is fun, so we will learn together on this journey!!",
    "iso8601Date": "2020-10-26T14:49:27-04:00",
    "basename": "moving-to-wordpress"
  },
  "p1625": {
    "title": "AWS Video Transcoding for WordPress",
    "date": "2020-10-30T15:15:53+00:00",
    "status": "draft",
    "permalink": "/?p=1625",
    "author": "Alex Patterson",
    "excerpt": "",
    "type": "post",
    "id": 1625,
    "category": [
      "Uncategorized"
    ],
    "tag": [],
    "post_format": [],
    "preview": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" …",
    "content": "\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\">\n<?xml encoding=\"UTF-8\">\n",
    "iso8601Date": "2020-10-30T11:15:53-04:00",
    "basename": "p1625"
  },
  "p1653": {
    "title": "Private Videos for AWS S3 on WordPress",
    "date": "2020-11-03T17:39:23+00:00",
    "status": "draft",
    "permalink": "/?p=1653",
    "author": "Alex Patterson",
    "excerpt": "",
    "type": "post",
    "id": 1653,
    "category": [
      "Uncategorized"
    ],
    "tag": [],
    "post_format": [],
    "amp_pb_compatibility": [
      "a:2:{s:5:\"title\";i:0;s:7:\"comment\";i:0;}"
    ],
    "ampforwp_custom_content_editor": [
      ""
    ],
    "ampforwp_custom_content_editor_checkbox": [
      null
    ],
    "ampforwp-amp-on-off": [
      "default"
    ],
    "preview": "<div class=\"wp-block-s3mm-s3media\">[s3mm type=”video” …",
    "content": "\n<div class=\"wp-block-s3mm-s3media\">[s3mm type=”video” files=”Black_Cat_In_The_Courtyard_0734 (1).mp4″ titles=”Transcoded?” quality=”1080P,720P,480P,360P” /]</div>One of the main reasons we switched over to WordPress was to allow our instructors to upload their videos so that we don’t have to utilize YouTube which others can access by the link even when it is unlisted. The problem is getting those videos hosted and transcoded, while also protecting the content.\n\nS3 Media Maestro\n----------------\n\nIn steps S3 Media Maestro which allows easy uploading and transcoding. The video of this cool black cat, yeah not AJ our mascot, but still really cool, was a single MP4 at a high bitrate. This was transcoded using AWS and produces 4 different resolutions to allow the viewer to select from. I am still trying to see if there is a way that",
    "iso8601Date": "2020-11-03T12:39:23-05:00",
    "basename": "p1653"
  },
  "p1668": {
    "title": "",
    "date": "2020-11-04T23:49:10+00:00",
    "status": "draft",
    "permalink": "/?p=1668",
    "author": "Alex",
    "excerpt": "",
    "type": "post",
    "id": 1668,
    "category": [
      "Uncategorized"
    ],
    "tag": [],
    "post_format": [],
    "amp_pb_compatibility": [
      "a:2:{s:5:\"title\";i:0;s:7:\"comment\";i:0;}"
    ],
    "ampforwp_custom_content_editor": [
      ""
    ],
    "ampforwp_custom_content_editor_checkbox": [
      null
    ],
    "ampforwp-amp-on-off": [
      "default"
    ],
    "preview": "![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/46ff1d …",
    "content": "\n![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/46ff1d30-7d80-423d-8644-e652e8a13ba2/Amplify_with_Cloudinary.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/46ff1d30-7d80-423d-8644-e652e8a13ba2/Amplify_with_Cloudinary.png)\n\nAWS Amplify\n-----------\n\n![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/bdb48921-5fee-47a7-8d84-3c21ac7ba138/Screen_Shot_2020-11-04_at_1.54.33_PM.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/bdb48921-5fee-47a7-8d84-3c21ac7ba138/Screen_Shot_2020-11-04_at_1.54.33_PM.png)\n\n[https://aws.amazon.com/amplify/getting-started/?nc=sn&amp;loc=4](https://aws.amazon.com/amplify/getting-started/?nc=sn&loc=4)\n\nHave you been considering using Amplify, but your wondering how it will fit into your JAMStack Journey? Lets start off with what Amplify is described as from AWS:\n\n> AWS Amplify is a set of products and tools that enables mobile and front-end web developers to build and deploy secure, scalable full stack applications, powered by AWS. With Amplify, you can configure app backends in minutes, connect them to your app in just a few lines of code, and deploy static web apps in three steps. Get to market faster with AWS Amplify.\n\nAWS Amplify is a great tool for anyone getting started with a new web or mobile project. I am going to focus mainly on the web side in this post. What AWS Amplify does well for developers is provide you with a great platform so you can start building very quickly. One of the complaints is that it doesn’t make some of the things that should be easy, well easy. Historically when people start creating websites they will always use images and videos. This can be a pain for developers to developers because immediately you will have to start concerning yourself with performance. Yes AWS Amplify makes it very easy to load these things to a S3 bucket but from there it takes a lot more work and also costs start to add up quickly. They are continuing to improve methods for both as I showed with my post on [AWS Amplify Video](http://codingcat.dev/tutorials/aws-amplify-video/).\n\nCloudinary\n----------\n\n![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/4ad84782-8eea-42e6-a394-e08c02ac7bff/Untitled.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/4ad84782-8eea-42e6-a394-e08c02ac7bff/Untitled.png)\n\n[https://cloudinary.com/solutions/video\\_management](https://cloudinary.com/solutions/video_management)\n\n> Developers and marketers use Cloudinary to quickly and easily create, manage and deliver their digital experiences across any browser, device and bandwidth.\n\nCloudinary is known for easy media uploads and on the fly image and video transformations. This allows developers to worry less about all of the infrastructure that has to be maintained for creating great pipelines for these videos. They also provide a number of software development Kits (SDK) for all of popular platforms right now.\n\n![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/09d51c8b-b1d6-479e-9a8a-e95c1fa18f64/Untitled.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/09d51c8b-b1d6-479e-9a8a-e95c1fa18f64/Untitled.png)\n\nBuilding a Demo App\n-------------------\n\nI am going to use the React SDK and show you how you can create a great little blogging system using the Amplify for hosting the app and Cloudinary for transforming videos.\n\nIf you want to skip all the steps feel free to visit <https://github.com/CodingCatDev/amplify-jamstack-cloudinary-video.git>\n\n### Create a React Application\n\nIf you have never setup Amplify you will need an AWS account, and the below links are a great guide for your very first setup.\n\n- <https://docs.amplify.aws/> – Docs\n- <https://docs.amplify.aws/start/q/integration/react> – React Getting Started\n\nAdd amplify to your terminal using the following command.\n\n```bash\nnpm install -g @aws-amplify/cli\r\n\n```\n\nThen you will need to configure our new project.\n\n```bash\namplify configure\r\n\n```\n\nOnce these steps have been completed you can now create a new [CRA](https://reactjs.org/docs/create-a-new-react-app.html) React Application. This doesn’t have anything to do with Amplify just yet, it is a basic starting point for the application.\n\n```bash\nnpx create-react-app amplify-jamstack-cloudinary-video\r\n\n```\n\nIt will take a minute for this to finish but you should see a message like below.\n\n```\nInside that directory, you can run several commands:\r\n\r\n  yarn start\r\n    Starts the development server.\r\n\r\n  yarn build\r\n    Bundles the app into static files for production.\r\n\r\n  yarn test\r\n    Starts the test runner.\r\n\r\n  yarn eject\r\n    Removes this tool and copies build dependencies, configuration files\r\n    and scripts into the app directory. If you do this, you can’t go back!\r\n\r\nWe suggest that you begin by typing:\r\n\r\n  cd amplify-jamstack-cloudinary-video\r\n  yarn start\r\n\n```\n\nNow you can enter that directory and start the React application.\n\n```bash\ncd amplify-jamstack-cloudinary-video\r\n\n```\n\nIf you would like to see the sample running you can now run the local server by running the below command.\n\n```bash\nnpm start\r\n\n```\n\nWhen you are successful you will see that beautiful rotating React icon.\n\n![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/c62c94ca-8716-4e5c-86bb-a49c0ab76b75/Untitled.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/c62c94ca-8716-4e5c-86bb-a49c0ab76b75/Untitled.png)\n\n### Adding AWS Amplify\n\n> If you are having any issues with connecting to the correct instance make sure you check in `~/.aws` this will have your credentials listed. Also you can check [here](https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html) for more details.\n\nNow we can turn our regular React Application into an AWS Amplify Application. This starts preparing your AWS account with the needed connections to your application.\n\n```bash\namplify init\r\n\n```\n\n> A Note here if you hit enter and nothing is happening make sure you exited your local server from running by hitting `ctrl+c`\n\nPlease walk through and select all of the defaults that are provided by simply hitting enter, below are my results\n\n```\n? Enter a name for the project amplifyjamstackcloud\r\n? Enter a name for the environment dev\r\n? Choose your default editor: Visual Studio Code\r\n? Choose the type of app that you're building javascript\r\nPlease tell us about your project\r\n? What javascript framework are you using react\r\n? Source Directory Path:  src\r\n? Distribution Directory Path: build\r\n? Build Command:  npm run-script build\r\n? Start Command: npm run-script start\r\nUsing default provider  awscloudformation\r\n\n```\n\nNow select Yes, when asked if you would like to use a profile. If this is your first time you will most likely just have a default configuration/credential. However, if you do work for anything else AWS related using the AWS SDK you might have one already. So be very careful on which account (profile) you are using.\n\n```\n? Do you want to use an AWS profile? Yes\r\n? Please choose the profile you want to use (Use arrow keys)\r\n❯ default\r\n\n```\n\nYou will see a new message appear explaining that a “AWS Amplify Console app” is being added. This happens really fast so you might miss it! You may also find that your wondering “what in the world just happened?”.\n\n```\nAdding backend environment dev to AWS Amplify Console app: d2hxdxps86f74m\r\n\n```\n\nThis is one of the downsides (or upsides) of using AWS Amplify. It makes creating applications very simple, which is great by hiding a lot of the details. However, if you are detail oriented like a lot of us it can be frustrating. So what just happened here is that up in AWS a new app was created. Now if you navigate to <https://console.aws.amazon.com> you can go to the AWS Amplify service.\n\n![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/bb1c6e09-1049-427c-8a08-b69859065f0d/Untitled.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/bb1c6e09-1049-427c-8a08-b69859065f0d/Untitled.png)\n\nYou should see your new application amplifyjamstackcloud (if you named it the same)\n\n![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/fe9891e5-ac0b-4016-b8f7-223a322a300f/Untitled.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/fe9891e5-ac0b-4016-b8f7-223a322a300f/Untitled.png)\n\nIf you are not finding your app, it might be because you are in the wrong region make sure to set the correct one by using the drop down in the upper left.\n\n![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/aa84a512-597f-450a-b629-5dc0a2c1800a/Untitled.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/aa84a512-597f-450a-b629-5dc0a2c1800a/Untitled.png)\n\nNow that your app is up in the cloud if you look in General you will see that this application has that original name of `d2hxdxps86f74m` just like we saw in our console. Another thing to take a look at is your backend of `dev` that we added as well, see below where that is located as it will become more important as we continue.\n\n![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/5ee69944-fe62-49f1-860b-17f43043236b/Untitled.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/5ee69944-fe62-49f1-860b-17f43043236b/Untitled.png)\n\nThe backend for `dev` is relatively empty at this time but you will notice that AWS Amplify is using [CloudFormation](https://aws.amazon.com/cloudformation/) under the hood. This is what is known as backend as code (BaC). I won’t go into great detail what that means, so we can get onto the fun part ????\n\n![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/00e23c10-7486-47f7-83f5-7ab44b77f9da/Untitled.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/00e23c10-7486-47f7-83f5-7ab44b77f9da/Untitled.png)\n\n### Setting up the Frontend\n\nThere are some really useful tools libraries for using AWS Amplify and React. We are going to install two of those using the below command.\n\n```\nnpm install aws-amplify @aws-amplify/ui-react\r\n\n```\n\nThe `aws-amplify` package is the main library for working with Amplify in your apps. The `@aws-amplify/ui-react` package includes React specific UI components.\n\nThe next thing we need to do is tell React to import Amplify and configure it using the configuration that was created from using Amplify’s CLI tool which is located in `./aws-exports`.\n\n```jsx\nimport Amplify from \"aws-amplify\";\r\nimport awsExports from \"./aws-exports\";\r\nAmplify.configure(awsExports);\r\n\n```\n\nThats it now your app is ready to call Amplify (and inherently the AWS SDK).\n\n### Adding our Data Layer\n\nWe are going to utilize GraphQL as our database layer, if you feel more comfortable using the REST API feel free. I tend to use GraphQL because of the realtime notifications.\n\n```bash\namplify add api\r\n\n```",
    "iso8601Date": "2020-11-04T18:49:10-05:00",
    "basename": "p1668"
  },
  "p1893": {
    "title": "Creating Apps 100% Faster with AWS Amplify Admin UI",
    "date": "2020-12-01T12:00:30+00:00",
    "status": "draft",
    "permalink": "/?p=1893",
    "author": "Alex",
    "excerpt": "AWS Amplify Admin UI allows you to great apps locally. No AWS Account needed to get started and you can start completely local then go to the cloud.",
    "type": "post",
    "id": 1893,
    "category": [
      "Uncategorized"
    ],
    "tag": [],
    "post_format": [],
    "preview": "Amplify Admin\n-------------",
    "content": "\nAmplify Admin\n-------------",
    "iso8601Date": "2020-12-01T07:00:30-05:00",
    "basename": "p1893"
  },
  "sendinblue-codingcatdevs-email-solution": {
    "title": "Sendinblue is our #1 WordPress Solution for Email Marketing",
    "date": "2020-11-16T21:26:11+00:00",
    "status": "publish",
    "permalink": "/sendinblue-codingcatdevs-email-solution",
    "author": "Alex",
    "excerpt": "",
    "type": "post",
    "id": 1817,
    "thumbnail": "/v1605197374/ccd-cloudinary/5cf83d25b40c6/5cf83d25b40c6-150x150.png",
    "category": [
      "Uncategorized"
    ],
    "tag": [],
    "post_format": [],
    "rank_math_description": [
      "Sendinblue is powering CodingCatDev and we are loving it! Sendinblue provides us with all of the transactional, email campaign, and contact lists that we need."
    ],
    "pmpro_default_level": [
      "0"
    ],
    "preview": "<figure …",
    "content": "\n\n[![](https://static.tapfiliate.com/5cf83d25b40c6.png?a=50905-b26a4f&s=1231845-90ca44)](https://www.sendinblue.com/?tap_a=50905-b26a4f&tap_s=1231845-90ca44)\n\n  \nSendinblue is powering CodingCatDev and we are loving it! Sendinblue provides us with all of the transactional, email campaign, and contact lists that we need. When switching over to WordPress we knew we had to bootstrap the change pretty heavily and Sendinblue allowed us to move quickly. We would highly suggest using [Kinsta](https://codingcat.dev/kinsta-saved-codingcatdevs-lms-dream-after-3-others-failed/) with hosting your WordPress site and then using Sendinblue to facilitate all of your emails!\n\n[Download for free your complete marketing toolbox, inside WordPress.](https://www.sendinblue.com/plugins/wordpress/?tap_a=73643-ebfcfb&tap_s=1231845-90ca44)\n\n[![](https://static.tapfiliate.com/5e46882abdb24.png?a=65060-a14ec4&s=1231845-90ca44)](https://www.sendinblue.com/plugins/wordpress/?tap_a=65060-a14ec4&tap_s=1231845-90ca44)\n\n## Campaigns\n\nProbably our most favorite feature is email templates and the design app. It allows us to stay away from all of those difficult email templates that we are not used to creating. In our world we are able to use flexbox and all sorts of browser based tricks, but in email this is often not that case.  \n\n![](https://res.cloudinary.com/ajonp/images/w_1024,h_766,c_scale/v1605197946/ccd-cloudinary/image_1823b9418/image-1024x766.png)\n\nNow if you prefer to create those designs, or maybe you already have them from your previous mail client like Mailchimp, then you can choose to use the code based setup and drop them in just as easily. I am sure as our staff continues to grow we will get more sophisticated but right now we are taking the KISS approach to most of what we are working on.\n\n[![](https://static.tapfiliate.com/5cf83bcf7fe84.png?a=50902-12b953&s=1231845-90ca44)](https://www.sendinblue.com/?tap_a=50902-12b953&tap_s=1231845-90ca44)\n\nSince I have no real experience with creating a company, marketing, or branding the ability to run some A/B tests to find what is working and what is not is already starting to pay off. This provides a better experience for individuals signed up for our newsletter to get their favorite version of what we send out. Without being able to test what works and what does I would most likely be ending up in everyone's spam, which would not go very well for trying to build up a brand.\n\nAn A/B test (or split test) is a way to test how two different variations of an email campaign (A or B) perform with a portion of your recipient list. This type of testing enables you to present the \"winning\" or most successful variation of your campaign to the rest of your audience to help improve your results.   \n\nWhen creating a test, you will:\n\n- choose one element to test, such as the subject line or email content\n- select the sample size of recipients for the test (each variation will be sent to exactly half of the sample)\n- choose the method for determining the winner: best open rate or best click rate\n- set the duration for when the test should run\n\nEach recipient in your sample will receive only one of the two variations: version A or version B. After the test period, the winning variation will be selected based on your criteria (open or click rate) and will be immediately sent to the rest of your campaign's recipient list. \n\nThis process ensures the best version of your campaign is sent to the largest group of recipients.  \n  \nMake sure you find out more details in [Sendinblue's test email guide](https://help.sendinblue.com/hc/en-us/articles/360001298940-Creating-A-B-test-email-campaigns).\n\n## [![](https://static.tapfiliate.com/5cf83bcf72c73.png?a=50900-866e68&s=1231845-90ca44)](https://www.sendinblue.com/?tap_a=50900-866e68&tap_s=1231845-90ca44)\n\n## Transactional\n\nProbably the biggest reason that we use Sendinblue is the transactional capabilities that link directly from WordPress. There are a lot of systems that will do this but not with the same contacts, CRM, Campaigns also included. I did a ton of research to try and keep our costs low, while there were a few others that came in under price per email Sendinblue provided CodingCatDev with the most value!\n\n## [![](https://static.tapfiliate.com/5cf83bcf8ae9f.png?a=50903-9bcc3f&s=1231845-90ca44)](https://www.sendinblue.com/?tap_a=50903-9bcc3f&tap_s=1231845-90ca44)\n\nYou might be wondering how to integrate with WordPress, well Sendinblue has you covered there as well. They have created a very nice [plugin](https://www.sendinblue.com/plugins/wordpress/) that makes it super simple to implement. We originally created some very basic forms and have since moved to using forms within Elementor, which we think makes our forms must better looking and easier to use. You can find more details around that [here](https://www.sendinblue.com/plugins/elementor/).\n\n[![](https://static.tapfiliate.com/5cf56753af59f.png?a=50735-9a092f&s=1231845-90ca44)](https://www.sendinblue.com/?tap_a=50735-9a092f&tap_s=1231845-90ca44)\n\n## Automation\n\nMarketing automation is a software tool that allows you to automate certain tasks in your workflow by defining an automation workflow: a set of rules and conditions that trigger the actions you want to automate. These actions include sending emails and SMS messages, organizing contacts into different lists, and updating information in your contact database.\n\n[![](https://static.tapfiliate.com/5cf83bcf6e6b2.png?a=50897-6cc201&s=1231845-90ca44)](https://www.sendinblue.com/?tap_a=50897-6cc201&tap_s=1231845-90ca44)\n\n## Pricing\n\nSee for yourself, you can try it for a long time with great features, we were able to get up and rolling for free. Moving to the Lite plan has provided everything we need to grow at a rapid pace. The biggest key for use was having **UNLIMITED** contacts.\n\n![](https://codingcat.dev/wp-content/uploads/2020/11/image-390x1024.png)\n\n[![](https://static.tapfiliate.com/5cf562f6e57db.png?a=50730-b015ad&s=1231845-90ca44)](https://www.sendinblue.com?tap_a=50730-b015ad&tap_s=1231845-90ca44)\n",
    "iso8601Date": "2020-11-16T16:26:11-05:00",
    "basename": "sendinblue-codingcatdevs-email-solution"
  }
}
